[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nSession = Package.session.Session;\nPersistentSession = Package['u2622:persistent-session'].PersistentSession;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"ind_quiz.html\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// template.ind_quiz.js                                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ApplicationLayout\");                                                                             // 2\nTemplate[\"ApplicationLayout\"] = new Template(\"Template.ApplicationLayout\", (function() {                               // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze._TemplateWith(function() {                                                                            // 5\n    return \"template1\";                                                                                                // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 8\n  }), \"\\n\t\", Blaze._TemplateWith(function() {                                                                          // 9\n    return \"template2\";                                                                                                // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 12\n  }) ];                                                                                                                // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\nTemplate.__checkName(\"appBody\");                                                                                       // 16\nTemplate[\"appBody\"] = new Template(\"Template.appBody\", (function() {                                                   // 17\n  var view = this;                                                                                                     // 18\n  return HTML.DIV({                                                                                                    // 19\n    \"class\": \"container\"                                                                                               // 20\n  }, \"\\n \t\t\t\", HTML.DIV({                                                                                              // 21\n    \"class\": \"row\"                                                                                                     // 22\n  }, \"\\n \t\t\t\t\", HTML.Raw('<div class=\"col-md-3\" id=\"features\">\\n \t\t\t\t\t<h3 id=\"feat_head\"><b>Features!!</b></h3>\\n \t\t\t\t\t\\n \t\t\t\t\t\t<p>Meant for children and adults alike, the only requirement being the passion to take quizzes and learn</p>\\n \t\t\t\t\t\t<p>Take quizzes individually and learn</p>\\n \t\t\t\t\t\t<p>Take quizzes in a group with your peers and have fun</p>\\n \t\t\t\t\t\t<p>Attend regular sessions of headrush at the comfort of your place</p>\\n \t\t\t\t\t\t<p>Quizzes are provided happily by HeadRush-the quizzing club of DA-IICT</p>\\n \t\t\t\t\t\t\\n \t\t\t\t\t\\n \t\t\t\t</div>'), \"\t\\n \t\t\t\t\", HTML.Raw('<div class=\"col-md-5\">\\n \t\t\t\t\t<img class=\"img-responsive img-circle\" src=\"https://tttech.files.wordpress.com/2012/10/quiz.jpg\" alt=\"Cinque-Terre\">\\n \t\t\t\t</div>'), \"\\n \t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-4\"                                                                                                // 24\n  }, \"\\n \t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"signupForm\")), \"\\n \t\t\t\t\"), \"\\n\\n \t\t\t\"), \"\t\\n \t\t\");             // 25\n}));                                                                                                                   // 26\n                                                                                                                       // 27\nTemplate.__checkName(\"ranking\");                                                                                       // 28\nTemplate[\"ranking\"] = new Template(\"Template.ranking\", (function() {                                                   // 29\n  var view = this;                                                                                                     // 30\n  return [ Blaze.Each(function() {                                                                                     // 31\n    return Spacebars.call(view.lookup(\"userRanking\"));                                                                 // 32\n  }, function() {                                                                                                      // 33\n    return [ \"\\n\t\t\", Blaze.View(\"lookup:arr3\", function() {                                                            // 34\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 35\n    }), \"\\n\t\t\", Blaze.View(\"lookup:arr1\", function() {                                                                 // 36\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 37\n    }), \"\\n\t\t\", Blaze.View(\"lookup:arr2\", function() {                                                                 // 38\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 39\n    }), HTML.BR(), HTML.BR(), \"\\n\t\" ];                                                                                 // 40\n  }), HTML.Raw('\t\\n\\n<button type=\"submit\" class=\"btn btn-primary btn-primary btn3d\" value=\"submit\" id=\"home2\">Go back to home</button>') ];\n}));                                                                                                                   // 42\n                                                                                                                       // 43\nTemplate.__checkName(\"signupForm\");                                                                                    // 44\nTemplate[\"signupForm\"] = new Template(\"Template.signupForm\", (function() {                                             // 45\n  var view = this;                                                                                                     // 46\n  return HTML.Raw('<form id=\"signup-form\">\\n\t\t\t<h3 id=\"sub_title\">Sign Up</h3>\\n\\n\t\t\t<label for=\"signup-username\">Username</label>\\n\t\t\t<input type=\"text\" id=\"signup-username\" class=\"form-control\" placeholder=\"Username\"><br>\\n\t\t\t   \\n             \\n\t\t\t<label for=\"signup-email\">Email</label>\\n\t\t\t<input type=\"text\" id=\"signup-email\" class=\"form-control\" placeholder=\"Email\"><br>\\n\\n\t\t\t\\n\t\t\t<label for=\"signup-password\">Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-password\" class=\"form-control\" placeholder=\"Password\"><br>\\n\t\t\t\\n\t\t    \\n\t\t\t\\n\t\t\t<label for=\"signup-confirm\">Confirm Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-confirm\" class=\"form-control\" placeholder=\"Confirm password\"><br>\\n\\n\t\t\t<button class=\"btn btn-primary\" type=\"submit\">SignUp</button>\\n\\n\t\t</form>');\n}));                                                                                                                   // 48\n                                                                                                                       // 49\nTemplate.__checkName(\"emptyTemplate\");                                                                                 // 50\nTemplate[\"emptyTemplate\"] = new Template(\"Template.emptyTemplate\", (function() {                                       // 51\n  var view = this;                                                                                                     // 52\n  return \"\";                                                                                                           // 53\n}));                                                                                                                   // 54\n                                                                                                                       // 55\nTemplate.__checkName(\"waiting_time\");                                                                                  // 56\nTemplate[\"waiting_time\"] = new Template(\"Template.waiting_time\", (function() {                                         // 57\n  var view = this;                                                                                                     // 58\n  return Blaze.Unless(function() {                                                                                     // 59\n    return Spacebars.call(view.lookup(\"ended\"));                                                                       // 60\n  }, function() {                                                                                                      // 61\n    return [ \"\\n\t\", Blaze.View(\"lookup:time_left\", function() {                                                        // 62\n      return Spacebars.mustache(view.lookup(\"time_left\"));                                                             // 63\n    }), \"\\n\" ];                                                                                                        // 64\n  });                                                                                                                  // 65\n}));                                                                                                                   // 66\n                                                                                                                       // 67\nTemplate.__checkName(\"navigation\");                                                                                    // 68\nTemplate[\"navigation\"] = new Template(\"Template.navigation\", (function() {                                             // 69\n  var view = this;                                                                                                     // 70\n  return [ HTML.NAV({                                                                                                  // 71\n    \"class\": \"navbar navbar-inverse\"                                                                                   // 72\n  }, \"\\n\t\t\", HTML.DIV({                                                                                                // 73\n    \"class\": \"container-fluid\"                                                                                         // 74\n  }, \"\\n\t\t\t\", HTML.Raw('<div class=\"navbar-header\">\\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#mainNavBar\">\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t</button>\\n\t\t\t\t<a href=\"#\" class=\"navbar-brand\"><i>Quiz-o-Pedia</i></a>\\n\t\t\t</div>'), \"\\n\\n\t\t  \t\", HTML.DIV({\n    \"class\": \"collapse navbar-collapse\",                                                                               // 76\n    id: \"mainNavBar\"                                                                                                   // 77\n  }, \"\\n\t\t  \t\t\", HTML.UL({                                                                                             // 78\n    \"class\": \"nav navbar-nav\"                                                                                          // 79\n  }, \"\\n\t\t  \t\t\t\", HTML.LI({                                                                                            // 80\n    \"class\": \"active\"                                                                                                  // 81\n  }, HTML.A({                                                                                                          // 82\n    href: function() {                                                                                                 // 83\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                 // 84\n        route: \"quiz\"                                                                                                  // 85\n      }));                                                                                                             // 86\n    },                                                                                                                 // 87\n    id: \"home\"                                                                                                         // 88\n  }, \"HOME\")), \"\\n\t\t  \t\t\t\", Blaze.If(function() {                                                                      // 89\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 90\n  }, function() {                                                                                                      // 91\n    return [ \"\\n\t\t  \t\t\t\", HTML.LI(HTML.A({                                                                             // 92\n      href: function() {                                                                                               // 93\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                               // 94\n          route: \"profile1\"                                                                                            // 95\n        }));                                                                                                           // 96\n      },                                                                                                               // 97\n      id: \"profileButton\"                                                                                              // 98\n    }, \"PROFILE\")), \"\\n\t\t  \t\t\t\" ];                                                                                     // 99\n  }), \"\\n\t\t  \t\t\t\", HTML.LI(HTML.A({                                                                                    // 100\n    href: function() {                                                                                                 // 101\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                 // 102\n        route: \"rules\"                                                                                                 // 103\n      }));                                                                                                             // 104\n    },                                                                                                                 // 105\n    id: \"ruleButton\"                                                                                                   // 106\n  }, \"FAQ\")), \"\\n\t\t  \t\t\t\", Blaze.If(function() {                                                                       // 107\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 108\n  }, function() {                                                                                                      // 109\n    return [ \"\\n\t\t  \t\t\t\t\", Blaze.If(function() {                                                                       // 110\n      return Spacebars.call(view.lookup(\"isAdmin\"));                                                                   // 111\n    }, function() {                                                                                                    // 112\n      return [ \"\\n\t\t  \t\t\t\t\t\", HTML.LI(HTML.A({                                                                         // 113\n        href: function() {                                                                                             // 114\n          return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                             // 115\n            route: \"addquiz\"                                                                                           // 116\n          }));                                                                                                         // 117\n        },                                                                                                             // 118\n        id: \"addquiz\"                                                                                                  // 119\n      }, \"ADD-QUIZ\")), \"\\n\t\t  \t\t\t\t\" ];                                                                                 // 120\n    }), \"\\n\t\t  \t\t\t\" ];                                                                                                 // 121\n  }), \"\\n\t\t  \t\t\"), \"\\n\t\t\t\t\", HTML.UL({                                                                                 // 122\n    \"class\": \"nav navbar-nav navbar-right\"                                                                             // 123\n  }, \"\\n\t\t\t\t\t\", Blaze.If(function() {                                                                                  // 124\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 125\n  }, function() {                                                                                                      // 126\n    return [ \"\t\\n\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                             // 127\n      href: function() {                                                                                               // 128\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                               // 129\n          route: \"home\"                                                                                                // 130\n        }));                                                                                                           // 131\n      },                                                                                                               // 132\n      id: \"logoutbtn\"                                                                                                  // 133\n    }, \"LOGOUT\")), \"\\n\t\t\t\t\t\" ];                                                                                        // 134\n  }, function() {                                                                                                      // 135\n    return [ \"\\n\t\t\t\t\t\t\", HTML.LI(HTML.INPUT({                                                                          // 136\n      type: \"text\",                                                                                                    // 137\n      id: \"login-username\",                                                                                            // 138\n      placeholder: \"Username\"                                                                                          // 139\n    })), \"\\n\t\t\t\t\t\t\", HTML.LI(HTML.INPUT({                                                                              // 140\n      type: \"password\",                                                                                                // 141\n      id: \"login-password\",                                                                                            // 142\n      placeholder: \"Password\"                                                                                          // 143\n    })), \"\\n\t\t\t\t\t\t\", HTML.LI(HTML.BUTTON({                                                                             // 144\n      \"class\": \"btn btn-primary\",                                                                                      // 145\n      type: \"submit\",                                                                                                  // 146\n      id: \"loginbtn\"                                                                                                   // 147\n    }, \"LOGIN\")), \"\\n\t\t\t\t\t\" ];                                                                                         // 148\n  }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\"), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"yield\")) ];                  // 149\n}));                                                                                                                   // 150\n                                                                                                                       // 151\nTemplate.__checkName(\"quizSelect\");                                                                                    // 152\nTemplate[\"quizSelect\"] = new Template(\"Template.quizSelect\", (function() {                                             // 153\n  var view = this;                                                                                                     // 154\n  return [ HTML.Raw('<form class=\"quizParameters\">\\n\\n\t\t<div class=\"funkyradio\">\\n\t\t<div class=\"funkyradio-primary\">\\n\t\t\t<label>Type:</label>\\n\t\t\t<input type=\"radio\" name=\"quizType\" id=\"radio1\" value=\"Individual\" required=\"\">\\n\t\t\t<label for=\"radio1\"> Individual</label>\\n\t\t</div>\\n\t\t<div class=\"funkyradio-primary\">\\n\t\t\t<input type=\"radio\" name=\"quizType\" id=\"radio2\" value=\"Group\" required=\"\">\\n\t\t\t<label for=\"radio2\"> Group</label>\\n\t\t</div>\\n\t</div>\\n\\n\\n\t\t<div class=\"form-group\">\\n\t\t\t<label>Category</label>\\n\t\t\t<select id=\"quizCategory\">\\n\t\t\t  <option value=\"General\">General</option>\\n\t\t\t  <option value=\"MELA\">MELA</option>\\n\t\t\t  <option value=\"Sports\">Sports</option>\\n\t\t\t</select>\\n\t\t</div>\\n\\n\t\t\\n\\n\t<button type=\"submit\" class=\"btn btn-primary btn-primary btn3d\" value=\"submit\">Take Quiz</button>\\n\t</form>\\n\\n\t\\n\t'), Blaze._TemplateWith(function() {\n    return {                                                                                                           // 156\n      template: Spacebars.call(\"online\")                                                                               // 157\n    };                                                                                                                 // 158\n  }, function() {                                                                                                      // 159\n    return Spacebars.include(function() {                                                                              // 160\n      return Spacebars.call(Template.__dynamic);                                                                       // 161\n    });                                                                                                                // 162\n  }) ];                                                                                                                // 163\n}));                                                                                                                   // 164\n                                                                                                                       // 165\nTemplate.__checkName(\"questionSelect\");                                                                                // 166\nTemplate[\"questionSelect\"] = new Template(\"Template.questionSelect\", (function() {                                     // 167\n  var view = this;                                                                                                     // 168\n  return [ Blaze.View(\"lookup:time_left\", function() {                                                                 // 169\n    return Spacebars.mustache(view.lookup(\"time_left\"));                                                               // 170\n  }), HTML.Raw('\\n\\n\t<div class=\"form-group\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"1\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"2\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"3\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"4\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"5\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"6\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"7\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"8\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"9\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"10\">\\n\t\t<!-- <input type=\"button\" name=\"questionNumber\" value=\"1\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"2\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"3\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"4\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"5\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"6\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"7\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"8\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"9\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"10\"> -->\\n\t</div>') ];\n}));                                                                                                                   // 172\n                                                                                                                       // 173\nTemplate.__checkName(\"questionShow\");                                                                                  // 174\nTemplate[\"questionShow\"] = new Template(\"Template.questionShow\", (function() {                                         // 175\n  var view = this;                                                                                                     // 176\n  return [ \"Question: \", Blaze.View(\"lookup:questionData.question\", function() {                                       // 177\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"question\"));                                 // 178\n  }), \"\\n\t \", HTML.DIV({                                                                                               // 179\n    \"class\": \"funkyradio\"                                                                                              // 180\n  }, \"\\n\t\", HTML.DIV({                                                                                                 // 181\n    \"class\": \"funkyradio-success\"                                                                                      // 182\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 183\n    type: \"radio\",                                                                                                     // 184\n    name: \"questionAnswer\",                                                                                            // 185\n    id: \"radio1\",                                                                                                      // 186\n    value: function() {                                                                                                // 187\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                // 188\n    }                                                                                                                  // 189\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 190\n    \"for\": \"radio1\"                                                                                                    // 191\n  }, \" \", Blaze.View(\"lookup:questionData.option1\", function() {                                                       // 192\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                  // 193\n  }), \" \"), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                  // 194\n    \"class\": \"funkyradio-success\"                                                                                      // 195\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 196\n    type: \"radio\",                                                                                                     // 197\n    name: \"questionAnswer\",                                                                                            // 198\n    id: \"radio2\",                                                                                                      // 199\n    value: function() {                                                                                                // 200\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                // 201\n    }                                                                                                                  // 202\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 203\n    \"for\": \"radio2\"                                                                                                    // 204\n  }, \" \", Blaze.View(\"lookup:questionData.option2\", function() {                                                       // 205\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                  // 206\n  }), \" \"), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                  // 207\n    \"class\": \"funkyradio-success\"                                                                                      // 208\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 209\n    type: \"radio\",                                                                                                     // 210\n    name: \"questionAnswer\",                                                                                            // 211\n    id: \"radio3\",                                                                                                      // 212\n    value: function() {                                                                                                // 213\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                // 214\n    }                                                                                                                  // 215\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 216\n    \"for\": \"radio3\"                                                                                                    // 217\n  }, \" \", Blaze.View(\"lookup:questionData.option3\", function() {                                                       // 218\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                  // 219\n  }), \" \"), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                  // 220\n    \"class\": \"funkyradio-success\"                                                                                      // 221\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 222\n    type: \"radio\",                                                                                                     // 223\n    name: \"questionAnswer\",                                                                                            // 224\n    id: \"radio4\",                                                                                                      // 225\n    value: function() {                                                                                                // 226\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                // 227\n    }                                                                                                                  // 228\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 229\n    \"for\": \"radio4\"                                                                                                    // 230\n  }, \" \", Blaze.View(\"lookup:questionData.option4\", function() {                                                       // 231\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                  // 232\n  }), \" \"), \"\\n\t\"), \"\\n\t\"), HTML.Raw('\\n\t \t<button type=\"submit\" class=\"btn btn-primary btn-primary btn3d scoreCard\" value=\"submit\" id=\"onsubmitbutton\">Submit Quiz</button>') ];\n}));                                                                                                                   // 234\n                                                                                                                       // 235\nTemplate.__checkName(\"online\");                                                                                        // 236\nTemplate[\"online\"] = new Template(\"Template.online\", (function() {                                                     // 237\n  var view = this;                                                                                                     // 238\n  return [ Blaze.If(function() {                                                                                       // 239\n    return Spacebars.call(view.lookup(\"totalHeadrushQuizzes\"));                                                        // 240\n  }, function() {                                                                                                      // 241\n    return [ \"\\n\t\t\t\t\", HTML.P(\"Headrush Quizzes:\"), \"\\n\t\t\t\t\", HTML.UL(\"\\n\t\t\t\t\", Blaze.Each(function() {                // 242\n      return Spacebars.call(view.lookup(\"showHeadRushQuizzes\"));                                                       // 243\n    }, function() {                                                                                                    // 244\n      return [ \"\\n\t\t\t\t\", HTML.LI(\"Category:\", Blaze.View(\"lookup:category\", function() {                               // 245\n        return Spacebars.mustache(view.lookup(\"category\"));                                                            // 246\n      }), \" Start Time:\", Blaze.View(\"lookup:date\", function() {                                                       // 247\n        return Spacebars.mustache(view.lookup(\"date\"));                                                                // 248\n      }), \",\", Blaze.View(\"lookup:time\", function() {                                                                  // 249\n        return Spacebars.mustache(view.lookup(\"time\"));                                                                // 250\n      })), \"\\n\t\t\t\t\", Blaze.If(function() {                                                                             // 251\n        return Spacebars.call(view.lookup(\"subscribe\"));                                                               // 252\n      }, function() {                                                                                                  // 253\n        return [ \"\\n\t\t\t\t\", HTML.INPUT({                                                                                // 254\n          type: \"button\",                                                                                              // 255\n          \"class\": \"btn btn-primary btn-primary btn3d\",                                                                // 256\n          value: \"Subscribe\",                                                                                          // 257\n          id: function() {                                                                                             // 258\n            return Spacebars.mustache(view.lookup(\"_id\"));                                                             // 259\n          }                                                                                                            // 260\n        }), \"\\n\t\t\t\t\" ];                                                                                                // 261\n      }), \"\\n\t\t\t\t\" ];                                                                                                  // 262\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\" ];                                                                                           // 263\n  }), \"\\n\\n\t\t\", Blaze.If(function() {                                                                                  // 264\n    return Spacebars.call(view.lookup(\"totalGroupQuizzes\"));                                                           // 265\n  }, function() {                                                                                                      // 266\n    return [ \"\\n\t\t\t\t\", HTML.P(\"Group quizzes to start soon\"), \"\\n\t\t\t\t\", HTML.UL(\"\\n\t\t\t\t\", Blaze.Each(function() {      // 267\n      return Spacebars.call(view.lookup(\"showGroupQuizzes\"));                                                          // 268\n    }, function() {                                                                                                    // 269\n      return [ \"\\n\t\t\t\t\", HTML.LI(\"Category:\", Blaze.View(\"lookup:category\", function() {                               // 270\n        return Spacebars.mustache(view.lookup(\"category\"));                                                            // 271\n      }), \" Initiated By:\", Blaze.View(\"lookup:userID\", function() {                                                   // 272\n        return Spacebars.mustache(view.lookup(\"userID\"));                                                              // 273\n      })), HTML.INPUT({                                                                                                // 274\n        type: \"button\",                                                                                                // 275\n        \"class\": \"btn btn-primary btn-primary btn3d\",                                                                  // 276\n        value: \"Subscribe\",                                                                                            // 277\n        id: function() {                                                                                               // 278\n          return Spacebars.mustache(view.lookup(\"_id\"));                                                               // 279\n        }                                                                                                              // 280\n      }), \"\\n\t\t\t\t\" ];                                                                                                  // 281\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\" ];                                                                                           // 282\n  }) ];                                                                                                                // 283\n}));                                                                                                                   // 284\n                                                                                                                       // 285\nTemplate.__checkName(\"scoreCard\");                                                                                     // 286\nTemplate[\"scoreCard\"] = new Template(\"Template.scoreCard\", (function() {                                               // 287\n  var view = this;                                                                                                     // 288\n  return [ Blaze.View(\"lookup:quizTimeLeft\", function() {                                                              // 289\n    return Spacebars.mustache(view.lookup(\"quizTimeLeft\"));                                                            // 290\n  }), \"\\n \\n\\n\", HTML.P(\"\\n      Total Score: \", Blaze.View(\"lookup:getTotalScore\", function() {                       // 291\n    return Spacebars.mustache(view.lookup(\"getTotalScore\"));                                                           // 292\n  }), \" \", HTML.Raw(\"<br>\"), \" \", HTML.Raw(\"<br>\"), \"\\n\\n        \", Blaze.Each(function() {                            // 293\n    return Spacebars.call(view.lookup(\"questionData\"));                                                                // 294\n  }, function() {                                                                                                      // 295\n    return [ \"\\n          Question \", Blaze.View(\"lookup:getIndex\", function() {                                       // 296\n      return Spacebars.mustache(view.lookup(\"getIndex\"), view.lookup(\"@index\"));                                       // 297\n    }), \":\", Blaze.View(\"lookup:arr1\", function() {                                                                    // 298\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 299\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 300\n      html: \"&emsp;\",                                                                                                  // 301\n      str: \" \"                                                                                                         // 302\n    }), \"  1:\", Blaze.View(\"lookup:arr2\", function() {                                                                 // 303\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 304\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 305\n      html: \"&emsp;\",                                                                                                  // 306\n      str: \" \"                                                                                                         // 307\n    }), \"  2:\", Blaze.View(\"lookup:arr3\", function() {                                                                 // 308\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 309\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 310\n      html: \"&emsp;\",                                                                                                  // 311\n      str: \" \"                                                                                                         // 312\n    }), \"  3:\", Blaze.View(\"lookup:arr4\", function() {                                                                 // 313\n      return Spacebars.mustache(view.lookup(\"arr4\"));                                                                  // 314\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 315\n      html: \"&emsp;\",                                                                                                  // 316\n      str: \" \"                                                                                                         // 317\n    }), \"  4:\", Blaze.View(\"lookup:arr5\", function() {                                                                 // 318\n      return Spacebars.mustache(view.lookup(\"arr5\"));                                                                  // 319\n    }), HTML.BR(), \"\\n          Correct Ans:\", Blaze.View(\"lookup:arr6\", function() {                                  // 320\n      return Spacebars.mustache(view.lookup(\"arr6\"));                                                                  // 321\n    }), HTML.BR(), \"\\n          Your Ans: \", Blaze.View(\"lookup:arr7\", function() {                                    // 322\n      return Spacebars.mustache(view.lookup(\"arr7\"));                                                                  // 323\n    }), \" \", HTML.BR(), \" \\n          Score: \", Blaze.View(\"lookup:arr8\", function() {                                 // 324\n      return Spacebars.mustache(view.lookup(\"arr8\"));                                                                  // 325\n    }), HTML.BR(), \" \", HTML.BR(), \"\\n        \" ];                                                                     // 326\n  }), \"\\n\"), \"\\n\\n\", Blaze.If(function() {                                                                             // 327\n    return Spacebars.call(view.lookup(\"Group\"));                                                                       // 328\n  }, function() {                                                                                                      // 329\n    return [ \"\\n\t\", HTML.BUTTON({                                                                                      // 330\n      type: \"submit\",                                                                                                  // 331\n      \"class\": \"btn btn-primary btn-primary btn3d\",                                                                    // 332\n      value: \"submit\",                                                                                                 // 333\n      id: \"onsubmitbutton\"                                                                                             // 334\n    }, \"Get Leaderboard\"), \"\\n\" ];                                                                                     // 335\n  }, function() {                                                                                                      // 336\n    return [ \"\\n\t\", HTML.BUTTON({                                                                                      // 337\n      type: \"submit\",                                                                                                  // 338\n      \"class\": \"btn btn-primary btn-primary btn3d\",                                                                    // 339\n      value: \"submit\",                                                                                                 // 340\n      id: \"home1\"                                                                                                      // 341\n    }, \"Go back to home\"), \"\\n\" ];                                                                                     // 342\n  }) ];                                                                                                                // 343\n}));                                                                                                                   // 344\n                                                                                                                       // 345\nTemplate.__checkName(\"profile1\");                                                                                      // 346\nTemplate[\"profile1\"] = new Template(\"Template.profile1\", (function() {                                                 // 347\n  var view = this;                                                                                                     // 348\n  return [ HTML.Raw(\"<!-- Name, Email, UserSeens, Total Quiz, Stats-->\\nName: \"), Blaze.View(\"lookup:getProfileData.username\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"username\"));                               // 350\n  }), HTML.Raw(\" <br>\\nEmail: \"), Blaze.View(\"lookup:getProfileData.email\", function() {                               // 351\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"email\"));                                  // 352\n  }), HTML.Raw(\" <br>\\nCreated On : \"), Blaze.View(\"lookup:getProfileData.created\", function() {                       // 353\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"created\"));                                // 354\n  }), HTML.Raw(\" <br><br><br>\\n\\nIndividual Quizzes: <br>\\n\\n\t<!-- {{#if getLengths.a1}} -->\\n\t\"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"getStatsIndividual\"));                                                          // 356\n  }, function() {                                                                                                      // 357\n    return [ \"\\n\t\tCategory: \", Blaze.View(\"lookup:arr1\", function() {                                                  // 358\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 359\n    }), HTML.BR(), \"\\n\t\tScore: \", Blaze.View(\"lookup:arr2\", function() {                                               // 360\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 361\n    }), HTML.BR(), \"\\n\t\tTaken On: \", Blaze.View(\"lookup:arr3\", function() {                                            // 362\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 363\n    }), HTML.BR(), HTML.BR(), \"\\n\t\" ];                                                                                 // 364\n  }), HTML.Raw(\"\\n\t<!-- {{else}}\\n\t\t<p>No Individual Quizzes Taken Yet.</p>\\n\t{{/if}} -->\t\\n<br>\\n\\nGroup Quizzes: <br>\\n\\n\t<!-- {{#if getLengths.a2}} -->\\n\t\"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"getStatsGroup\"));                                                               // 366\n  }, function() {                                                                                                      // 367\n    return [ \"\\n\t\tCategory: \", Blaze.View(\"lookup:arr1\", function() {                                                  // 368\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 369\n    }), HTML.BR(), \"\\n\t\tScore: \", Blaze.View(\"lookup:arr2\", function() {                                               // 370\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 371\n    }), HTML.BR(), \"\\n\t\tTaken On: \", Blaze.View(\"lookup:arr3\", function() {                                            // 372\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 373\n    }), HTML.BR(), HTML.BR(), \"\\n\t\" ];                                                                                 // 374\n  }), HTML.Raw(\"\\n\t<!-- {{else}}\\n\t\t<p>No Group Quizzes Taken Yet.</p>\\n\t{{/if}} -->\") ];                              // 375\n}));                                                                                                                   // 376\n                                                                                                                       // 377\nTemplate.__checkName(\"rules\");                                                                                         // 378\nTemplate[\"rules\"] = new Template(\"Template.rules\", (function() {                                                       // 379\n  var view = this;                                                                                                     // 380\n  return HTML.Raw(\"<i>Quiz-O-Pedia <br><br>\\n<strong>What is Quiz-O-Pedia?</strong> <br>\\nQuiz-O-Pedia is an online quizzing website. We bring best of quizzing and help you learn, have fun and let smartest brains compete with each other all at the same time. <br><br>\\n<strong>Whom is Quiz-O-Pedia meant for?</strong><br>\\nYou don’t need a PhD. to play. (If you have one we will be honored to see you play). Quiz-O-Pedia is for anyone and everyone.<br><br>\\n<strong>How do I play?</strong><br>\\nRegister following a simple process, log in with that id, choose the category you like and start quizzing.<br><br>\\nQuestions <br><br>\\n<strong>What kinds of questions do I expect?</strong><br>\\nThe questions will be based on the category they belong to, which would include general questions, MELA-music entertainment, literature and arts and Sports which would cover all the domains.<br><br>\\nAnswers <br><br>\\n<strong>What is the format of the answer?</strong><br>\\nThe answers are in the MCQ format so the only requirement is selecting the appropriate option. \\nThe answer I looked up on the internet is correct but Quiz-o-Pedia doesn’t accept it!\\nContact us at headrush@daiict.ac.in and we’ll be happy to follow up.<br><br>\\n\\n<strong>What are the buttons at the top meant for?</strong><br>\\nIf you want to move to a random question or go back to a selected question for reviewing your answers, select one of those buttons to go to a specific question in the quiz.<br><br>\\nCorrectness Indicator<br><br>\\n<strong>How are the correct answers evaluated?</strong><br>\\nThese are basically MCQ questions so if the right answer is selected, you will get 10 points.<br><br>\\nGeneral<br><br>\\n<strong>What would happen  if a quiz is initiated?</strong><br>\\nFor a group quiz, a waiting timer of 1 minute will start which will allow various users to subscribe to that particular quiz, otherwise the quiz will start individually.\\nFollowing this, a quiz with 10 questions with a timer of 5 minutes will be initiated. <br><br>\\n<strong>What would happen once the timer of the quiz expires?</strong><br>\\nThe quiz will automatically be submiited. For an individual/group quiz, you will be directed to the scorecard page and you could move to the leaderboard page as an option appears for the same for group quiz.  <br><br>\\n<strong>Would the internet be accessible during the quiz?</strong><br>\\nWe cannot stop you from doing that but we’ll advice you to not Google the answers as the basic motive of learning and having fun is disturbed.<br><br>\\nIf you have any further questions please feel free to mail us, headrush@daiict.ac.in<br></i>\");\n}));                                                                                                                   // 382\n                                                                                                                       // 383\nTemplate.__checkName(\"addquiz\");                                                                                       // 384\nTemplate[\"addquiz\"] = new Template(\"Template.addquiz\", (function() {                                                   // 385\n  var view = this;                                                                                                     // 386\n  return HTML.FORM({                                                                                                   // 387\n    \"class\": \"quizEntry\",                                                                                              // 388\n    id: \"quizEntry\"                                                                                                    // 389\n  }, HTML.Raw('\\n\\n\t\t<div class=\"form-group\">\\n\t\t\t<label>Quiz Creater: </label>\\n\t\t\t<input id=\"creater\" type=\"text\" required=\"\">\\n\t\t</div>\\n\\n\t\t<div class=\"form-group\" id=\"addCodeHere\">\\n\t\t\t<label>Category: </label>\\n\t\t\t<select id=\"category\">\\n\t\t\t  <option value=\"General\">General</option>\\n\t\t\t  <option value=\"MELA\">MELA</option>\\n\t\t\t  <option value=\"Sports\">Sports</option>\\n\t\t\t</select>\\n\t\t</div>\\n\\n\t\t'), HTML.SCRIPT({\n    type: \"text/javascript\"                                                                                            // 391\n  }, \"\\n\t\t\tvar form_string = \\\"<br>\\\";\\n\t\t\tfor (var i = 1; i <= 2; i++) {\\n\t\t\t\tform_string += \\\"<div class='form-group'><label>Question \\\"+ i +\\\": </label>\\\";\\n\t\t\t\tform_string += \\\"<input id='question\\\" + i + \\\"' type='text' required /></div>\\\" ;\\n\\n\t\t\t\tfor (var op = 1; op <= 4; op++) {\\n\t\t\t\t\tform_string += \\\"<div class='form-group'><label>Option \\\"+ op +\\\": </label>\\\";\\n\t\t\t\t\tform_string += \\\"<input id='question\\\" + i + \\\"_option\\\" + op + \\\"' type='text' required /> </div>\\\";\\n\t\t\t\t}\\n\\n\t\t\t\tform_string += \\\"<div class='form-group'><label>Answer \\\"+ i +\\\": </label>\\\";\\n\t\t\t\tform_string += \\\"<input id='question\\\" + i + \\\"_answer\\\" + \\\"' type='number' min='1' max='4' step='1' required /> </div> <br>\\\";\\n\t\t\t}\\n\t\t\t// form_string += \\\"<button type='submit' value='Submit'>Submit</button>\\\";\\n\\n\t\t\t// document.write(form_string);\\n\t\t\tvar temp = document.getElementById('addCodeHere');\\n\t\t\ttemp.insertAdjacentHTML('afterend', form_string);\\n\t\t\"), HTML.Raw('\\n\\n\t\t<div class=\"form-group\">\\n\t    \tWould you like to conduct a quiz for this questionnaire?\\n\t    \t<input type=\"radio\" name=\"conductQuiz\" value=\"yes\"> Yes\\n\t  \t\t<input type=\"radio\" name=\"conductQuiz\" value=\"no\" checked=\"checked\" required=\"\"> No\\n\t    </div>\\n\t    <div class=\"form-group\" id=\"quizTimeDiv\">\\n\t    \tSelect date and time:\\n\t    \t<input id=\"quizTime\" type=\"datetime-local\">\\n\t    </div>\\n\\n\t    <br><button type=\"submit\" value=\"Submit\">Submit</button>\\n\\n    '));\n}));                                                                                                                   // 393\n                                                                                                                       // 394\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ind_quiz.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ind_quiz.js                                                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nThisQuiz = new Mongo.Collection(\"quizzes\");                                                                            // 1\nThisResponse = new Mongo.Collection(\"responses\");                                                                      // 2\nvar q = 0;                                                                                                             // 3\nRouter.configure({                                                                                                     // 4\n  layoutTemplate: 'navigation'                                                                                         // 5\n});                                                                                                                    //\nif (Meteor.isClient) {                                                                                                 // 7\n  var updateTimeLeft;                                                                                                  // 8\n  Template.signupForm.events({                                                                                         // 9\n    'submit #signup-form': function () {                                                                               // 10\n      function submitSignupForm(e, t) {                                                                                // 10\n        e.preventDefault();                                                                                            // 11\n        if (Meteor.users.findOne({ username: $('#signup-username').val() })) {                                         // 12\n          alert('Username already exists');                                                                            // 13\n        } else {                                                                                                       //\n          var input = t.find('#signup-password').value;                                                                // 16\n          var input2 = t.find('#signup-confirm').value;                                                                // 17\n          if (input.length < 4 || input.length > 8) {                                                                  // 18\n            alert(\"Please input the password between \" + 4 + \" and \" + 8 + \" characters\");                             // 20\n            return false;                                                                                              // 21\n          } else {                                                                                                     //\n            if (input != input2) {                                                                                     // 24\n              alert(\"Password Mismatch\");                                                                              // 25\n            } else {                                                                                                   //\n              Accounts.createUser({                                                                                    // 29\n                username: t.find('#signup-username').value,                                                            // 30\n                password: t.find('#signup-password').value,                                                            // 31\n                email: t.find('#signup-email').value,                                                                  // 32\n                stats: {},                                                                                             // 33\n                profile: {                                                                                             // 34\n                  confirm: t.find('#signup-confirm').value,                                                            // 35\n                  current_response_id: \"\"                                                                              // 36\n                },                                                                                                     //\n                stats: []                                                                                              // 38\n              });                                                                                                      //\n                                                                                                                       //\n              t.find('#signup-username').value = \"\";                                                                   // 41\n              t.find('#signup-password').value = \"\";                                                                   // 42\n              t.find('#signup-email').value = \"\";                                                                      // 43\n              t.find('#signup-confirm').value = \"\";                                                                    // 44\n            }                                                                                                          //\n            // Meteor.logout();                                                                                        //\n          }                                                                                                            // 23\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return submitSignupForm;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  //  Template.loginForm.events({                                                                                      //\n  //     'submit #login-form': function(e,t) {                                                                         //\n  //       e.preventDefault();                                                                                         //\n                                                                                                                       //\n  //        var unam=t.find('#login-username').value;                                                                  //\n  //        var password=t.find('#login-password').value;                                                              //\n                                                                                                                       //\n  //          Meteor.loginWithPassword(unam,password);                                                                 //\n  //          Router.go('/quiz');                                                                                      //\n  //     }                                                                                                             //\n  // });                                                                                                               //\n                                                                                                                       //\n  var quizQuestions = [];                                                                                              // 7\n                                                                                                                       //\n  changeAnswer = function changeAnswer(question) {                                                                     // 68\n    Meteor.call(\"getResponse\", question, function (error, result) {                                                    // 69\n      if (error) console.log(error.reason);else {                                                                      // 70\n        if (result) $('input[name=questionAnswer][value=' + result + ']').prop('checked', true);else $('input[name=questionAnswer]').prop('checked', false);\n      }                                                                                                                //\n    });                                                                                                                //\n  };                                                                                                                   //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.addquiz.onRendered(function () {                                                                            // 7\n    $(document).ready(function () {                                                                                    // 84\n      $('#quizTimeDiv').hide();                                                                                        // 85\n      $(\"input[name=conductQuiz]\").click(function () {                                                                 // 86\n        var val = $(this).val();                                                                                       // 87\n        if (val == 'yes') {                                                                                            // 88\n          $('#quizTimeDiv').show();                                                                                    // 89\n          $('#quizTime').prop('required', true);                                                                       // 90\n        } else {                                                                                                       //\n          $('#quizTimeDiv').hide();                                                                                    // 93\n          $('#quizTime').removeAttr('required');                                                                       // 94\n        }                                                                                                              //\n      });                                                                                                              //\n    });                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.addquiz.events({                                                                                            // 101\n    \"submit .quizEntry\": function () {                                                                                 // 102\n      function submitQuizEntry(event) {                                                                                // 102\n        event.preventDefault();                                                                                        // 103\n        var que_array = new Array();                                                                                   // 104\n        var creater = event.target.creater.value;                                                                      // 105\n        var category = event.target.category.value;                                                                    // 106\n        var conductQuiz = event.target.conductQuiz.value;                                                              // 107\n        var quizTime = event.target.quizTime.value + ':00+05:30';                                                      // 108\n                                                                                                                       //\n        for (var i = 1; i <= 2; i++) {                                                                                 // 110\n          eval(\"var que\" + \"= event.target.question\" + i + \".value\");                                                  // 111\n          eval(\"var ans\" + \"= event.target.question\" + i + \"_answer.value\");                                           // 112\n          for (var op = 1; op <= 4; op++) {                                                                            // 113\n            eval(\"var opt\" + op + \"= event.target.question\" + i + \"_option\" + op + \".value\");                          // 114\n          }                                                                                                            //\n          que_array.push({ number: i, question: que, option1: opt1, option2: opt2, option3: opt3, option4: opt4, answer: ans });\n        }                                                                                                              //\n                                                                                                                       //\n        Meteor.call(\"addQuizFunction\", creater, category, que_array, conductQuiz, quizTime);                           // 119\n        event.target.reset();                                                                                          // 120\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizEntry;                                                                                          //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onCreated(function () {                                                                      // 125\n    this.time_left = new ReactiveVar(1200);                                                                            // 126\n    Session.clear('updateTimeLeft');                                                                                   // 127\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.onCreated(function () {                                                                           // 130\n    this.time_left = new ReactiveVar(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left);       // 131\n  });                                                                                                                  //\n  Template.waiting_time.onCreated(function () {                                                                        // 133\n    this.time_left = new ReactiveVar(300);                                                                             // 134\n    Session.clear('updateWaitingTimeLeft');                                                                            // 135\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.onRendered(function () {                                                                          // 138\n    if (Session.get('selectedType') === 'Individual') {                                                                // 139\n      $('#home').click(function () {                                                                                   // 140\n        console.log('home clicked');                                                                                   // 141\n        Meteor.users.update(Meteor.userId(), { $set: { \"profile.current_response_id\": '' } });                         // 142\n        Session.clear('final_answer');                                                                                 // 143\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 144\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 145\n        Session.clear('subscribed');                                                                                   // 146\n      });                                                                                                              //\n    }                                                                                                                  //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.onRendered(function () {                                                                            // 151\n    $('#home').click(function () {                                                                                     // 152\n      console.log('home clicked');                                                                                     // 153\n      Meteor.users.update(Meteor.userId(), { $set: { \"profile.current_response_id\": '' } });                           // 154\n      Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                      // 155\n      Meteor.clearInterval(Session.get('updateTimeLeft'));                                                             // 156\n      Session.clear('final_answer');                                                                                   // 157\n      Session.clear('subscribed');                                                                                     // 158\n    });                                                                                                                //\n  });                                                                                                                  //\n  Template.questionSelect.onRendered(function () {                                                                     // 161\n    Meteor.clearInterval(Session.get('updateTimeLeft'));                                                               // 162\n    var self = this;                                                                                                   // 163\n                                                                                                                       //\n    Meteor.call(\"getQuiz\", function (error, result) {                                                                  // 165\n      if (error) console.log(error.reason);else {                                                                      // 166\n        quizQuestions = result;                                                                                        // 169\n        Session.set('selectedQuestion', '1');                                                                          // 170\n        changeAnswer('1');                                                                                             // 171\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.call(\"getTimer\", function (error, result) {                                                                 // 177\n      if (error) console.log(error.reason);else {                                                                      // 178\n        self.time_left.set(result);                                                                                    // 181\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateTimeLeft = Meteor.setInterval(function () {                                                                  // 185\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 186\n      Meteor.call('setTimer', self.time_left.get());                                                                   // 187\n    }, 1000);                                                                                                          //\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);                                                           // 189\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onDestroyed(function () {                                                                    // 193\n                                                                                                                       //\n    Meteor.clearInterval('updateTimeLeft');                                                                            // 196\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onDestroyed(function () {                                                                      // 199\n                                                                                                                       //\n    Meteor.clearInterval('updateWaitingTimeLeft');                                                                     // 201\n    Session.clear('subscribed');                                                                                       // 202\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onRendered(function () {                                                                       // 205\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                        // 206\n    var self = this;                                                                                                   // 207\n                                                                                                                       //\n    Meteor.call(\"getWaitingTimer\", function (error, result) {                                                          // 209\n      if (error) console.log(error.reason);else {                                                                      // 210\n        self.time_left.set(result);                                                                                    // 213\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateWaitingTimeLeft = Meteor.setInterval(function () {                                                           // 217\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 218\n      Meteor.call('setWaitingTimer', self.time_left.get());                                                            // 219\n    }, 1000);                                                                                                          //\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);                                                       // 221\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.events({                                                                                     // 227\n    'click input': function () {                                                                                       // 228\n      function clickInput(event, template) {                                                                           // 228\n        Session.set('selectedQuestion', event.target.value);                                                           // 229\n        changeAnswer(event.target.value);                                                                              // 230\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.helpers({                                                                                            // 234\n    'showGroupQuizzes': function () {                                                                                  // 235\n      function showGroupQuizzes() {                                                                                    // 235\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 236\n        var headrushQuiz = null;                                                                                       // 237\n        var time = new Date();                                                                                         // 238\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 239\n                                                                                                                       //\n          if (groupQuizzes[i].waiting_time <= 0) {                                                                     // 241\n            console.log('Hello');                                                                                      // 242\n            groupQuizzes.splice(i, 1);                                                                                 // 243\n            i = -1;                                                                                                    // 244\n          }                                                                                                            //\n          // if(groupQuizzes[i].conductedByHeadRush){                                                                  //\n          //   headrushQuiz = groupQuizzes[i];                                                                         //\n          //   groupQuizzes.splice(i, 1);                                                                              //\n          //   i=-1;                                                                                                   //\n          // }                                                                                                         //\n        }                                                                                                              // 239\n        return groupQuizzes;                                                                                           // 253\n      }                                                                                                                //\n                                                                                                                       //\n      return showGroupQuizzes;                                                                                         //\n    }(),                                                                                                               //\n    'totalGroupQuizzes': function () {                                                                                 // 255\n      function totalGroupQuizzes() {                                                                                   // 255\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 256\n        var time = new Date();                                                                                         // 257\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 258\n                                                                                                                       //\n          if (groupQuizzes[i].waiting_time <= 0) {                                                                     // 260\n            console.log('Hello');                                                                                      // 261\n            groupQuizzes.splice(i, 1);                                                                                 // 262\n            i = -1;                                                                                                    // 263\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes.length > 0;                                                                                // 267\n      }                                                                                                                //\n                                                                                                                       //\n      return totalGroupQuizzes;                                                                                        //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.events({                                                                                             // 271\n    'click input': function () {                                                                                       // 272\n      function clickInput() {                                                                                          // 272\n        event.preventDefault();                                                                                        // 273\n                                                                                                                       //\n        var responseID = $(event.target).attr('id');                                                                   // 275\n        var subscribed = $(event.target).attr('value');                                                                // 276\n        console.log(subscribed);                                                                                       // 277\n        Session.setPersistent('subscribed', subscribed);                                                               // 278\n                                                                                                                       //\n        Meteor.call('setGroupResponseId', responseID);                                                                 // 280\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.helpers({                                                                                    // 284\n    time_left: function () {                                                                                           // 285\n      function time_left() {                                                                                           // 285\n        var time = Template.instance().time_left.get();                                                                // 286\n        Session.set('timeLeft', time);                                                                                 // 287\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 288\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 289\n        if (time <= 0) {                                                                                               // 290\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 291\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 292\n          Session.clear('final_answer');                                                                               // 293\n          Session.clear('subscribed');                                                                                 // 294\n          $('.scoreCard').trigger('click');                                                                            // 295\n        }                                                                                                              //\n        Session.update('quiz_time_left', minutes + \":\" + seconds);                                                     // 297\n        Session.makePersistent('quiz_time_left');                                                                      // 298\n        return minutes + \":\" + seconds;                                                                                // 299\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }(),                                                                                                               //\n    'ended': function () {                                                                                             // 301\n      function ended() {                                                                                               // 301\n        return Session.get('timeLeft') <= 0;                                                                           // 302\n      }                                                                                                                //\n                                                                                                                       //\n      return ended;                                                                                                    //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.helpers({                                                                                      // 306\n    time_left: function () {                                                                                           // 307\n      function time_left() {                                                                                           // 307\n        var time = Template.instance().time_left.get();                                                                // 308\n        Session.set('timeLeft', time);                                                                                 // 309\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 310\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 311\n        if (time <= 0) {                                                                                               // 312\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 313\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 314\n          Session.clear('final_answer');                                                                               // 315\n          Session.clear('subscribed');                                                                                 // 316\n        }                                                                                                              //\n        return minutes + \":\" + seconds;                                                                                // 318\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.helpers({                                                                                        // 322\n    'user': function () {                                                                                              // 323\n      function user() {                                                                                                // 323\n        console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");                             // 324\n        return Meteor.users.find({ _id: Meteor.userId() });                                                            // 325\n      }                                                                                                                //\n                                                                                                                       //\n      return user;                                                                                                     //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.events({                                                                                         // 329\n    'click #logoutbtn': function () {                                                                                  // 330\n      function clickLogoutbtn() {                                                                                      // 330\n        Meteor.call('endquiz', Meteor.userId());                                                                       // 331\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 332\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 333\n        Session.clear('final_answer');                                                                                 // 334\n        Session.clear('subscribed');                                                                                   // 335\n        Meteor.logout();                                                                                               // 336\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #loginbtn': function () {                                                                                   // 339\n      function clickLoginbtn(e, t) {                                                                                   // 339\n        e.preventDefault();                                                                                            // 340\n                                                                                                                       //\n        console.log('hello');                                                                                          // 342\n        var unam = t.find('#login-username').value;                                                                    // 343\n        var password = t.find('#login-password').value;                                                                // 344\n                                                                                                                       //\n        Meteor.loginWithPassword(unam, password);                                                                      // 346\n        Router.go('/quiz');                                                                                            // 347\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLoginbtn;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #profileButton': function () {                                                                              // 350\n      function clickProfileButton() {                                                                                  // 350\n        Meteor.call(\"getProfileData\", function (error, result) {                                                       // 351\n          if (error) {                                                                                                 // 352\n            //console.log(\"Chu\");                                                                                      //\n            console.log(error.reason);                                                                                 // 354\n          } else {                                                                                                     //\n            Session.set('profileData', result);                                                                        // 358\n            Router.go('profile');                                                                                      // 359\n            //console.log(Session.get('selectedScore1'));                                                              //\n          }                                                                                                            // 357\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickProfileButton;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #home': function () {                                                                                       // 367\n      function clickHome() {                                                                                           // 367\n        Router.go('/quiz');                                                                                            // 368\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #ruleButton': function () {                                                                                 // 371\n      function clickRuleButton() {                                                                                     // 371\n        Router.go('rules');                                                                                            // 372\n      }                                                                                                                //\n                                                                                                                       //\n      return clickRuleButton;                                                                                          //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.profile1.helpers({                                                                                          // 377\n    'getProfileData': function () {                                                                                    // 378\n      function getProfileData() {                                                                                      // 378\n        return Session.get('profileData');                                                                             // 379\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsIndividual': function () {                                                                                // 382\n      function getStatsIndividual() {                                                                                  // 382\n        var statistics = Session.get('profileData').stats;                                                             // 383\n        var count = 0;                                                                                                 // 384\n        var arr1 = [];                                                                                                 // 385\n        var arr2 = [];                                                                                                 // 386\n        var arr3 = [];                                                                                                 // 387\n        var array = [];                                                                                                // 388\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 390\n          if (statistics[i].type === 'Individual') {                                                                   // 391\n            arr1[count] = statistics[i].category;                                                                      // 392\n            arr2[count] = statistics[i].score;                                                                         // 393\n            arr3[count] = statistics[i].takenOn;                                                                       // 394\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 395\n            array.push(obj);                                                                                           // 396\n            count++;                                                                                                   // 397\n          }                                                                                                            //\n        }                                                                                                              //\n        Session.setPersistent('arrayIndLen', array.length);                                                            // 400\n        return array;                                                                                                  // 401\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsIndividual;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsGroup': function () {                                                                                     // 404\n      function getStatsGroup() {                                                                                       // 404\n        var statistics = Session.get('profileData').stats;                                                             // 405\n        var count = 0;                                                                                                 // 406\n        var arr1 = [];                                                                                                 // 407\n        var arr2 = [];                                                                                                 // 408\n        var arr3 = [];                                                                                                 // 409\n        var array = [];                                                                                                // 410\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 412\n          if (statistics[i].type === 'Group') {                                                                        // 413\n            arr1[count] = statistics[i].category;                                                                      // 414\n            arr2[count] = statistics[i].score;                                                                         // 415\n            arr3[count] = statistics[i].takenOn;                                                                       // 416\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 417\n            array.push(obj);                                                                                           // 418\n            count++;                                                                                                   // 419\n          }                                                                                                            //\n        }                                                                                                              //\n        Session.setPersistent('arrayGrpLen', array.length);                                                            // 422\n        return array;                                                                                                  // 423\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsGroup;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getLengths': function () {                                                                                        // 426\n      function getLengths() {                                                                                          // 426\n        var obj = { a1: Session.get('arrayIndLen') > 0, a2: Session.get('arrayGrpLen') > 0 };                          // 427\n        console.log(obj + ' ...........obj');                                                                          // 428\n        return obj;                                                                                                    // 429\n      }                                                                                                                //\n                                                                                                                       //\n      return getLengths;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionShow.events({                                                                                       // 7\n    'click input': function () {                                                                                       // 436\n      function clickInput(event, template) {                                                                           // 436\n        Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')), event.target.value);                     // 437\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 440\n      function clickOnsubmitbutton() {                                                                                 // 440\n                                                                                                                       //\n        var final_answer = $('#onsubmitbutton').attr('value');                                                         // 442\n        Session.setPersistent('final_answer', final_answer);                                                           // 443\n        console.log(\"going Here\");                                                                                     // 444\n        Meteor.call(\"getQuestionSet\", function (error, result) {                                                       // 445\n          if (error) {                                                                                                 // 446\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 448\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.setPersistent('selectedScore', result);                                                            // 453\n            console.log(Session.get('selectedScore'));                                                                 // 454\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getResponseSet\", function (error, result) {                                                       // 458\n          if (error) {                                                                                                 // 459\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 461\n          } else {                                                                                                     //\n            Session.setPersistent('selectedScore1', result);                                                           // 465\n            console.log(Session.get('selectedScore1'));                                                                // 466\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getActualScore\", function (error, result) {                                                       // 470\n          if (error) {                                                                                                 // 471\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 473\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.setPersistent('selectedScore2', result);                                                           // 478\n            // console.log(Session.get('selectedScore2'));                                                             //\n            // console.log(\"aaasssssss\"+ Session.get('selectedScore2'));                                               //\n          }                                                                                                            // 476\n        });                                                                                                            //\n        Router.go('scoreCard');                                                                                        // 483\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionShow.helpers({                                                                                      // 487\n    questionData: function () {                                                                                        // 488\n      function questionData() {                                                                                        // 488\n        return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];                                           // 489\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showSubmitButton': function () {                                                                                  // 492\n      function showSubmitButton() {                                                                                    // 492\n        return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;\n      }                                                                                                                //\n                                                                                                                       //\n      return showSubmitButton;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.quizSelect.events({                                                                                         // 7\n    \"submit .quizParameters\": function () {                                                                            // 500\n      function submitQuizParameters(event) {                                                                           // 500\n        event.preventDefault();                                                                                        // 501\n        var selectedType = event.target.quizType.value;                                                                // 502\n        var selectedCategory = event.target.quizCategory.value;                                                        // 503\n        Session.setPersistent('selectedType', selectedType);                                                           // 504\n        Meteor.call(\"createResponse\", selectedType, selectedCategory);                                                 // 505\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizParameters;                                                                                     //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.events({                                                                                          // 510\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 514\n      function clickOnsubmitbutton(event) {                                                                            // 514\n        if (ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {                           // 515\n          event.preventDefault();                                                                                      // 516\n          alert('Please wait for the quiz to complete to see the leaderboard');                                        // 517\n        } else {                                                                                                       //\n          Meteor.call(\"getRanking\", function (error, result) {                                                         // 520\n            if (error) {                                                                                               // 521\n                                                                                                                       //\n              console.log(error.reason);                                                                               // 523\n            } else {                                                                                                   //\n                                                                                                                       //\n              Session.set('rank', result);                                                                             // 528\n              console.log(Session.get('rank') + ' ............herep');                                                 // 529\n              Router.go('ranking');                                                                                    // 530\n            }                                                                                                          //\n          });                                                                                                          //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #home1': function () {                                                                                      // 536\n      function clickHome1() {                                                                                          // 536\n        $(\"#home\").trigger('click');                                                                                   // 537\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome1;                                                                                               //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.events({                                                                                            // 543\n    'click #home2': function () {                                                                                      // 544\n      function clickHome2() {                                                                                          // 544\n        $(\"#home\").trigger('click');                                                                                   // 545\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome2;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.helpers({                                                                                           // 549\n    'userRanking': function () {                                                                                       // 550\n      function userRanking() {                                                                                         // 550\n        return Session.get('rank');                                                                                    // 551\n      }                                                                                                                //\n                                                                                                                       //\n      return userRanking;                                                                                              //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.helpers({                                                                                         // 555\n                                                                                                                       //\n    questionData: function () {                                                                                        // 557\n      function questionData() {                                                                                        // 557\n                                                                                                                       //\n        var arr1 = [];                                                                                                 // 559\n        var arr2 = [];                                                                                                 // 560\n        var arr3 = [];                                                                                                 // 561\n        var arr4 = [];                                                                                                 // 562\n        var arr5 = [];                                                                                                 // 563\n        var arr6 = [];                                                                                                 // 564\n        var arr7 = [];                                                                                                 // 565\n        var arr8 = [];                                                                                                 // 566\n        var arrayFinal = [];                                                                                           // 567\n        for (var i = 0; i < 10; i++) {                                                                                 // 568\n          arr1[i] = Session.get('selectedScore')[i].question;                                                          // 570\n                                                                                                                       //\n          arr2[i] = Session.get('selectedScore')[i].option1;                                                           // 572\n          arr3[i] = Session.get('selectedScore')[i].option2;                                                           // 573\n          arr4[i] = Session.get('selectedScore')[i].option3;                                                           // 574\n          arr5[i] = Session.get('selectedScore')[i].option4;                                                           // 575\n          arr6[i] = Session.get('selectedScore')[i].answer;                                                            // 576\n                                                                                                                       //\n          arr7[i] = Session.get('selectedScore1')[i + 1];                                                              // 578\n                                                                                                                       //\n          arr8[i] = Session.get('selectedScore2')[i];                                                                  // 580\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i] };\n          arrayFinal.push(obj);                                                                                        // 583\n        }                                                                                                              //\n                                                                                                                       //\n        console.log(\"here....................\", arrayFinal);                                                           // 588\n                                                                                                                       //\n        console.log('final............. ' + arrayFinal[0].arr1);                                                       // 590\n        return arrayFinal;                                                                                             // 591\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getTotalScore': function () {                                                                                     // 595\n      function getTotalScore() {                                                                                       // 595\n        return Session.get('selectedScore2')[10];                                                                      // 596\n      }                                                                                                                //\n                                                                                                                       //\n      return getTotalScore;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'Group': function () {                                                                                             // 599\n      function Group() {                                                                                               // 599\n        return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';                       // 600\n      }                                                                                                                //\n                                                                                                                       //\n      return Group;                                                                                                    //\n    }(),                                                                                                               //\n    'quizTimeLeft': function () {                                                                                      // 602\n      function quizTimeLeft() {                                                                                        // 602\n        //return Session.get('quiz_time_left');                                                                        //\n        Tracker.autorun(function () {                                                                                  // 604\n          return Session.get('quiz_time_left');                                                                        // 605\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return quizTimeLeft;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getIndex: function () {                                                                                            // 609\n      function getIndex(index) {                                                                                       // 609\n        return index + 1;                                                                                              // 610\n      }                                                                                                                //\n                                                                                                                       //\n      return getIndex;                                                                                                 //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n  Accounts.ui.config({                                                                                                 // 614\n    passwordSignupFields: \"USERNAME_AND_OPTIONAL_EMAIL\"                                                                // 615\n  });                                                                                                                  //\n  /* **************************************************************************************************** */           //\n}                                                                                                                      // 7\n                                                                                                                       //\nRouter.route('/', {                                                                                                    // 620\n  name: 'home',                                                                                                        // 621\n  template: 'appBody'                                                                                                  // 622\n});                                                                                                                    //\nRouter.route('/profile', {                                                                                             // 624\n  name: 'profile1',                                                                                                    // 625\n  template: 'profile1',                                                                                                // 626\n  onBeforeAction: function () {                                                                                        // 627\n    function onBeforeAction() {                                                                                        // 627\n      if (!Meteor.userId()) {                                                                                          // 628\n        alert('Please Log In First');                                                                                  // 629\n        Router.go('home');                                                                                             // 630\n      } else {                                                                                                         //\n        this.next();                                                                                                   // 633\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/rules', {                                                                                               // 638\n  name: 'rules',                                                                                                       // 639\n  template: 'rules'                                                                                                    // 640\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/quiz', {                                                                                                // 643\n  name: 'quiz',                                                                                                        // 644\n  template: 'ApplicationLayout',                                                                                       // 645\n  onBeforeAction: function () {                                                                                        // 646\n    function onBeforeAction() {                                                                                        // 646\n      if (!Meteor.user()) {                                                                                            // 647\n        //alert('Please Log in First');                                                                                //\n        this.next();                                                                                                   // 649\n        this.render('appBody', { to: \"template1\" });                                                                   // 650\n        this.render('emptyTemplate', { to: \"template2\" });                                                             // 651\n      } else if (Meteor.user().profile.current_response_id == '') {                                                    //\n        this.next();                                                                                                   // 654\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 655\n        this.render('quizSelect', { to: \"template2\" });                                                                // 656\n      } else if ((Session.get('subscribed') === 'Subscribe' || Session.get('selectedType') === 'Group') && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0) {\n        this.next();                                                                                                   // 659\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 660\n        this.render('waiting_time', { to: \"template2\" });                                                              // 661\n      } else if (ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer') === 'submit') {\n        this.next();                                                                                                   // 666\n        if (Session.get('final_answer') === 'submit') {                                                                // 667\n          this.render('scoreCard', { to: \"template1\" });                                                               // 668\n          this.render('emptyTemplate', { to: \"template2\" });                                                           // 669\n        }                                                                                                              //\n                                                                                                                       //\n        clearInterval('updateTimeLeft');                                                                               // 672\n        clearInterval('updateWaitingTimeLeft');                                                                        // 673\n      } else {                                                                                                         //\n        this.next();                                                                                                   // 676\n        this.render('questionSelect', { to: \"template1\" });                                                            // 677\n        this.render('questionShow', { to: \"template2\" });                                                              // 678\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/ranking', {                                                                                             // 684\n  template: 'ranking',                                                                                                 // 685\n  name: 'ranking'                                                                                                      // 686\n                                                                                                                       //\n});                                                                                                                    //\n                                                                                                                       //\n/* **************************************************************************************************** */             //\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 693\n  Meteor.startup(function () {                                                                                         // 694\n    process.env.MAIL_URL = \"smtp://jaygohil15@gmail.com:jgohilay10125@smtp.gmail.com:465/\";                            // 695\n    Accounts.config({ sendVerificationEmail: true, forbidClientAccountCreation: false });                              // 696\n  });                                                                                                                  //\n  var previousValue = 0;                                                                                               // 699\n  Meteor.methods({                                                                                                     // 700\n                                                                                                                       //\n    getResponseSet: function () {                                                                                      // 702\n      function getResponseSet() {                                                                                      // 702\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 705\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 707\n                                                                                                                       //\n        var userId = Meteor.userId();                                                                                  // 709\n                                                                                                                       //\n        console.log('User ' + userId);                                                                                 // 711\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 713\n                                                                                                                       //\n        console.log(answer);                                                                                           // 715\n        return answer;                                                                                                 // 716\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponseSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuestionSet: function () {                                                                                      // 721\n      function getQuestionSet() {                                                                                      // 721\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 723\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 725\n        var userId = Meteor.userId();                                                                                  // 726\n                                                                                                                       //\n        var currentQuiz = response.quizID;                                                                             // 729\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 731\n        var quizQuestions = correctOption.quiz;                                                                        // 732\n        return quizQuestions;                                                                                          // 733\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuestionSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getActualScore: function () {                                                                                      // 737\n      function getActualScore() {                                                                                      // 737\n        var _$set;                                                                                                     //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 738\n        var eachScore = [];                                                                                            // 739\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 741\n        var userId = Meteor.userId();                                                                                  // 742\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 744\n        //   var answer = response.answers.userId;                                                                     //\n        var currentQuiz = response.quizID;                                                                             // 737\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 748\n        var quizQuestions = correctOption.quiz;                                                                        // 749\n                                                                                                                       //\n        var cor_array = [];                                                                                            // 751\n        var score = 0;                                                                                                 // 752\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 754\n          var correct = correctOption.quiz[i];                                                                         // 755\n          var cor = correct.answer;                                                                                    // 756\n          var p = 'option' + cor;                                                                                      // 757\n                                                                                                                       //\n          var cor = 'option' + cor;                                                                                    // 759\n          cor_array[i] = eval('correct.' + p);                                                                         // 760\n          console.log(cor_array[i]);                                                                                   // 761\n        }                                                                                                              //\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 766\n          if (answer[i + 1] === cor_array[i]) {                                                                        // 768\n            eachScore[i] = 10;                                                                                         // 770\n            score += 10;                                                                                               // 771\n          } else {                                                                                                     //\n            eachScore[i] = 0;                                                                                          // 776\n          }                                                                                                            //\n        }                                                                                                              //\n                                                                                                                       //\n        ThisResponse.update({ _id: response._id }, { $set: (_$set = {}, _$set['score.' + userId] = score, _$set) });   // 780\n        console.log(ThisResponse.findOne(response._id).score);                                                         // 781\n        eachScore[10] = score;                                                                                         // 782\n                                                                                                                       //\n        Meteor.call('saveStats');                                                                                      // 784\n        // console.log('b..............'+eachScore[2]);                                                                //\n        //Session.set('score', score);                                                                                 //\n        //console.log(response.score.userId);                                                                          //\n                                                                                                                       //\n        return eachScore;                                                                                              // 737\n      }                                                                                                                //\n                                                                                                                       //\n      return getActualScore;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    saveStats: function () {                                                                                           // 793\n      function saveStats() {                                                                                           // 793\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 794\n        var response_doc = ThisResponse.findOne(responseID);                                                           // 795\n        // var user_id =                                                                                               //\n        var category = ThisQuiz.findOne(response_doc.quizID).category;                                                 // 793\n        // for (var i=0 ; i<user_ids.length ; i++){                                                                    //\n        // var id = user_ids[i];                                                                                       //\n        // var user_doc = Meteor.users.findOne(id);                                                                    //\n        // var rank = getRanking                                                                                       //\n                                                                                                                       //\n        var new_stat = { quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID };\n        // console.log(new_stat);                                                                                      //\n        if (Meteor.user().stats) Meteor.users.update(Meteor.user(), { $push: { stats: new_stat } });else Meteor.users.update(Meteor.user(), { $set: { stats: [new_stat] } });\n        // Meteor.users.update(id, { $push: { stats: new_stat }});                                                     //\n        // }                                                                                                           //\n      }                                                                                                                // 793\n                                                                                                                       //\n      return saveStats;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuiz: function () {                                                                                             // 816\n      function getQuiz() {                                                                                             // 816\n        if (Meteor.user()) {                                                                                           // 817\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 818\n            var responseID = Meteor.user().profile.current_response_id;                                                // 819\n            var quizID = ThisResponse.findOne(responseID).quizID;                                                      // 820\n            var randomQuiz = ThisQuiz.findOne(quizID);                                                                 // 821\n            var quizQuestions = randomQuiz.quiz;                                                                       // 822\n            for (var i = 0; i < quizQuestions.length; i++) {                                                           // 823\n              delete quizQuestions[i][\"answer\"];                                                                       // 824\n            }                                                                                                          //\n            return quizQuestions;                                                                                      // 826\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRandomQuizID: function () {                                                                                     // 832\n      function getRandomQuizID(category) {                                                                             // 832\n        var randomQuiz = ThisQuiz.find({ category: category }).fetch();                                                // 833\n        var index = Math.floor(Math.random() * randomQuiz.length);                                                     // 834\n        if (index === previousValue) {                                                                                 // 835\n          index = (index + 1) % randomQuiz.length;                                                                     // 836\n          previousValue = index;                                                                                       // 837\n        }                                                                                                              //\n                                                                                                                       //\n        randomQuiz = randomQuiz[index];                                                                                // 840\n        return randomQuiz._id;                                                                                         // 841\n      }                                                                                                                //\n                                                                                                                       //\n      return getRandomQuizID;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createResponse: function () {                                                                                      // 844\n      function createResponse(type, category) {                                                                        // 844\n        var _answers;                                                                                                  //\n                                                                                                                       //\n        if (!Meteor.userId()) {                                                                                        // 846\n          throw new Meteor.Error('not-authorized');                                                                    // 846\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = Meteor.call('getRandomQuizID', category);                                                         // 848\n                                                                                                                       //\n        var responseID = ThisResponse.insert({                                                                         // 850\n          userID: [Meteor.userId()],                                                                                   // 851\n          category: category,                                                                                          // 852\n          quizID: quizID,                                                                                              // 853\n          type: type,                                                                                                  // 854\n          answers: (_answers = {}, _answers[Meteor.userId()] = {}, _answers),                                          // 855\n          time_left: 60,                                                                                               // 856\n          waiting_time: 60,                                                                                            // 857\n          score: {},                                                                                                   // 858\n          conductedAt: new Date()                                                                                      // 859\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 862\n      }                                                                                                                //\n                                                                                                                       //\n      return createResponse;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setResponse: function () {                                                                                         // 865\n      function setResponse(question, answer) {                                                                         // 865\n        var _$set2;                                                                                                    //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 866\n        var user = Meteor.userId();                                                                                    // 867\n        ThisResponse.update(responseID, { $set: (_$set2 = {}, _$set2['answers.' + user + '.' + question] = answer, _$set2) });\n      }                                                                                                                //\n                                                                                                                       //\n      return setResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getResponse: function () {                                                                                         // 871\n      function getResponse(question) {                                                                                 // 871\n        if (Meteor.user()) {                                                                                           // 872\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 873\n            var responseID = Meteor.user().profile.current_response_id;                                                // 874\n            var user = Meteor.userId();                                                                                // 875\n            var response = ThisResponse.findOne(responseID).answers;                                                   // 876\n            var answer = eval('response.' + user + '[' + question + ']');                                              // 877\n            return answer;                                                                                             // 878\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setTimer: function () {                                                                                            // 883\n      function setTimer(new_time) {                                                                                    // 883\n        if (Meteor.user()) {                                                                                           // 884\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 885\n            var responseID = Meteor.user().profile.current_response_id;                                                // 886\n            var response = ThisResponse.findOne(responseID);                                                           // 887\n            if (response.time_left > new_time) ThisResponse.update(response._id, { $set: { time_left: new_time } });   // 888\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return setTimer;                                                                                                 //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getTimer: function () {                                                                                            // 894\n      function getTimer() {                                                                                            // 894\n        if (Meteor.user()) {                                                                                           // 895\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 896\n            var responseID = Meteor.user().profile.current_response_id;                                                // 897\n            return ThisResponse.findOne(responseID).time_left;                                                         // 898\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getTimer;                                                                                                 //\n    }(),                                                                                                               //\n    endquiz: function () {                                                                                             // 903\n      function endquiz(id) {                                                                                           // 903\n        Meteor.users.update({ _id: id }, { $set: { \"profile.current_response_id\": \"\" } });                             // 904\n      }                                                                                                                //\n                                                                                                                       //\n      return endquiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setWaitingTimer: function () {                                                                                     // 907\n      function setWaitingTimer(new_time) {                                                                             // 907\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 908\n        var response = ThisResponse.findOne(responseID);                                                               // 909\n        if (response.waiting_time > new_time) ThisResponse.update(response._id, { $set: { waiting_time: new_time } });\n      }                                                                                                                //\n                                                                                                                       //\n      return setWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getWaitingTimer: function () {                                                                                     // 914\n      function getWaitingTimer() {                                                                                     // 914\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 915\n        return ThisResponse.findOne(responseID).waiting_time;                                                          // 916\n      }                                                                                                                //\n                                                                                                                       //\n      return getWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'setGroupResponseId': function () {                                                                                // 919\n      function setGroupResponseId(responseID) {                                                                        // 919\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 920\n      }                                                                                                                //\n                                                                                                                       //\n      return setGroupResponseId;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRanking: function () {                                                                                          // 923\n      function getRanking() {                                                                                          // 923\n        //var responseID = 'vxprdPF2CG9jdvRQZ';                                                                        //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 925\n        var response = ThisResponse.findOne(responseID);                                                               // 926\n        var scores = ThisResponse.findOne(response._id).score;                                                         // 927\n        var temp = {};                                                                                                 // 928\n                                                                                                                       //\n        console.log(scores);                                                                                           // 930\n                                                                                                                       //\n        for (var key in meteorBabelHelpers.sanitizeForInObject(scores)) {                                              // 932\n          temp[Meteor.users.findOne(key).username] = scores[key];                                                      // 933\n          console.log('Hello.................' + temp[Meteor.users.findOne(key).emails[0].address]);                   // 934\n        }                                                                                                              //\n                                                                                                                       //\n        scores = temp;                                                                                                 // 937\n                                                                                                                       //\n        var sortable = [];                                                                                             // 939\n        for (var entry in meteorBabelHelpers.sanitizeForInObject(scores)) {                                            // 940\n          sortable.push([entry, scores[entry]]);                                                                       // 941\n        }sortable.sort(function (a, b) {                                                                               //\n          return b[1] - a[1];                                                                                          // 942\n        });                                                                                                            //\n        console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]                                        // 943\n        console.log(sortable[0][0] + ' 00');                                                                           // 923\n        console.log(sortable[0][1] + ' 01');                                                                           // 945\n                                                                                                                       //\n        var ranks = [];                                                                                                // 947\n        var arr1 = [];                                                                                                 // 948\n        var arr2 = [];                                                                                                 // 949\n        var arr3 = [];                                                                                                 // 950\n        arr1[0] = 1;                                                                                                   // 951\n        var count = 1;                                                                                                 // 952\n        for (var i = 0; i < sortable.length; i++) {                                                                    // 953\n          arr2[i] = sortable[i][0];                                                                                    // 954\n          arr3[i] = sortable[i][1];                                                                                    // 955\n          if (i > 0) {                                                                                                 // 956\n            if (arr3[i] === arr3[i - 1]) {                                                                             // 957\n              arr1[i] = count;                                                                                         // 958\n            } else {                                                                                                   //\n              count = i + 1;                                                                                           // 962\n              arr1[i] = count;                                                                                         // 963\n            }                                                                                                          //\n          }                                                                                                            //\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i] };                                                   // 967\n          ranks.push(obj);                                                                                             // 968\n        }                                                                                                              //\n                                                                                                                       //\n        return ranks;                                                                                                  // 971\n      }                                                                                                                //\n                                                                                                                       //\n      return getRanking;                                                                                               //\n    }(),                                                                                                               //\n    getProfileData: function () {                                                                                      // 974\n      function getProfileData() {                                                                                      // 974\n        var userId = Meteor.userId();                                                                                  // 975\n        var user = Meteor.users.findOne(userId);                                                                       // 976\n        var username = user.username;                                                                                  // 977\n        var email = user.emails[0].address;                                                                            // 978\n        var created = user.createdAt;                                                                                  // 979\n        var stats = user.stats;                                                                                        // 980\n        var obj = { username: username, email: email, created: created, stats: stats };                                // 981\n        return obj;                                                                                                    // 982\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    addQuizFunction: function () {                                                                                     // 985\n      function addQuizFunction(creater, category, que_array, conductQuiz, quizTime) {                                  // 985\n                                                                                                                       //\n        // Make sure the user is logged in and is admin before inserting a task                                        //\n        if (!Meteor.userId()) {                                                                                        // 988\n          throw new Meteor.Error(\"not-authorized\");                                                                    // 989\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = ThisQuiz.insert({                                                                                 // 992\n          quizCreater: creater,                                                                                        // 993\n          category: category,                                                                                          // 994\n          createdAt: new Date(),                                                                                       // 995\n          quiz: que_array                                                                                              // 996\n        });                                                                                                            //\n                                                                                                                       //\n        if (conductQuiz == 'yes') Meteor.call('createHeadrushResponse', quizID, quizTime, category);                   // 999\n      }                                                                                                                //\n                                                                                                                       //\n      return addQuizFunction;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createHeadrushResponse: function () {                                                                              // 1003\n      function createHeadrushResponse(quizID, quizTime, category) {                                                    // 1003\n        ThisResponse.insert({                                                                                          // 1004\n          userID: [],                                                                                                  // 1005\n          quizID: quizID,                                                                                              // 1006\n          type: 'Group',                                                                                               // 1007\n          category: category,                                                                                          // 1008\n          answers: {},                                                                                                 // 1009\n          time_left: 1200,                                                                                             // 1010\n          waiting_time: 600,                                                                                           // 1011\n          score: {},                                                                                                   // 1012\n          conductedByHeadRush: true,                                                                                   // 1013\n          conductedAt: new Date(quizTime)                                                                              // 1014\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return createHeadrushResponse;                                                                                   //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n}                                                                                                                      //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./ind_quiz.html\");\nrequire(\"./ind_quiz.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/ind_quiz.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["ThisQuiz = new Mongo.Collection(\"quizzes\");\r\nThisResponse = new Mongo.Collection(\"responses\");\r\nvar q=0;\r\nRouter.configure({\r\n  layoutTemplate: 'navigation'\r\n});\r\nif (Meteor.isClient) {\r\n      var updateTimeLeft;\r\n      Template.signupForm.events({\r\n    'submit #signup-form': function(e,t){\r\n      e.preventDefault();\r\n      if(Meteor.users.findOne({username: $('#signup-username').val()}) ) {\r\n        alert('Username already exists');\r\n      } \r\n      else {\r\n      var input=t.find('#signup-password').value;\r\n      var input2=t.find('#signup-confirm').value;\r\n      if(input.length<4 || input.length> 8)  \r\n          {   \r\n          alert(\"Please input the password between \" +4+ \" and \" +8+ \" characters\");  \r\n                return false;  \r\n          }  \r\n        else{\r\n            if(input!=input2){\r\n              alert(\"Password Mismatch\");\r\n            }\r\n\r\n            else{\r\n      Accounts.createUser({\r\n        username:t.find('#signup-username').value,\r\n        password:t.find('#signup-password').value,\r\n        email:t.find('#signup-email').value,\r\n        stats: {},\r\n        profile:{\r\n          confirm:t.find('#signup-confirm').value,\r\n          current_response_id:\"\"\r\n        },\r\n        stats:[]\r\n      });\r\n      \r\n      t.find('#signup-username').value = \"\";\r\n      t.find('#signup-password').value = \"\";\r\n      t.find('#signup-email').value = \"\";\r\n      t.find('#signup-confirm').value = \"\";\r\n    \r\n          }\r\n         // Meteor.logout();\r\n      }\r\n     }\r\n    }\r\n  });\r\n\r\n//  Template.loginForm.events({\r\n//     'submit #login-form': function(e,t) {\r\n//       e.preventDefault();\r\n\r\n//        var unam=t.find('#login-username').value;\r\n//        var password=t.find('#login-password').value;\r\n     \r\n//          Meteor.loginWithPassword(unam,password);\r\n//          Router.go('/quiz');\r\n//     }\r\n// });\r\n\r\n\r\n  var quizQuestions = [];\r\n\r\n  changeAnswer = function(question){\r\n     Meteor.call(\"getResponse\", question, function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        if (result)\r\n          $('input[name=questionAnswer][value=' + result + ']').prop('checked',true);\r\n        else\r\n          $('input[name=questionAnswer]').prop('checked',false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nTemplate.addquiz.onRendered(function() {\r\n$(document).ready(function() {\r\n$('#quizTimeDiv').hide();   \r\n        $(\"input[name=conductQuiz]\").click(function() {\r\n            var val = $(this).val();\r\n            if (val == 'yes'){\r\n              $('#quizTimeDiv').show();\r\n              $('#quizTime').prop('required',true);\r\n            }\r\n            else{\r\n              $('#quizTimeDiv').hide();\r\n              $('#quizTime').removeAttr('required');\r\n            }\r\n        });\r\n      });\r\n});\r\n\r\n\r\n  Template.addquiz.events({\r\n    \"submit .quizEntry\": function (event) {\r\n      event.preventDefault();\r\n      var que_array = new Array();\r\n      var creater =  event.target.creater.value;\r\n      var category =  event.target.category.value;\r\n      var conductQuiz = event.target.conductQuiz.value;\r\n      var quizTime = event.target.quizTime.value + ':00+05:30';\r\n\r\n      for (var i = 1; i <= 2; i++) {\r\n        eval(\"var que\" + \"= event.target.question\" + i + \".value\");\r\n        eval(\"var ans\" + \"= event.target.question\" + i + \"_answer.value\");\r\n        for (var op = 1; op <= 4; op++) {\r\n          eval(\"var opt\" + op + \"= event.target.question\" + i + \"_option\" + op + \".value\");\r\n        }\r\n        que_array.push({number: i, question: que, option1: opt1, option2: opt2, option3: opt3, option4: opt4, answer: ans});\r\n      }\r\n\r\n      Meteor.call(\"addQuizFunction\", creater, category, que_array, conductQuiz, quizTime);\r\n      event.target.reset();\r\n    }\r\n  });\r\n\r\n\r\n  Template.questionSelect.onCreated( function() {\r\n    this.time_left = new ReactiveVar(1200);\r\n    Session.clear('updateTimeLeft');\r\n  });\r\n\r\n  Template.scoreCard.onCreated(function() {\r\n    this.time_left = new ReactiveVar(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left);\r\n  });\r\n  Template.waiting_time.onCreated( function() {\r\n    this.time_left = new ReactiveVar(300);\r\n    Session.clear('updateWaitingTimeLeft');\r\n  });\r\n\r\n  Template.scoreCard.onRendered(function() {\r\n    if(Session.get('selectedType') === 'Individual') {\r\n      $('#home').click(function() {\r\n        console.log('home clicked');\r\n        Meteor.users.update( Meteor.userId(), {$set: {\"profile.current_response_id\" : ''}});\r\n        Session.clear('final_answer');\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n        Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n        Session.clear('subscribed');\r\n      });\r\n    }\r\n  });\r\n\r\n  Template.ranking.onRendered(function() {\r\n    $('#home').click(function() {\r\n        console.log('home clicked');\r\n        Meteor.users.update( Meteor.userId(), {$set: {\"profile.current_response_id\" : ''}});\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n        Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n        Session.clear('final_answer');\r\n        Session.clear('subscribed');\r\n      });\r\n  });\r\n  Template.questionSelect.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getQuiz\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        quizQuestions = result;\r\n        Session.set('selectedQuestion', '1');\r\n        changeAnswer('1');\r\n      }\r\n    });\r\n\r\n\r\n\r\n    Meteor.call(\"getTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);\r\n  \r\n  });\r\n\r\n  Template.questionSelect.onDestroyed(function() {\r\n \r\n    \r\n    Meteor.clearInterval('updateTimeLeft');\r\n  });\r\n\r\n  Template.waiting_time.onDestroyed(function() {\r\n  \r\n    Meteor.clearInterval('updateWaitingTimeLeft');\r\n    Session.clear('subscribed');\r\n  });\r\n\r\n  Template.waiting_time.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getWaitingTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateWaitingTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setWaitingTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);\r\n    \r\n\r\n  });\r\n  \r\n\r\n  Template.questionSelect.events({\r\n    'click input': function( event,template ) {\r\n      Session.set('selectedQuestion', event.target.value);\r\n      changeAnswer(event.target.value);\r\n    }\r\n  });\r\n\r\n  Template.online.helpers({\r\n    'showGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var headrushQuiz = null;\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n       \r\n        if(groupQuizzes[i].waiting_time <= 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n         \r\n        }\r\n        // if(groupQuizzes[i].conductedByHeadRush){\r\n        //   headrushQuiz = groupQuizzes[i];\r\n        //   groupQuizzes.splice(i, 1);\r\n        //   i=-1;\r\n        // }\r\n    }\r\n    return groupQuizzes;\r\n  },\r\n    'totalGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        \r\n        if(groupQuizzes[i].waiting_time <= 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n         \r\n        }\r\n    }\r\n    return groupQuizzes.length > 0;\r\n    }\r\n});\r\n\r\n  Template.online.events({\r\n    'click input': function() {\r\n      event.preventDefault();\r\n     \r\n      var responseID = $(event.target).attr('id');\r\n      var subscribed = $(event.target).attr('value');\r\n      console.log(subscribed);\r\n      Session.setPersistent('subscribed', subscribed);\r\n     \r\n      Meteor.call('setGroupResponseId', responseID);\r\n    }\r\n  });\r\n\r\n  Template.questionSelect.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n     $('.scoreCard').trigger('click');\r\n      }\r\n      Session.update('quiz_time_left',minutes+\":\"+seconds);\r\n      Session.makePersistent('quiz_time_left');\r\n      return minutes+\":\"+seconds;\r\n    },\r\n     'ended': function() {\r\n       return Session.get('timeLeft') <= 0;\r\n     }\r\n  }); \r\n\r\n  Template.waiting_time.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      }\r\n      return minutes+\":\"+seconds;\r\n    }\r\n  }); \r\n\r\n  Template.navigation.helpers({\r\n    'user': function() {\r\n      console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");\r\n        return Meteor.users.find({_id: Meteor.userId()});\r\n    }\r\n  });\r\n\r\n  Template.navigation.events({\r\n    'click #logoutbtn': function() {\r\n     Meteor.call('endquiz',Meteor.userId());\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      Meteor.logout();\r\n    },\r\n\r\n    'click #loginbtn' : function(e, t){\r\n      e.preventDefault();\r\n \r\n          console.log('hello');\r\n       var unam=t.find('#login-username').value;\r\n       var password=t.find('#login-password').value;\r\n     \r\n         Meteor.loginWithPassword(unam,password);\r\n         Router.go('/quiz');\r\n    },\r\n\r\n     'click #profileButton': function(){\r\n      Meteor.call(\"getProfileData\", function(error, result){\r\n      if (error){\r\n        //console.log(\"Chu\");\r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.set('profileData', result);\r\n        Router.go('profile');\r\n       //console.log(Session.get('selectedScore1'));\r\n      }\r\n    });\r\n\r\n\r\n    },\r\n\r\n    'click #home': function() {\r\n      Router.go('/quiz');\r\n    },\r\n\r\n    'click #ruleButton': function() {\r\n      Router.go('rules');\r\n    }\r\n    \r\n      });\r\n\r\n   Template.profile1.helpers({\r\n    'getProfileData': function(){\r\n      return Session.get('profileData');\r\n    },\r\n\r\n    'getStatsIndividual': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Individual'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n          count++;\r\n        }\r\n      }\r\n      Session.setPersistent('arrayIndLen',array.length);\r\n      return array;\r\n    },\r\n\r\n    'getStatsGroup': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Group'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n          count++;\r\n        }\r\n      }\r\n      Session.setPersistent('arrayGrpLen',array.length);\r\n      return array;\r\n    },\r\n\r\n    'getLengths' : function(){\r\n        var obj = {a1: Session.get('arrayIndLen')>0, a2: Session.get('arrayGrpLen')>0};\r\n        console.log(obj+' ...........obj');\r\n        return obj;\r\n    }\r\n  });\r\n\r\n  /* **************************************************************************************************** */\r\n  \r\n  Template.questionShow.events({\r\n    'click input': function( event,template ) {\r\n      Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')) , event.target.value );\r\n    },\r\n   \r\n     'click #onsubmitbutton' :function(){\r\n\r\n      var final_answer = $('#onsubmitbutton').attr('value');\r\n      Session.setPersistent('final_answer',final_answer);\r\n      console.log(\"going Here\");\r\n      Meteor.call(\"getQuestionSet\", function(error, result){\r\n      if (error){\r\n       \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.setPersistent('selectedScore', result);\r\n        console.log(Session.get('selectedScore'));     \r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getResponseSet\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.setPersistent('selectedScore1', result);\r\n       console.log(Session.get('selectedScore1'));\r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getActualScore\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.setPersistent('selectedScore2', result);\r\n        // console.log(Session.get('selectedScore2'));\r\n        // console.log(\"aaasssssss\"+ Session.get('selectedScore2'));\r\n      }\r\n    });\r\n      Router.go('scoreCard');\r\n  }\r\n  }); \r\n\r\n  Template.questionShow.helpers({\r\n    questionData: function() {\r\n      return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];\r\n    },\r\n\r\n   'showSubmitButton': function() {\r\n    return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;  \r\n   }\r\n  });   \r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.quizSelect.events({  \r\n    \"submit .quizParameters\": function (event) {\r\n      event.preventDefault();\r\n      var selectedType =  event.target.quizType.value;\r\n      var selectedCategory =  event.target.quizCategory.value;\r\n      Session.setPersistent('selectedType', selectedType);\r\n      Meteor.call(\"createResponse\", selectedType, selectedCategory);\r\n    }\r\n\r\n  });\r\n\r\n Template.scoreCard.events({  \r\n   \r\n   \r\n\r\n    'click #onsubmitbutton' :function(event){\r\n      if(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {\r\n        event.preventDefault();\r\n        alert('Please wait for the quiz to complete to see the leaderboard');\r\n      }\r\n      else {\r\n        Meteor.call(\"getRanking\", function(error, result){\r\n          if (error){\r\n             \r\n            console.log(error.reason);\r\n        \r\n          }\r\n          else {\r\n        \r\n            Session.set('rank', result);\r\n            console.log(Session.get('rank')+' ............herep');     \r\n            Router.go('ranking');\r\n          }\r\n        });\r\n      }\r\n      },\r\n\r\n      'click #home1': function(){\r\n        $(\"#home\").trigger('click');\r\n      }\r\n\r\n  });\r\n\r\n\r\nTemplate.ranking.events({\r\n  'click #home2': function(){\r\n        $(\"#home\").trigger('click');\r\n      }  \r\n});\r\n\r\n Template.ranking.helpers({\r\n  'userRanking' : function(){\r\n   return Session.get('rank');\r\n  }  \r\n});\r\n\r\n  Template.scoreCard.helpers({\r\n \r\n  questionData: function(){\r\n   \r\n     var arr1=[];\r\n    var arr2=[];\r\n    var arr3=[];\r\n    var arr4=[];\r\n    var arr5=[];\r\n     var arr6=[];\r\n     var arr7 = [];\r\n     var arr8=[];\r\n     var arrayFinal = [];\r\n    for(var i=0;i<10;i++)\r\n    {\r\n      arr1[i]=Session.get('selectedScore')[i].question;\r\n \r\n      arr2[i]=Session.get('selectedScore')[i].option1;\r\n      arr3[i]=Session.get('selectedScore')[i].option2;\r\n      arr4[i]=Session.get('selectedScore')[i].option3;\r\n      arr5[i]=Session.get('selectedScore')[i].option4;\r\n      arr6[i]=Session.get('selectedScore')[i].answer;\r\n  \r\n       arr7[i]=Session.get('selectedScore1')[i+1];\r\n\r\n       arr8[i]=Session.get('selectedScore2')[i];\r\n\r\n       var obj  = {arr1: arr1[i] , arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i]};\r\n       arrayFinal.push(obj);\r\n\r\n\r\n     }\r\n\r\n     console.log(\"here....................\",arrayFinal);\r\n  \r\n     console.log('final............. '+arrayFinal[0].arr1);\r\n     return arrayFinal;\r\n   \r\n  },\r\n\r\n  'getTotalScore': function() {\r\n    return Session.get('selectedScore2')[10];\r\n  },\r\n\r\n  'Group': function() {\r\n    return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';\r\n  },\r\n  'quizTimeLeft' : function(){\r\n    //return Session.get('quiz_time_left');\r\n    Tracker.autorun(function() {\r\n      return Session.get('quiz_time_left');\r\n    });\r\n  },\r\n\r\n  getIndex: function(index) {\r\n    return index + 1;\r\n  }\r\n\r\n  }); \r\nAccounts.ui.config({\r\n    passwordSignupFields:\"USERNAME_AND_OPTIONAL_EMAIL\"\r\n  });\r\n  /* **************************************************************************************************** */\r\n}\r\n\r\nRouter.route('/', {\r\n  name: 'home',\r\n  template: 'appBody'\r\n});\r\nRouter.route('/profile', {\r\n  name: 'profile1',\r\n  template: 'profile1',\r\n  onBeforeAction: function() {\r\n    if(!Meteor.userId()) {\r\n      alert('Please Log In First');\r\n      Router.go('home');\r\n    }\r\n    else {\r\n      this.next();\r\n    }\r\n  }\r\n});\r\n\r\nRouter.route('/rules', {\r\n  name: 'rules',\r\n  template: 'rules'\r\n});\r\n\r\nRouter.route('/quiz',{\r\n  name: 'quiz',\r\n  template: 'ApplicationLayout',\r\n  onBeforeAction: function() {\r\n  if (! Meteor.user()) {\r\n    //alert('Please Log in First');\r\n    this.next(); \r\n    this.render('appBody', {to:\"template1\"});\r\n    this.render('emptyTemplate', {to:\"template2\"}); \r\n  }\r\n  else if (Meteor.user().profile.current_response_id == '') {\r\n    this.next();\r\n    this.render('emptyTemplate', {to:\"template1\"});\r\n    this.render('quizSelect', {to:\"template2\"});\r\n  }\r\n  else if((Session.get('subscribed') === 'Subscribe' || (Session.get('selectedType') === 'Group')) && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0)  {\r\n       this.next();\r\n       this.render('emptyTemplate', {to:\"template1\"});\r\n       this.render('waiting_time', {to:\"template2\"});\r\n        \r\n  }\r\n\r\n  else if(ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer')==='submit'){\r\n    this.next();\r\n    if(Session.get('final_answer')==='submit') {\r\n      this.render('scoreCard',{to:\"template1\"});\r\n      this.render('emptyTemplate', {to:\"template2\"});\r\n   }\r\n   \r\n     clearInterval('updateTimeLeft');    \r\n     clearInterval('updateWaitingTimeLeft');\r\n  }\r\n  else{\r\n      this.next();\r\n    this.render('questionSelect', {to:\"template1\"});\r\n     this.render('questionShow', {to:\"template2\"});\r\n\r\n  }\r\n }\r\n});\r\n\r\nRouter.route('/ranking',{\r\n  template: 'ranking',\r\n  name : 'ranking'\r\n\r\n});\r\n\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nif(Meteor.isServer){\r\n  Meteor.startup(function () {\r\n   process.env.MAIL_URL=\"smtp://jaygohil15@gmail.com:jgohilay10125@smtp.gmail.com:465/\"\r\n   Accounts.config({sendVerificationEmail: true, forbidClientAccountCreation: false});\r\n    \r\n  });\r\nvar previousValue = 0;\r\nMeteor.methods({\r\n\r\n  getResponseSet: function (){\r\n    \r\n\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n \r\n  var response = ThisResponse.findOne(responseID);\r\n \r\n  var userId = Meteor.userId();\r\n \r\n  console.log('User '+userId);\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n\r\nconsole.log(answer);\r\n  return answer;\r\n\r\n\r\n  },\r\n\r\n  getQuestionSet: function(){\r\n  \r\n   var responseID = Meteor.user().profile.current_response_id;\r\n\r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n \r\n   var currentQuiz=response.quizID;\r\n\r\n  var correctOption=(ThisQuiz.findOne(currentQuiz));\r\n  var quizQuestions = correctOption.quiz;\r\n  return quizQuestions;\r\n  \r\n},\r\n\r\n  getActualScore: function(){\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n  var eachScore = [];\r\n  \r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n//   var answer = response.answers.userId;\r\n   var currentQuiz = response.quizID;\r\n\r\n  var correctOption= ThisQuiz.findOne(currentQuiz);\r\n  var quizQuestions = correctOption.quiz;\r\n \r\n  var cor_array=[];\r\n  var score=0;\r\n\r\n  for(var i=0;i<10;i++){\r\n    var correct=correctOption.quiz[i];\r\n    var cor=correct.answer;\r\n    var p='option'+cor;\r\n  \r\n    var cor='option'+cor;\r\n    cor_array[i]=eval('correct.'+p);\r\n    console.log(cor_array[i]);\r\n\r\n  \r\n  }\r\n \r\n  for(var i=0;i<10;i++)\r\n  {\r\n    if(answer[i+1]===cor_array[i])\r\n    {\r\n      eachScore[i] = 10;\r\n      score+=10;\r\n    \r\n    }\r\n\r\n    else{\r\n      eachScore[i] = 0;\r\n    }\r\n  }\r\n\r\n  ThisResponse.update({_id: response._id}, {$set: {['score.' + userId]: score} });\r\n  console.log(ThisResponse.findOne(response._id).score);\r\n  eachScore[10] = score;\r\n\r\n  Meteor.call('saveStats');\r\n // console.log('b..............'+eachScore[2]);\r\n  //Session.set('score', score);\r\n  //console.log(response.score.userId);\r\n\r\n\r\n  return eachScore;\r\n},\r\n\r\n saveStats: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response_doc = ThisResponse.findOne(responseID);\r\n    // var user_id = \r\n    var category = ThisQuiz.findOne(response_doc.quizID).category;\r\n    // for (var i=0 ; i<user_ids.length ; i++){\r\n      // var id = user_ids[i];\r\n      // var user_doc = Meteor.users.findOne(id);\r\n      // var rank = getRanking\r\n\r\n      var new_stat = {quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID};\r\n      // console.log(new_stat);\r\n      if (Meteor.user().stats)\r\n      Meteor.users.update(Meteor.user(), { $push: { stats: new_stat }});\r\n      else\r\n        Meteor.users.update(Meteor.user(), {$set: {stats: [new_stat]} });\r\n      // Meteor.users.update(id, { $push: { stats: new_stat }});\r\n    // }\r\n  },\r\n\r\n\r\n\r\n\r\n  getQuiz: function (){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var quizID = ThisResponse.findOne(responseID).quizID;\r\n    var randomQuiz = ThisQuiz.findOne(quizID);\r\n    var quizQuestions = randomQuiz.quiz;\r\n    for (var i=0 ; i<quizQuestions.length ; i++){\r\n      delete quizQuestions[i][\"answer\"];\r\n    }\r\n       return quizQuestions;\r\n  }\r\n}\r\n \r\n  },\r\n\r\n  getRandomQuizID: function(category){\r\n    var randomQuiz = ThisQuiz.find({category:category}).fetch();\r\n    var index = Math.floor(Math.random() * randomQuiz.length);\r\n    if(index === previousValue) {\r\n      index = (index + 1) % randomQuiz.length;\r\n      previousValue = index;\r\n    }\r\n   \r\n    randomQuiz = randomQuiz[index];\r\n    return randomQuiz._id;\r\n  },\r\n\r\n  createResponse: function(type, category){\r\n  \r\n    if (! Meteor.userId()) { throw new Meteor.Error('not-authorized'); }\r\n\r\n    var quizID = Meteor.call('getRandomQuizID', category);\r\n\r\n    var responseID = ThisResponse.insert({\r\n      userID: [Meteor.userId()],\r\n      category:category,\r\n      quizID: quizID,\r\n      type: type,\r\n      answers: {[Meteor.userId()]: {}},\r\n      time_left: 60,\r\n      waiting_time: 60,\r\n      score: {},\r\n      conductedAt: new Date()\r\n    });\r\n\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});\r\n  },\r\n\r\n  setResponse: function (question, answer){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    ThisResponse.update(responseID, {$set: {['answers.' + user + '.' + question]: answer}});\r\n  },\r\n\r\n  getResponse: function(question){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    var response = ThisResponse.findOne(responseID).answers;\r\n    var answer = eval('response.' + user + '[' + question + ']');\r\n    return answer;\r\n  }\r\n}\r\n  },\r\n\r\n  setTimer: function(new_time){\r\n    if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n        var responseID = Meteor.user().profile.current_response_id;\r\n        var response = ThisResponse.findOne(responseID);\r\n        if (response.time_left > new_time)\r\n          ThisResponse.update(response._id, {$set: {time_left: new_time}});\r\n      }\r\n    }\r\n  },\r\n\r\n  getTimer: function(){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).time_left;\r\n\r\n  }\r\n}\r\n  },\r\n  endquiz:function(id){\r\n   Meteor.users.update({ _id:id},{$set:{\"profile.current_response_id\":\"\"}});\r\n  },\r\n\r\n  setWaitingTimer: function(new_time){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    if (response.waiting_time > new_time)\r\n      ThisResponse.update(response._id, {$set: {waiting_time: new_time}});\r\n  },\r\n\r\n  getWaitingTimer: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).waiting_time;\r\n  },\r\n\r\n  'setGroupResponseId': function(responseID) {\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});      \r\n  },\r\n\r\n  getRanking: function(){\r\n    //var responseID = 'vxprdPF2CG9jdvRQZ';\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    var scores = ThisResponse.findOne(response._id).score;\r\n    var temp = {};\r\n\r\n    console.log(scores);\r\n\r\n    for (var key in scores) {\r\n      temp[Meteor.users.findOne(key).username] = scores[key];\r\n      console.log('Hello.................'+temp[Meteor.users.findOne(key).emails[0].address])\r\n    }\r\n\r\n    scores = temp;\r\n\r\n    var sortable = [];\r\n    for (var entry in scores)\r\n      sortable.push([entry, scores[entry]]);\r\n    sortable.sort(function(a, b) {return b[1] - a[1]})\r\n    console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]\r\n    console.log(sortable[0][0]+ ' 00');\r\n    console.log(sortable[0][1]+ ' 01');\r\n\r\n    var ranks = [];\r\n    var arr1 = [];\r\n    var arr2 = [];\r\n    var arr3 = [];\r\n    arr1[0] = 1;\r\n    var count = 1;\r\n    for(var i=0;i<sortable.length;i++){\r\n      arr2[i] = sortable[i][0];\r\n      arr3[i] = sortable[i][1];\r\n      if(i>0){\r\n        if(arr3[i]===arr3[i-1]){\r\n          arr1[i] = count;\r\n        }\r\n\r\n        else{\r\n          count = i+1;\r\n          arr1[i] = count;  \r\n        }\r\n      }\r\n\r\n      var obj = {arr1: arr1[i], arr2: arr2[i], arr3: arr3[i]};\r\n      ranks.push(obj);\r\n    }\r\n\r\n    return ranks;\r\n    \r\n  },\r\n   getProfileData: function(){\r\n    var userId = Meteor.userId();\r\n    var user = Meteor.users.findOne(userId);\r\n    var username = user.username;\r\n    var email = user.emails[0].address;\r\n    var created = user.createdAt;\r\n    var stats = user.stats;\r\n    var obj = {username: username, email: email, created: created, stats: stats};\r\n    return obj;\r\n  },\r\n\r\n  addQuizFunction: function (creater, category, que_array, conductQuiz, quizTime) {\r\n\r\n    // Make sure the user is logged in and is admin before inserting a task\r\n    if (! Meteor.userId()) {\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    var quizID = ThisQuiz.insert({\r\n      quizCreater: creater,\r\n      category: category,\r\n      createdAt: new Date(),\r\n      quiz: que_array\r\n    });\r\n\r\n    if (conductQuiz == 'yes')\r\n      Meteor.call('createHeadrushResponse', quizID, quizTime, category);\r\n  },\r\n\r\n  createHeadrushResponse: function(quizID, quizTime, category){\r\n    ThisResponse.insert({\r\n      userID: [],\r\n      quizID: quizID,\r\n      type: 'Group',\r\n      category: category,\r\n      answers: {},\r\n      time_left: 1200,\r\n      waiting_time: 600,\r\n      score: {},\r\n      conductedByHeadRush: true,\r\n      conductedAt: new Date(quizTime)\r\n    });\r\n  }\r\n\r\n});\r\n}"]}}]