[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"ind_quiz.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ind_quiz.js                                                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nThisQuiz = new Mongo.Collection(\"quizzes\");                                                                            // 1\nThisResponse = new Mongo.Collection(\"responses\");                                                                      // 2\nvar q = 0;                                                                                                             // 3\nRouter.configure({                                                                                                     // 4\n  layoutTemplate: 'navigation'                                                                                         // 5\n});                                                                                                                    //\nif (Meteor.isClient) {                                                                                                 // 7\n  var updateTimeLeft;                                                                                                  // 8\n  Template.signupForm.events({                                                                                         // 9\n    'submit #signup-form': function () {                                                                               // 10\n      function submitSignupForm(e, t) {                                                                                // 10\n        e.preventDefault();                                                                                            // 11\n        if (Meteor.users.findOne({ username: $('#signup-username').val() })) {                                         // 12\n          alert('Username already exists');                                                                            // 13\n        } else {                                                                                                       //\n          var input = t.find('#signup-password').value;                                                                // 16\n          var input2 = t.find('#signup-confirm').value;                                                                // 17\n          if (input.length < 4 || input.length > 8) {                                                                  // 18\n            alert(\"Please input the password between \" + 4 + \" and \" + 8 + \" characters\");                             // 20\n            return false;                                                                                              // 21\n          } else {                                                                                                     //\n            if (input != input2) {                                                                                     // 24\n              alert(\"Password Mismatch\");                                                                              // 25\n            } else {                                                                                                   //\n              Accounts.createUser({                                                                                    // 29\n                username: t.find('#signup-username').value,                                                            // 30\n                password: t.find('#signup-password').value,                                                            // 31\n                email: t.find('#signup-email').value,                                                                  // 32\n                stats: {},                                                                                             // 33\n                profile: {                                                                                             // 34\n                  confirm: t.find('#signup-confirm').value,                                                            // 35\n                  current_response_id: \"\"                                                                              // 36\n                },                                                                                                     //\n                stats: []                                                                                              // 38\n              });                                                                                                      //\n                                                                                                                       //\n              t.find('#signup-username').value = \"\";                                                                   // 41\n              t.find('#signup-password').value = \"\";                                                                   // 42\n              t.find('#signup-email').value = \"\";                                                                      // 43\n              t.find('#signup-confirm').value = \"\";                                                                    // 44\n            }                                                                                                          //\n            // Meteor.logout();                                                                                        //\n          }                                                                                                            // 23\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return submitSignupForm;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  //  Template.loginForm.events({                                                                                      //\n  //     'submit #login-form': function(e,t) {                                                                         //\n  //       e.preventDefault();                                                                                         //\n                                                                                                                       //\n  //        var unam=t.find('#login-username').value;                                                                  //\n  //        var password=t.find('#login-password').value;                                                              //\n                                                                                                                       //\n  //          Meteor.loginWithPassword(unam,password);                                                                 //\n  //          Router.go('/quiz');                                                                                      //\n  //     }                                                                                                             //\n  // });                                                                                                               //\n                                                                                                                       //\n  var quizQuestions = [];                                                                                              // 7\n                                                                                                                       //\n  changeAnswer = function changeAnswer(question) {                                                                     // 68\n    Meteor.call(\"getResponse\", question, function (error, result) {                                                    // 69\n      if (error) console.log(error.reason);else {                                                                      // 70\n        if (result) $('input[name=questionAnswer][value=' + result + ']').prop('checked', true);else $('input[name=questionAnswer]').prop('checked', false);\n      }                                                                                                                //\n    });                                                                                                                //\n  };                                                                                                                   //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.addquiz.onRendered(function () {                                                                            // 7\n    $(document).ready(function () {                                                                                    // 84\n      $('#quizTimeDiv').hide();                                                                                        // 85\n      $(\"input[name=conductQuiz]\").click(function () {                                                                 // 86\n        var val = $(this).val();                                                                                       // 87\n        if (val == 'yes') {                                                                                            // 88\n          $('#quizTimeDiv').show();                                                                                    // 89\n          $('#quizTime').prop('required', true);                                                                       // 90\n        } else {                                                                                                       //\n          $('#quizTimeDiv').hide();                                                                                    // 93\n          $('#quizTime').removeAttr('required');                                                                       // 94\n        }                                                                                                              //\n      });                                                                                                              //\n    });                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.addquiz.events({                                                                                            // 101\n    \"submit .quizEntry\": function () {                                                                                 // 102\n      function submitQuizEntry(event) {                                                                                // 102\n        event.preventDefault();                                                                                        // 103\n        var que_array = new Array();                                                                                   // 104\n        var creater = event.target.creater.value;                                                                      // 105\n        var category = event.target.category.value;                                                                    // 106\n        var conductQuiz = event.target.conductQuiz.value;                                                              // 107\n        var quizTime = event.target.quizTime.value + ':00+05:30';                                                      // 108\n                                                                                                                       //\n        for (var i = 1; i <= 10; i++) {                                                                                // 110\n          eval(\"var que\" + \"= event.target.question\" + i + \".value\");                                                  // 111\n          eval(\"var ans\" + \"= event.target.question\" + i + \"_answer.value\");                                           // 112\n          for (var op = 1; op <= 4; op++) {                                                                            // 113\n            eval(\"var opt\" + op + \"= event.target.question\" + i + \"_option\" + op + \".value\");                          // 114\n          }                                                                                                            //\n          que_array.push({ number: i, question: que, option1: opt1, option2: opt2, option3: opt3, option4: opt4, answer: ans });\n        }                                                                                                              //\n                                                                                                                       //\n        Meteor.call(\"addQuizFunction\", creater, category, que_array, conductQuiz, quizTime);                           // 119\n        event.target.reset();                                                                                          // 120\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizEntry;                                                                                          //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onCreated(function () {                                                                      // 125\n    this.time_left = new ReactiveVar(1200);                                                                            // 126\n    Session.clear('updateTimeLeft');                                                                                   // 127\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.onCreated(function () {                                                                           // 130\n    this.time_left = new ReactiveVar(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left);       // 131\n  });                                                                                                                  //\n  Template.waiting_time.onCreated(function () {                                                                        // 133\n    this.time_left = new ReactiveVar(300);                                                                             // 134\n    Session.clear('updateWaitingTimeLeft');                                                                            // 135\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.onRendered(function () {                                                                          // 138\n    if (Session.get('selectedType') === 'Individual') {                                                                // 139\n      $('#home').click(function () {                                                                                   // 140\n        console.log('home clicked');                                                                                   // 141\n        Meteor.users.update(Meteor.userId(), { $set: { \"profile.current_response_id\": '' } });                         // 142\n        Session.clear('final_answer');                                                                                 // 143\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 144\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 145\n        Session.clear('subscribed');                                                                                   // 146\n      });                                                                                                              //\n    }                                                                                                                  //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.onRendered(function () {                                                                            // 151\n    $('#home').click(function () {                                                                                     // 152\n      console.log('home clicked');                                                                                     // 153\n      Meteor.users.update(Meteor.userId(), { $set: { \"profile.current_response_id\": '' } });                           // 154\n      Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                      // 155\n      Meteor.clearInterval(Session.get('updateTimeLeft'));                                                             // 156\n      Session.clear('final_answer');                                                                                   // 157\n      Session.clear('subscribed');                                                                                     // 158\n    });                                                                                                                //\n  });                                                                                                                  //\n  Template.questionSelect.onRendered(function () {                                                                     // 161\n    Meteor.clearInterval(Session.get('updateTimeLeft'));                                                               // 162\n    var self = this;                                                                                                   // 163\n                                                                                                                       //\n    Meteor.call(\"getQuiz\", function (error, result) {                                                                  // 165\n      if (error) console.log(error.reason);else {                                                                      // 166\n        quizQuestions = result;                                                                                        // 169\n        Session.set('selectedQuestion', '1');                                                                          // 170\n        changeAnswer('1');                                                                                             // 171\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.call(\"getTimer\", function (error, result) {                                                                 // 177\n      if (error) console.log(error.reason);else {                                                                      // 178\n        self.time_left.set(result);                                                                                    // 181\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateTimeLeft = Meteor.setInterval(function () {                                                                  // 185\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 186\n      Meteor.call('setTimer', self.time_left.get());                                                                   // 187\n    }, 1000);                                                                                                          //\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);                                                           // 189\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onDestroyed(function () {                                                                    // 193\n                                                                                                                       //\n    Meteor.clearInterval('updateTimeLeft');                                                                            // 196\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onDestroyed(function () {                                                                      // 199\n                                                                                                                       //\n    Meteor.clearInterval('updateWaitingTimeLeft');                                                                     // 201\n    Session.clear('subscribed');                                                                                       // 202\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onRendered(function () {                                                                       // 205\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                        // 206\n    var self = this;                                                                                                   // 207\n                                                                                                                       //\n    Meteor.call(\"getWaitingTimer\", function (error, result) {                                                          // 209\n      if (error) console.log(error.reason);else {                                                                      // 210\n        self.time_left.set(result);                                                                                    // 213\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateWaitingTimeLeft = Meteor.setInterval(function () {                                                           // 217\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 218\n      Meteor.call('setWaitingTimer', self.time_left.get());                                                            // 219\n    }, 1000);                                                                                                          //\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);                                                       // 221\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.events({                                                                                     // 227\n    'click input': function () {                                                                                       // 228\n      function clickInput(event, template) {                                                                           // 228\n        Session.set('selectedQuestion', event.target.value);                                                           // 229\n        changeAnswer(event.target.value);                                                                              // 230\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.helpers({                                                                                            // 234\n                                                                                                                       //\n    'totalHeadrushQuizzes': function () {                                                                              // 236\n      function totalHeadrushQuizzes() {                                                                                // 236\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 237\n        var time = new Date();                                                                                         // 238\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 239\n                                                                                                                       //\n          if (!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedAt - new Date() < 0) {\n            console.log('Hello');                                                                                      // 242\n            groupQuizzes.splice(i, 1);                                                                                 // 243\n            i = -1;                                                                                                    // 244\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes.length > 0;                                                                                // 247\n      }                                                                                                                //\n                                                                                                                       //\n      return totalHeadrushQuizzes;                                                                                     //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showHeadRushQuizzes': function () {                                                                               // 250\n      function showHeadRushQuizzes() {                                                                                 // 250\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 251\n        var time = new Date();                                                                                         // 252\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 253\n                                                                                                                       //\n          if (!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedAt - new Date() < 0) {\n            console.log('Hello');                                                                                      // 256\n            groupQuizzes.splice(i, 1);                                                                                 // 257\n            i = -1;                                                                                                    // 258\n          } else {                                                                                                     //\n            groupQuizzes[i].date = groupQuizzes[i].conductedAt.toDateString();                                         // 260\n            groupQuizzes[i].time = groupQuizzes[i].conductedAt.toLocaleTimeString();                                   // 261\n            groupQuizzes[i].subscribe = Math.abs(groupQuizzes[i].conductedAt - new Date()) / (1000 * 60) < 10;         // 262\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes;                                                                                           // 265\n      }                                                                                                                //\n                                                                                                                       //\n      return showHeadRushQuizzes;                                                                                      //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showGroupQuizzes': function () {                                                                                  // 269\n      function showGroupQuizzes() {                                                                                    // 269\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 270\n        var time = new Date();                                                                                         // 271\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 272\n                                                                                                                       //\n          if (groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {                              // 274\n            console.log('Hello');                                                                                      // 275\n            groupQuizzes.splice(i, 1);                                                                                 // 276\n            i = -1;                                                                                                    // 277\n          }                                                                                                            //\n          // if(groupQuizzes[i].conductedByHeadRush){                                                                  //\n          //   headrushQuiz = groupQuizzes[i];                                                                         //\n          //   groupQuizzes.splice(i, 1);                                                                              //\n          //   i=-1;                                                                                                   //\n          // }                                                                                                         //\n        }                                                                                                              // 272\n        return groupQuizzes;                                                                                           // 286\n      }                                                                                                                //\n                                                                                                                       //\n      return showGroupQuizzes;                                                                                         //\n    }(),                                                                                                               //\n    'totalGroupQuizzes': function () {                                                                                 // 288\n      function totalGroupQuizzes() {                                                                                   // 288\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 289\n        var time = new Date();                                                                                         // 290\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 291\n                                                                                                                       //\n          if (groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {                              // 293\n            console.log('Hello');                                                                                      // 294\n            groupQuizzes.splice(i, 1);                                                                                 // 295\n            i = -1;                                                                                                    // 296\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes.length > 0;                                                                                // 300\n      }                                                                                                                //\n                                                                                                                       //\n      return totalGroupQuizzes;                                                                                        //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.events({                                                                                             // 304\n    'click input': function () {                                                                                       // 305\n      function clickInput() {                                                                                          // 305\n        event.preventDefault();                                                                                        // 306\n                                                                                                                       //\n        var responseID = $(event.target).attr('id');                                                                   // 308\n        var subscribed = $(event.target).attr('value');                                                                // 309\n        console.log(subscribed);                                                                                       // 310\n        Session.setPersistent('subscribed', subscribed);                                                               // 311\n                                                                                                                       //\n        Meteor.call('setGroupResponseId', responseID);                                                                 // 313\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.helpers({                                                                                    // 317\n    time_left: function () {                                                                                           // 318\n      function time_left() {                                                                                           // 318\n        var time = Template.instance().time_left.get();                                                                // 319\n        Session.set('timeLeft', time);                                                                                 // 320\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 321\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 322\n        if (time <= 0) {                                                                                               // 323\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 324\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 325\n          Session.clear('final_answer');                                                                               // 326\n          Session.clear('subscribed');                                                                                 // 327\n          $('.scoreCard').trigger('click');                                                                            // 328\n        }                                                                                                              //\n        Session.update('quiz_time_left', minutes + \":\" + seconds);                                                     // 330\n        Session.makePersistent('quiz_time_left');                                                                      // 331\n        return minutes + \":\" + seconds;                                                                                // 332\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }(),                                                                                                               //\n    'ended': function () {                                                                                             // 334\n      function ended() {                                                                                               // 334\n        return Session.get('timeLeft') <= 0;                                                                           // 335\n      }                                                                                                                //\n                                                                                                                       //\n      return ended;                                                                                                    //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.helpers({                                                                                      // 339\n    time_left: function () {                                                                                           // 340\n      function time_left() {                                                                                           // 340\n        var time = Template.instance().time_left.get();                                                                // 341\n        Session.set('timeLeft', time);                                                                                 // 342\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 343\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 344\n        if (time <= 0) {                                                                                               // 345\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 346\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 347\n          Session.clear('final_answer');                                                                               // 348\n          Session.clear('subscribed');                                                                                 // 349\n        }                                                                                                              //\n        return minutes + \":\" + seconds;                                                                                // 351\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.helpers({                                                                                        // 355\n    'user': function () {                                                                                              // 356\n      function user() {                                                                                                // 356\n        console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");                             // 357\n        return Meteor.users.find({ _id: Meteor.userId() });                                                            // 358\n      }                                                                                                                //\n                                                                                                                       //\n      return user;                                                                                                     //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'isAdmin': function () {                                                                                           // 361\n      function isAdmin() {                                                                                             // 361\n        return Meteor.users.findOne(Meteor.userId()).username === 'admin';                                             // 362\n      }                                                                                                                //\n                                                                                                                       //\n      return isAdmin;                                                                                                  //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.events({                                                                                         // 366\n    'click #logoutbtn': function () {                                                                                  // 367\n      function clickLogoutbtn() {                                                                                      // 367\n        Meteor.call('endquiz', Meteor.userId());                                                                       // 368\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 369\n        console.log();                                                                                                 // 370\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 371\n        Session.clear('final_answer');                                                                                 // 372\n        Session.clear('subscribed');                                                                                   // 373\n        Meteor.logout();                                                                                               // 374\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #loginbtn': function () {                                                                                   // 377\n      function clickLoginbtn(e, t) {                                                                                   // 377\n        e.preventDefault();                                                                                            // 378\n                                                                                                                       //\n        console.log('hello');                                                                                          // 380\n        var unam = t.find('#login-username').value;                                                                    // 381\n        var password = t.find('#login-password').value;                                                                // 382\n                                                                                                                       //\n        Meteor.loginWithPassword(unam, password);                                                                      // 384\n        Router.go('/quiz');                                                                                            // 385\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLoginbtn;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'keypress input': function () {                                                                                    // 388\n      function keypressInput(e, t) {                                                                                   // 388\n        if (e.which === 13) {                                                                                          // 389\n          $('#loginbtn').trigger('click');                                                                             // 390\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return keypressInput;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #profileButton': function () {                                                                              // 394\n      function clickProfileButton() {                                                                                  // 394\n        Meteor.call(\"getProfileData\", function (error, result) {                                                       // 395\n          if (error) {                                                                                                 // 396\n            //console.log(\"Chu\");                                                                                      //\n            console.log(error.reason);                                                                                 // 398\n          } else {                                                                                                     //\n            Session.set('profileData', result);                                                                        // 402\n            Router.go('profile');                                                                                      // 403\n            //console.log(Session.get('selectedScore1'));                                                              //\n            $('#links li').removeClass('active');                                                                      // 401\n            $(this).parent().addClass('active');                                                                       // 406\n          }                                                                                                            //\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickProfileButton;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #ruleButton': function () {                                                                                 // 411\n      function clickRuleButton() {                                                                                     // 411\n        $('#links li').removeClass('active');                                                                          // 412\n        $(this).parent().addClass('active');                                                                           // 413\n        Router.go('rules');                                                                                            // 414\n      }                                                                                                                //\n                                                                                                                       //\n      return clickRuleButton;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #home': function () {                                                                                       // 418\n      function clickHome() {                                                                                           // 418\n        $('#links li').removeClass('active');                                                                          // 419\n        $(this).parent().addClass('active');                                                                           // 420\n        Router.go('quiz');                                                                                             // 421\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #addquiz': function () {                                                                                    // 424\n      function clickAddquiz() {                                                                                        // 424\n        $('#links li').removeClass('active');                                                                          // 425\n        $(this).parent().addClass('active');                                                                           // 426\n        Router.go('addquiz');                                                                                          // 427\n      }                                                                                                                //\n                                                                                                                       //\n      return clickAddquiz;                                                                                             //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.profile1.helpers({                                                                                          // 433\n    'getProfileData': function () {                                                                                    // 434\n      function getProfileData() {                                                                                      // 434\n        return Session.get('profileData');                                                                             // 435\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsIndividual': function () {                                                                                // 438\n      function getStatsIndividual() {                                                                                  // 438\n        var statistics = Session.get('profileData').stats;                                                             // 439\n        var count = 0;                                                                                                 // 440\n        var arr1 = [];                                                                                                 // 441\n        var arr2 = [];                                                                                                 // 442\n        var arr3 = [];                                                                                                 // 443\n        var array = [];                                                                                                // 444\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 446\n          if (statistics[i].type === 'Individual') {                                                                   // 447\n            arr1[count] = statistics[i].category;                                                                      // 448\n            arr2[count] = statistics[i].score;                                                                         // 449\n            arr3[count] = statistics[i].takenOn;                                                                       // 450\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 451\n            array.push(obj);                                                                                           // 452\n            count++;                                                                                                   // 453\n          }                                                                                                            //\n        }                                                                                                              //\n        Session.setPersistent('arrayIndLen', array.length);                                                            // 456\n        return array;                                                                                                  // 457\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsIndividual;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsGroup': function () {                                                                                     // 460\n      function getStatsGroup() {                                                                                       // 460\n        var statistics = Session.get('profileData').stats;                                                             // 461\n        var count = 0;                                                                                                 // 462\n        var arr1 = [];                                                                                                 // 463\n        var arr2 = [];                                                                                                 // 464\n        var arr3 = [];                                                                                                 // 465\n        var array = [];                                                                                                // 466\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 468\n          if (statistics[i].type === 'Group') {                                                                        // 469\n            arr1[count] = statistics[i].category;                                                                      // 470\n            arr2[count] = statistics[i].score;                                                                         // 471\n            arr3[count] = statistics[i].takenOn;                                                                       // 472\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 473\n            array.push(obj);                                                                                           // 474\n            count++;                                                                                                   // 475\n          }                                                                                                            //\n        }                                                                                                              //\n        Session.setPersistent('arrayGrpLen', array.length);                                                            // 478\n        return array;                                                                                                  // 479\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsGroup;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getLengths': function () {                                                                                        // 482\n      function getLengths() {                                                                                          // 482\n        var obj = { a1: Session.get('arrayIndLen') > 0, a2: Session.get('arrayGrpLen') > 0 };                          // 483\n        console.log(obj + ' ...........obj');                                                                          // 484\n        return obj;                                                                                                    // 485\n      }                                                                                                                //\n                                                                                                                       //\n      return getLengths;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionShow.events({                                                                                       // 7\n    'click input': function () {                                                                                       // 492\n      function clickInput(event, template) {                                                                           // 492\n        Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')), event.target.value);                     // 493\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 496\n      function clickOnsubmitbutton() {                                                                                 // 496\n                                                                                                                       //\n        var final_answer = $('#onsubmitbutton').attr('value');                                                         // 498\n        Session.setPersistent('final_answer', final_answer);                                                           // 499\n        console.log(\"going Here\");                                                                                     // 500\n        Meteor.call(\"getQuestionSet\", function (error, result) {                                                       // 501\n          if (error) {                                                                                                 // 502\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 504\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.setPersistent('selectedScore', result);                                                            // 509\n            console.log(Session.get('selectedScore'));                                                                 // 510\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getResponseSet\", function (error, result) {                                                       // 514\n          if (error) {                                                                                                 // 515\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 517\n          } else {                                                                                                     //\n            Session.setPersistent('selectedScore1', result);                                                           // 521\n            console.log(Session.get('selectedScore1'));                                                                // 522\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getActualScore\", function (error, result) {                                                       // 526\n          if (error) {                                                                                                 // 527\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 529\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.setPersistent('selectedScore2', result);                                                           // 534\n            // console.log(Session.get('selectedScore2'));                                                             //\n            // console.log(\"aaasssssss\"+ Session.get('selectedScore2'));                                               //\n          }                                                                                                            // 532\n        });                                                                                                            //\n        Router.go('scoreCard');                                                                                        // 539\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionShow.helpers({                                                                                      // 543\n    questionData: function () {                                                                                        // 544\n      function questionData() {                                                                                        // 544\n        return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];                                           // 545\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showSubmitButton': function () {                                                                                  // 548\n      function showSubmitButton() {                                                                                    // 548\n        return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;\n      }                                                                                                                //\n                                                                                                                       //\n      return showSubmitButton;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.quizSelect.events({                                                                                         // 7\n    \"submit .quizParameters\": function () {                                                                            // 556\n      function submitQuizParameters(event) {                                                                           // 556\n        event.preventDefault();                                                                                        // 557\n        var selectedType = event.target.quizType.value;                                                                // 558\n        var selectedCategory = event.target.quizCategory.value;                                                        // 559\n        Session.setPersistent('selectedType', selectedType);                                                           // 560\n        Meteor.call(\"createResponse\", selectedType, selectedCategory);                                                 // 561\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizParameters;                                                                                     //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.events({                                                                                          // 566\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 570\n      function clickOnsubmitbutton(event) {                                                                            // 570\n        if (ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {                           // 571\n          event.preventDefault();                                                                                      // 572\n          alert('Please wait for the quiz to complete to see the leaderboard');                                        // 573\n        } else {                                                                                                       //\n          Meteor.call(\"getRanking\", function (error, result) {                                                         // 576\n            if (error) {                                                                                               // 577\n                                                                                                                       //\n              console.log(error.reason);                                                                               // 579\n            } else {                                                                                                   //\n                                                                                                                       //\n              Session.set('rank', result);                                                                             // 584\n              console.log(Session.get('rank') + ' ............herep');                                                 // 585\n              Router.go('ranking');                                                                                    // 586\n            }                                                                                                          //\n          });                                                                                                          //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #home1': function () {                                                                                      // 592\n      function clickHome1() {                                                                                          // 592\n        $(\"#home\").trigger('click');                                                                                   // 593\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome1;                                                                                               //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.events({                                                                                            // 599\n    'click #home2': function () {                                                                                      // 600\n      function clickHome2() {                                                                                          // 600\n        $(\"#home\").trigger('click');                                                                                   // 601\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome2;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.helpers({                                                                                           // 605\n    'userRanking': function () {                                                                                       // 606\n      function userRanking() {                                                                                         // 606\n        return Session.get('rank');                                                                                    // 607\n      }                                                                                                                //\n                                                                                                                       //\n      return userRanking;                                                                                              //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.helpers({                                                                                         // 611\n                                                                                                                       //\n    questionData: function () {                                                                                        // 613\n      function questionData() {                                                                                        // 613\n                                                                                                                       //\n        var arr1 = [];                                                                                                 // 615\n        var arr2 = [];                                                                                                 // 616\n        var arr3 = [];                                                                                                 // 617\n        var arr4 = [];                                                                                                 // 618\n        var arr5 = [];                                                                                                 // 619\n        var arr6 = [];                                                                                                 // 620\n        var arr7 = [];                                                                                                 // 621\n        var arr8 = [];                                                                                                 // 622\n        var arrayFinal = [];                                                                                           // 623\n        for (var i = 0; i < 10; i++) {                                                                                 // 624\n          arr1[i] = Session.get('selectedScore')[i].question;                                                          // 626\n                                                                                                                       //\n          arr2[i] = Session.get('selectedScore')[i].option1;                                                           // 628\n          arr3[i] = Session.get('selectedScore')[i].option2;                                                           // 629\n          arr4[i] = Session.get('selectedScore')[i].option3;                                                           // 630\n          arr5[i] = Session.get('selectedScore')[i].option4;                                                           // 631\n          var ans = parseInt(Session.get('selectedScore')[i].answer);                                                  // 632\n          if (ans == 1) {                                                                                              // 633\n            arr6[i] = arr2[i];                                                                                         // 634\n          } else if (ans == 2) {                                                                                       //\n            arr6[i] = arr3[i];                                                                                         // 638\n          } else if (ans == 3) {                                                                                       //\n            arr6[i] = arr4[i];                                                                                         // 642\n          } else {                                                                                                     //\n            arr6[i] = arr5[i];                                                                                         // 646\n          }                                                                                                            //\n                                                                                                                       //\n          arr7[i] = Session.get('selectedScore1')[i + 1];                                                              // 649\n                                                                                                                       //\n          arr8[i] = Session.get('selectedScore2')[i];                                                                  // 651\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i] };\n          arrayFinal.push(obj);                                                                                        // 654\n        }                                                                                                              //\n                                                                                                                       //\n        console.log(\"here....................\", arrayFinal);                                                           // 659\n                                                                                                                       //\n        console.log('final............. ' + arrayFinal[0].arr1);                                                       // 661\n        return arrayFinal;                                                                                             // 662\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getTotalScore': function () {                                                                                     // 666\n      function getTotalScore() {                                                                                       // 666\n        return Session.get('selectedScore2')[10];                                                                      // 667\n      }                                                                                                                //\n                                                                                                                       //\n      return getTotalScore;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'Group': function () {                                                                                             // 670\n      function Group() {                                                                                               // 670\n        return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';                       // 671\n      }                                                                                                                //\n                                                                                                                       //\n      return Group;                                                                                                    //\n    }(),                                                                                                               //\n    'quizTimeLeft': function () {                                                                                      // 673\n      function quizTimeLeft() {                                                                                        // 673\n        //return Session.get('quiz_time_left');                                                                        //\n        Tracker.autorun(function () {                                                                                  // 675\n          return Session.get('quiz_time_left');                                                                        // 676\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return quizTimeLeft;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getIndex: function () {                                                                                            // 680\n      function getIndex(index) {                                                                                       // 680\n        return index + 1;                                                                                              // 681\n      }                                                                                                                //\n                                                                                                                       //\n      return getIndex;                                                                                                 //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n  Accounts.ui.config({                                                                                                 // 685\n    passwordSignupFields: \"USERNAME_AND_OPTIONAL_EMAIL\"                                                                // 686\n  });                                                                                                                  //\n  /* **************************************************************************************************** */           //\n}                                                                                                                      // 7\n                                                                                                                       //\nRouter.route('/', {                                                                                                    // 691\n  name: 'home',                                                                                                        // 692\n  template: 'appBody'                                                                                                  // 693\n});                                                                                                                    //\nRouter.route('/profile', {                                                                                             // 695\n  name: 'profile1',                                                                                                    // 696\n  template: 'profile1',                                                                                                // 697\n  onBeforeAction: function () {                                                                                        // 698\n    function onBeforeAction() {                                                                                        // 698\n      if (!Meteor.userId()) {                                                                                          // 699\n        alert('Please Log In First');                                                                                  // 700\n        Router.go('home');                                                                                             // 701\n      } else {                                                                                                         //\n        this.next();                                                                                                   // 704\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/rules', {                                                                                               // 709\n  name: 'rules',                                                                                                       // 710\n  template: 'rules'                                                                                                    // 711\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/addquiz', {                                                                                             // 714\n  name: 'addquiz',                                                                                                     // 715\n  template: 'addquiz',                                                                                                 // 716\n  onBeforeAction: function () {                                                                                        // 717\n    function onBeforeAction() {                                                                                        // 717\n      if (!Meteor.userId()) {                                                                                          // 718\n        alert('Please Log In First');                                                                                  // 719\n        Router.go('home');                                                                                             // 720\n      } else if (Meteor.user().username === 'admin') {                                                                 //\n        this.next();                                                                                                   // 723\n      } else {                                                                                                         //\n        alert('You are not admin, login with admin account');                                                          // 726\n        Router.go('home');                                                                                             // 727\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/quiz', {                                                                                                // 732\n  name: 'quiz',                                                                                                        // 733\n  template: 'ApplicationLayout',                                                                                       // 734\n  onBeforeAction: function () {                                                                                        // 735\n    function onBeforeAction() {                                                                                        // 735\n      if (!Meteor.user()) {                                                                                            // 736\n        //alert('Please Log in First');                                                                                //\n        this.next();                                                                                                   // 738\n        this.render('appBody', { to: \"template1\" });                                                                   // 739\n        this.render('emptyTemplate', { to: \"template2\" });                                                             // 740\n      } else if (Meteor.user().profile.current_response_id == '') {                                                    //\n        this.next();                                                                                                   // 743\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 744\n        this.render('quizSelect', { to: \"template2\" });                                                                // 745\n      } else if ((Session.get('subscribed') === 'Subscribe' || Session.get('selectedType') === 'Group') && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0) {\n        this.next();                                                                                                   // 748\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 749\n        this.render('waiting_time', { to: \"template2\" });                                                              // 750\n      } else if (ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer') === 'submit') {\n        this.next();                                                                                                   // 755\n        if (Session.get('final_answer') === 'submit') {                                                                // 756\n          this.render('scoreCard', { to: \"template1\" });                                                               // 757\n          this.render('emptyTemplate', { to: \"template2\" });                                                           // 758\n        }                                                                                                              //\n                                                                                                                       //\n        clearInterval('updateTimeLeft');                                                                               // 761\n        clearInterval('updateWaitingTimeLeft');                                                                        // 762\n      } else {                                                                                                         //\n        this.next();                                                                                                   // 765\n        this.render('questionSelect', { to: \"template1\" });                                                            // 766\n        this.render('questionShow', { to: \"template2\" });                                                              // 767\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/ranking', {                                                                                             // 773\n  template: 'ranking',                                                                                                 // 774\n  name: 'ranking'                                                                                                      // 775\n                                                                                                                       //\n});                                                                                                                    //\n                                                                                                                       //\n/* **************************************************************************************************** */             //\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 784\n  Meteor.startup(function () {                                                                                         // 785\n    process.env.MAIL_URL = \"smtp://jaygohil15@gmail.com:jgohilay10125@smtp.gmail.com:465/\";                            // 786\n    Accounts.config({ sendVerificationEmail: true, forbidClientAccountCreation: false });                              // 787\n  });                                                                                                                  //\n  var previousValue = 0;                                                                                               // 790\n  Meteor.methods({                                                                                                     // 791\n                                                                                                                       //\n    getResponseSet: function () {                                                                                      // 793\n      function getResponseSet() {                                                                                      // 793\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 796\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 798\n                                                                                                                       //\n        var userId = Meteor.userId();                                                                                  // 800\n                                                                                                                       //\n        console.log('User ' + userId);                                                                                 // 802\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 804\n                                                                                                                       //\n        console.log(answer);                                                                                           // 806\n        return answer;                                                                                                 // 807\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponseSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuestionSet: function () {                                                                                      // 812\n      function getQuestionSet() {                                                                                      // 812\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 814\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 816\n        var userId = Meteor.userId();                                                                                  // 817\n                                                                                                                       //\n        var currentQuiz = response.quizID;                                                                             // 820\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 822\n        var quizQuestions = correctOption.quiz;                                                                        // 823\n        return quizQuestions;                                                                                          // 824\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuestionSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getActualScore: function () {                                                                                      // 828\n      function getActualScore() {                                                                                      // 828\n        var _$set;                                                                                                     //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 829\n        var eachScore = [];                                                                                            // 830\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 832\n        var userId = Meteor.userId();                                                                                  // 833\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 835\n        //   var answer = response.answers.userId;                                                                     //\n        var currentQuiz = response.quizID;                                                                             // 828\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 839\n        var quizQuestions = correctOption.quiz;                                                                        // 840\n                                                                                                                       //\n        var cor_array = [];                                                                                            // 842\n        var score = 0;                                                                                                 // 843\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 845\n          var correct = correctOption.quiz[i];                                                                         // 846\n          var cor = correct.answer;                                                                                    // 847\n          var p = 'option' + cor;                                                                                      // 848\n                                                                                                                       //\n          var cor = 'option' + cor;                                                                                    // 850\n          cor_array[i] = eval('correct.' + p);                                                                         // 851\n          console.log(cor_array[i]);                                                                                   // 852\n        }                                                                                                              //\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 857\n          if (answer[i + 1] === cor_array[i]) {                                                                        // 859\n            eachScore[i] = 10;                                                                                         // 861\n            score += 10;                                                                                               // 862\n          } else {                                                                                                     //\n            eachScore[i] = 0;                                                                                          // 867\n          }                                                                                                            //\n        }                                                                                                              //\n                                                                                                                       //\n        ThisResponse.update({ _id: response._id }, { $set: (_$set = {}, _$set['score.' + userId] = score, _$set) });   // 871\n        console.log(ThisResponse.findOne(response._id).score);                                                         // 872\n        eachScore[10] = score;                                                                                         // 873\n                                                                                                                       //\n        Meteor.call('saveStats');                                                                                      // 875\n        // console.log('b..............'+eachScore[2]);                                                                //\n        //Session.set('score', score);                                                                                 //\n        //console.log(response.score.userId);                                                                          //\n                                                                                                                       //\n        return eachScore;                                                                                              // 828\n      }                                                                                                                //\n                                                                                                                       //\n      return getActualScore;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    saveStats: function () {                                                                                           // 884\n      function saveStats() {                                                                                           // 884\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 885\n        var response_doc = ThisResponse.findOne(responseID);                                                           // 886\n        // var user_id =                                                                                               //\n        var category = ThisQuiz.findOne(response_doc.quizID).category;                                                 // 884\n        // for (var i=0 ; i<user_ids.length ; i++){                                                                    //\n        // var id = user_ids[i];                                                                                       //\n        // var user_doc = Meteor.users.findOne(id);                                                                    //\n        // var rank = getRanking                                                                                       //\n                                                                                                                       //\n        var new_stat = { quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID };\n        // console.log(new_stat);                                                                                      //\n        if (Meteor.user().stats) Meteor.users.update(Meteor.user(), { $push: { stats: new_stat } });else Meteor.users.update(Meteor.user(), { $set: { stats: [new_stat] } });\n        // Meteor.users.update(id, { $push: { stats: new_stat }});                                                     //\n        // }                                                                                                           //\n      }                                                                                                                // 884\n                                                                                                                       //\n      return saveStats;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuiz: function () {                                                                                             // 907\n      function getQuiz() {                                                                                             // 907\n        if (Meteor.user()) {                                                                                           // 908\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 909\n            var responseID = Meteor.user().profile.current_response_id;                                                // 910\n            var quizID = ThisResponse.findOne(responseID).quizID;                                                      // 911\n            var randomQuiz = ThisQuiz.findOne(quizID);                                                                 // 912\n            var quizQuestions = randomQuiz.quiz;                                                                       // 913\n            for (var i = 0; i < quizQuestions.length; i++) {                                                           // 914\n              delete quizQuestions[i][\"answer\"];                                                                       // 915\n            }                                                                                                          //\n            return quizQuestions;                                                                                      // 917\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRandomQuizID: function () {                                                                                     // 923\n      function getRandomQuizID(category) {                                                                             // 923\n        var randomQuiz = ThisQuiz.find({ category: category }).fetch();                                                // 924\n        var index = Math.floor(Math.random() * randomQuiz.length);                                                     // 925\n        if (index === previousValue) {                                                                                 // 926\n          index = (index + 1) % randomQuiz.length;                                                                     // 927\n          previousValue = index;                                                                                       // 928\n        }                                                                                                              //\n                                                                                                                       //\n        randomQuiz = randomQuiz[index];                                                                                // 931\n        return randomQuiz._id;                                                                                         // 932\n      }                                                                                                                //\n                                                                                                                       //\n      return getRandomQuizID;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createResponse: function () {                                                                                      // 935\n      function createResponse(type, category) {                                                                        // 935\n        var _answers;                                                                                                  //\n                                                                                                                       //\n        if (!Meteor.userId()) {                                                                                        // 937\n          throw new Meteor.Error('not-authorized');                                                                    // 937\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = Meteor.call('getRandomQuizID', category);                                                         // 939\n                                                                                                                       //\n        var responseID = ThisResponse.insert({                                                                         // 941\n          userID: [Meteor.userId()],                                                                                   // 942\n          category: category,                                                                                          // 943\n          quizID: quizID,                                                                                              // 944\n          type: type,                                                                                                  // 945\n          answers: (_answers = {}, _answers[Meteor.userId()] = {}, _answers),                                          // 946\n          time_left: 60,                                                                                               // 947\n          waiting_time: 60,                                                                                            // 948\n          score: {},                                                                                                   // 949\n          conductedAt: new Date()                                                                                      // 950\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 953\n      }                                                                                                                //\n                                                                                                                       //\n      return createResponse;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setResponse: function () {                                                                                         // 956\n      function setResponse(question, answer) {                                                                         // 956\n        var _$set2;                                                                                                    //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 957\n        var user = Meteor.userId();                                                                                    // 958\n        ThisResponse.update(responseID, { $set: (_$set2 = {}, _$set2['answers.' + user + '.' + question] = answer, _$set2) });\n      }                                                                                                                //\n                                                                                                                       //\n      return setResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getResponse: function () {                                                                                         // 962\n      function getResponse(question) {                                                                                 // 962\n        if (Meteor.user()) {                                                                                           // 963\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 964\n            var responseID = Meteor.user().profile.current_response_id;                                                // 965\n            var user = Meteor.userId();                                                                                // 966\n            var response = ThisResponse.findOne(responseID).answers;                                                   // 967\n            var answer = eval('response.' + user + '[' + question + ']');                                              // 968\n            return answer;                                                                                             // 969\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setTimer: function () {                                                                                            // 974\n      function setTimer(new_time) {                                                                                    // 974\n        if (Meteor.user()) {                                                                                           // 975\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 976\n            var responseID = Meteor.user().profile.current_response_id;                                                // 977\n            var response = ThisResponse.findOne(responseID);                                                           // 978\n            if (response.time_left > new_time) ThisResponse.update(response._id, { $set: { time_left: new_time } });   // 979\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return setTimer;                                                                                                 //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getTimer: function () {                                                                                            // 985\n      function getTimer() {                                                                                            // 985\n        if (Meteor.user()) {                                                                                           // 986\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 987\n            var responseID = Meteor.user().profile.current_response_id;                                                // 988\n            return ThisResponse.findOne(responseID).time_left;                                                         // 989\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getTimer;                                                                                                 //\n    }(),                                                                                                               //\n    endquiz: function () {                                                                                             // 994\n      function endquiz(id) {                                                                                           // 994\n        Meteor.users.update({ _id: id }, { $set: { \"profile.current_response_id\": \"\" } });                             // 995\n      }                                                                                                                //\n                                                                                                                       //\n      return endquiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setWaitingTimer: function () {                                                                                     // 998\n      function setWaitingTimer(new_time) {                                                                             // 998\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 999\n        var response = ThisResponse.findOne(responseID);                                                               // 1000\n        if (response.waiting_time > new_time) ThisResponse.update(response._id, { $set: { waiting_time: new_time } });\n      }                                                                                                                //\n                                                                                                                       //\n      return setWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getWaitingTimer: function () {                                                                                     // 1005\n      function getWaitingTimer() {                                                                                     // 1005\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 1006\n        return ThisResponse.findOne(responseID).waiting_time;                                                          // 1007\n      }                                                                                                                //\n                                                                                                                       //\n      return getWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'setGroupResponseId': function () {                                                                                // 1010\n      function setGroupResponseId(responseID) {                                                                        // 1010\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 1011\n      }                                                                                                                //\n                                                                                                                       //\n      return setGroupResponseId;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRanking: function () {                                                                                          // 1014\n      function getRanking() {                                                                                          // 1014\n        //var responseID = 'vxprdPF2CG9jdvRQZ';                                                                        //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 1016\n        var response = ThisResponse.findOne(responseID);                                                               // 1017\n        var scores = ThisResponse.findOne(response._id).score;                                                         // 1018\n        var temp = {};                                                                                                 // 1019\n                                                                                                                       //\n        console.log(scores);                                                                                           // 1021\n                                                                                                                       //\n        for (var key in meteorBabelHelpers.sanitizeForInObject(scores)) {                                              // 1023\n          temp[Meteor.users.findOne(key).username] = scores[key];                                                      // 1024\n          console.log('Hello.................' + temp[Meteor.users.findOne(key).emails[0].address]);                   // 1025\n        }                                                                                                              //\n                                                                                                                       //\n        scores = temp;                                                                                                 // 1028\n                                                                                                                       //\n        var sortable = [];                                                                                             // 1030\n        for (var entry in meteorBabelHelpers.sanitizeForInObject(scores)) {                                            // 1031\n          sortable.push([entry, scores[entry]]);                                                                       // 1032\n        }sortable.sort(function (a, b) {                                                                               //\n          return b[1] - a[1];                                                                                          // 1033\n        });                                                                                                            //\n        console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]                                        // 1034\n        console.log(sortable[0][0] + ' 00');                                                                           // 1014\n        console.log(sortable[0][1] + ' 01');                                                                           // 1036\n                                                                                                                       //\n        var ranks = [];                                                                                                // 1038\n        var arr1 = [];                                                                                                 // 1039\n        var arr2 = [];                                                                                                 // 1040\n        var arr3 = [];                                                                                                 // 1041\n        arr1[0] = 1;                                                                                                   // 1042\n        var count = 1;                                                                                                 // 1043\n        for (var i = 0; i < sortable.length; i++) {                                                                    // 1044\n          arr2[i] = sortable[i][0];                                                                                    // 1045\n          arr3[i] = sortable[i][1];                                                                                    // 1046\n          if (i > 0) {                                                                                                 // 1047\n            if (arr3[i] === arr3[i - 1]) {                                                                             // 1048\n              arr1[i] = count;                                                                                         // 1049\n            } else {                                                                                                   //\n              count = i + 1;                                                                                           // 1053\n              arr1[i] = count;                                                                                         // 1054\n            }                                                                                                          //\n          }                                                                                                            //\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i] };                                                   // 1058\n          ranks.push(obj);                                                                                             // 1059\n        }                                                                                                              //\n                                                                                                                       //\n        return ranks;                                                                                                  // 1062\n      }                                                                                                                //\n                                                                                                                       //\n      return getRanking;                                                                                               //\n    }(),                                                                                                               //\n    getProfileData: function () {                                                                                      // 1065\n      function getProfileData() {                                                                                      // 1065\n        var userId = Meteor.userId();                                                                                  // 1066\n        var user = Meteor.users.findOne(userId);                                                                       // 1067\n        var username = user.username;                                                                                  // 1068\n        var email = user.emails[0].address;                                                                            // 1069\n        var created = user.createdAt;                                                                                  // 1070\n        var stats = user.stats;                                                                                        // 1071\n        var obj = { username: username, email: email, created: created, stats: stats };                                // 1072\n        return obj;                                                                                                    // 1073\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    addQuizFunction: function () {                                                                                     // 1076\n      function addQuizFunction(creater, category, que_array, conductQuiz, quizTime) {                                  // 1076\n                                                                                                                       //\n        // Make sure the user is logged in and is admin before inserting a task                                        //\n        if (!Meteor.userId()) {                                                                                        // 1079\n          throw new Meteor.Error(\"not-authorized\");                                                                    // 1080\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = ThisQuiz.insert({                                                                                 // 1083\n          quizCreater: creater,                                                                                        // 1084\n          category: category,                                                                                          // 1085\n          createdAt: new Date(),                                                                                       // 1086\n          quiz: que_array                                                                                              // 1087\n        });                                                                                                            //\n                                                                                                                       //\n        if (conductQuiz == 'yes') Meteor.call('createHeadrushResponse', quizID, quizTime, category);                   // 1090\n      }                                                                                                                //\n                                                                                                                       //\n      return addQuizFunction;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createHeadrushResponse: function () {                                                                              // 1094\n      function createHeadrushResponse(quizID, quizTime, category) {                                                    // 1094\n        ThisResponse.insert({                                                                                          // 1095\n          userID: [],                                                                                                  // 1096\n          quizID: quizID,                                                                                              // 1097\n          type: 'Group',                                                                                               // 1098\n          category: category,                                                                                          // 1099\n          answers: {},                                                                                                 // 1100\n          time_left: 1200,                                                                                             // 1101\n          waiting_time: 600,                                                                                           // 1102\n          score: {},                                                                                                   // 1103\n          conductedByHeadRush: true,                                                                                   // 1104\n          conductedAt: new Date(quizTime)                                                                              // 1105\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return createHeadrushResponse;                                                                                   //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n}                                                                                                                      //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./ind_quiz.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/ind_quiz.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["ThisQuiz = new Mongo.Collection(\"quizzes\");\r\nThisResponse = new Mongo.Collection(\"responses\");\r\nvar q=0;\r\nRouter.configure({\r\n  layoutTemplate: 'navigation'\r\n});\r\nif (Meteor.isClient) {\r\n      var updateTimeLeft;\r\n      Template.signupForm.events({\r\n    'submit #signup-form': function(e,t){\r\n      e.preventDefault();\r\n      if(Meteor.users.findOne({username: $('#signup-username').val()}) ) {\r\n        alert('Username already exists');\r\n      } \r\n      else {\r\n      var input=t.find('#signup-password').value;\r\n      var input2=t.find('#signup-confirm').value;\r\n      if(input.length<4 || input.length> 8)  \r\n          {   \r\n          alert(\"Please input the password between \" +4+ \" and \" +8+ \" characters\");  \r\n                return false;  \r\n          }  \r\n        else{\r\n            if(input!=input2){\r\n              alert(\"Password Mismatch\");\r\n            }\r\n\r\n            else{\r\n      Accounts.createUser({\r\n        username:t.find('#signup-username').value,\r\n        password:t.find('#signup-password').value,\r\n        email:t.find('#signup-email').value,\r\n        stats: {},\r\n        profile:{\r\n          confirm:t.find('#signup-confirm').value,\r\n          current_response_id:\"\"\r\n        },\r\n        stats:[]\r\n      });\r\n      \r\n      t.find('#signup-username').value = \"\";\r\n      t.find('#signup-password').value = \"\";\r\n      t.find('#signup-email').value = \"\";\r\n      t.find('#signup-confirm').value = \"\";\r\n    \r\n          }\r\n         // Meteor.logout();\r\n      }\r\n     }\r\n    }\r\n  });\r\n\r\n//  Template.loginForm.events({\r\n//     'submit #login-form': function(e,t) {\r\n//       e.preventDefault();\r\n\r\n//        var unam=t.find('#login-username').value;\r\n//        var password=t.find('#login-password').value;\r\n     \r\n//          Meteor.loginWithPassword(unam,password);\r\n//          Router.go('/quiz');\r\n//     }\r\n// });\r\n\r\n\r\n  var quizQuestions = [];\r\n\r\n  changeAnswer = function(question){\r\n     Meteor.call(\"getResponse\", question, function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        if (result)\r\n          $('input[name=questionAnswer][value=' + result + ']').prop('checked',true);\r\n        else\r\n          $('input[name=questionAnswer]').prop('checked',false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nTemplate.addquiz.onRendered(function() {\r\n$(document).ready(function() {\r\n$('#quizTimeDiv').hide();   \r\n        $(\"input[name=conductQuiz]\").click(function() {\r\n            var val = $(this).val();\r\n            if (val == 'yes'){\r\n              $('#quizTimeDiv').show();\r\n              $('#quizTime').prop('required',true);\r\n            }\r\n            else{\r\n              $('#quizTimeDiv').hide();\r\n              $('#quizTime').removeAttr('required');\r\n            }\r\n        });\r\n      });\r\n});\r\n\r\n\r\n  Template.addquiz.events({\r\n    \"submit .quizEntry\": function (event) {\r\n      event.preventDefault();\r\n      var que_array = new Array();\r\n      var creater =  event.target.creater.value;\r\n      var category =  event.target.category.value;\r\n      var conductQuiz = event.target.conductQuiz.value;\r\n      var quizTime = event.target.quizTime.value + ':00+05:30';\r\n\r\n      for (var i = 1; i <= 10; i++) {\r\n        eval(\"var que\" + \"= event.target.question\" + i + \".value\");\r\n        eval(\"var ans\" + \"= event.target.question\" + i + \"_answer.value\");\r\n        for (var op = 1; op <= 4; op++) {\r\n          eval(\"var opt\" + op + \"= event.target.question\" + i + \"_option\" + op + \".value\");\r\n        }\r\n        que_array.push({number: i, question: que, option1: opt1, option2: opt2, option3: opt3, option4: opt4, answer: ans});\r\n      }\r\n\r\n      Meteor.call(\"addQuizFunction\", creater, category, que_array, conductQuiz, quizTime);\r\n      event.target.reset();\r\n    }\r\n  });\r\n\r\n\r\n  Template.questionSelect.onCreated( function() {\r\n    this.time_left = new ReactiveVar(1200);\r\n    Session.clear('updateTimeLeft');\r\n  });\r\n\r\n  Template.scoreCard.onCreated(function() {\r\n    this.time_left = new ReactiveVar(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left);\r\n  });\r\n  Template.waiting_time.onCreated( function() {\r\n    this.time_left = new ReactiveVar(300);\r\n    Session.clear('updateWaitingTimeLeft');\r\n  });\r\n\r\n  Template.scoreCard.onRendered(function() {\r\n    if(Session.get('selectedType') === 'Individual') {\r\n      $('#home').click(function() {\r\n        console.log('home clicked');\r\n        Meteor.users.update( Meteor.userId(), {$set: {\"profile.current_response_id\" : ''}});\r\n        Session.clear('final_answer');\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n        Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n        Session.clear('subscribed');\r\n      });\r\n    }\r\n  });\r\n\r\n  Template.ranking.onRendered(function() {\r\n    $('#home').click(function() {\r\n        console.log('home clicked');\r\n        Meteor.users.update( Meteor.userId(), {$set: {\"profile.current_response_id\" : ''}});\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n        Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n        Session.clear('final_answer');\r\n        Session.clear('subscribed');\r\n      });\r\n  });\r\n  Template.questionSelect.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getQuiz\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        quizQuestions = result;\r\n        Session.set('selectedQuestion', '1');\r\n        changeAnswer('1');\r\n      }\r\n    });\r\n\r\n\r\n\r\n    Meteor.call(\"getTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);\r\n  \r\n  });\r\n\r\n  Template.questionSelect.onDestroyed(function() {\r\n \r\n    \r\n    Meteor.clearInterval('updateTimeLeft');\r\n  });\r\n\r\n  Template.waiting_time.onDestroyed(function() {\r\n  \r\n    Meteor.clearInterval('updateWaitingTimeLeft');\r\n    Session.clear('subscribed');\r\n  });\r\n\r\n  Template.waiting_time.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getWaitingTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateWaitingTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setWaitingTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);\r\n    \r\n\r\n  });\r\n  \r\n\r\n  Template.questionSelect.events({\r\n    'click input': function( event,template ) {\r\n      Session.set('selectedQuestion', event.target.value);\r\n      changeAnswer(event.target.value);\r\n    }\r\n  });\r\n\r\n  Template.online.helpers({\r\n\r\n    'totalHeadrushQuizzes': function(){\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        \r\n        if(!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || (groupQuizzes[i].conductedAt - new Date()) < 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;   \r\n        }\r\n    }\r\n    return groupQuizzes.length > 0;\r\n    },\r\n\r\n    'showHeadRushQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n       \r\n        if(!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || (groupQuizzes[i].conductedAt - new Date()) < 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;   \r\n        }else {\r\n        groupQuizzes[i].date = groupQuizzes[i].conductedAt.toDateString();\r\n        groupQuizzes[i].time = groupQuizzes[i].conductedAt.toLocaleTimeString();\r\n        groupQuizzes[i].subscribe = Math.abs(groupQuizzes[i].conductedAt - new Date())/(1000*60) < 10;\r\n      }\r\n    }\r\n    return groupQuizzes;\r\n  },\r\n\r\n\r\n    'showGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n       \r\n        if(groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n         \r\n        }\r\n        // if(groupQuizzes[i].conductedByHeadRush){\r\n        //   headrushQuiz = groupQuizzes[i];\r\n        //   groupQuizzes.splice(i, 1);\r\n        //   i=-1;\r\n        // }\r\n    }\r\n    return groupQuizzes;\r\n  },\r\n    'totalGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        \r\n        if(groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n         \r\n        }\r\n    }\r\n    return groupQuizzes.length > 0;\r\n    }\r\n});\r\n\r\n  Template.online.events({\r\n    'click input': function() {\r\n      event.preventDefault();\r\n     \r\n      var responseID = $(event.target).attr('id');\r\n      var subscribed = $(event.target).attr('value');\r\n      console.log(subscribed);\r\n      Session.setPersistent('subscribed', subscribed);\r\n     \r\n      Meteor.call('setGroupResponseId', responseID);\r\n    }\r\n  });\r\n\r\n  Template.questionSelect.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n     $('.scoreCard').trigger('click');\r\n      }\r\n      Session.update('quiz_time_left',minutes+\":\"+seconds);\r\n      Session.makePersistent('quiz_time_left');\r\n      return minutes+\":\"+seconds;\r\n    },\r\n     'ended': function() {\r\n       return Session.get('timeLeft') <= 0;\r\n     }\r\n  }); \r\n\r\n  Template.waiting_time.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      }\r\n      return minutes+\":\"+seconds;\r\n    }\r\n  }); \r\n\r\n  Template.navigation.helpers({\r\n    'user': function() {\r\n      console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");\r\n        return Meteor.users.find({_id: Meteor.userId()});\r\n    },\r\n\r\n    'isAdmin': function() {\r\n      return Meteor.users.findOne(Meteor.userId()).username === 'admin';\r\n    }\r\n  });\r\n\r\n  Template.navigation.events({\r\n    'click #logoutbtn': function() {\r\n     Meteor.call('endquiz',Meteor.userId());\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     console.log();\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      Meteor.logout();\r\n    },\r\n\r\n    'click #loginbtn' : function(e, t){\r\n      e.preventDefault();\r\n \r\n      console.log('hello');\r\n       var unam=t.find('#login-username').value;\r\n       var password=t.find('#login-password').value;\r\n     \r\n         Meteor.loginWithPassword(unam,password);\r\n         Router.go('/quiz');\r\n    },\r\n     \r\n     'keypress input': function(e, t) {\r\n      if(e.which === 13) {\r\n      $('#loginbtn').trigger('click');  \r\n      }\r\n    },\r\n\r\n     'click #profileButton': function(){\r\n      Meteor.call(\"getProfileData\", function(error, result){\r\n      if (error){\r\n        //console.log(\"Chu\");\r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.set('profileData', result);\r\n        Router.go('profile');\r\n       //console.log(Session.get('selectedScore1'));\r\n       $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      }\r\n    });\r\n},\r\n\r\n    'click #ruleButton': function() {\r\n       $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      Router.go('rules');\r\n\r\n    },\r\n\r\n    'click #home': function(){\r\n      $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      Router.go('quiz');\r\n    },\r\n\r\n    'click #addquiz': function(){\r\n      $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      Router.go('addquiz');\r\n\r\n    }\r\n\r\n      });\r\n\r\n   Template.profile1.helpers({\r\n    'getProfileData': function(){\r\n      return Session.get('profileData');\r\n    },\r\n\r\n    'getStatsIndividual': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Individual'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n          count++;\r\n        }\r\n      }\r\n      Session.setPersistent('arrayIndLen',array.length);\r\n      return array;\r\n    },\r\n\r\n    'getStatsGroup': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Group'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n          count++;\r\n        }\r\n      }\r\n      Session.setPersistent('arrayGrpLen',array.length);\r\n      return array;\r\n    },\r\n\r\n    'getLengths' : function(){\r\n        var obj = {a1: Session.get('arrayIndLen')>0, a2: Session.get('arrayGrpLen')>0};\r\n        console.log(obj+' ...........obj');\r\n        return obj;\r\n    }\r\n  });\r\n\r\n  /* **************************************************************************************************** */\r\n  \r\n  Template.questionShow.events({\r\n    'click input': function( event,template ) {\r\n      Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')) , event.target.value );\r\n    },\r\n   \r\n     'click #onsubmitbutton' :function(){\r\n\r\n      var final_answer = $('#onsubmitbutton').attr('value');\r\n      Session.setPersistent('final_answer',final_answer);\r\n      console.log(\"going Here\");\r\n      Meteor.call(\"getQuestionSet\", function(error, result){\r\n      if (error){\r\n       \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.setPersistent('selectedScore', result);\r\n        console.log(Session.get('selectedScore'));     \r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getResponseSet\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.setPersistent('selectedScore1', result);\r\n       console.log(Session.get('selectedScore1'));\r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getActualScore\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.setPersistent('selectedScore2', result);\r\n        // console.log(Session.get('selectedScore2'));\r\n        // console.log(\"aaasssssss\"+ Session.get('selectedScore2'));\r\n      }\r\n    });\r\n      Router.go('scoreCard');\r\n  }\r\n  }); \r\n\r\n  Template.questionShow.helpers({\r\n    questionData: function() {\r\n      return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];\r\n    },\r\n\r\n   'showSubmitButton': function() {\r\n    return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;  \r\n   }\r\n  });   \r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.quizSelect.events({  \r\n    \"submit .quizParameters\": function (event) {\r\n      event.preventDefault();\r\n      var selectedType =  event.target.quizType.value;\r\n      var selectedCategory =  event.target.quizCategory.value;\r\n      Session.setPersistent('selectedType', selectedType);\r\n      Meteor.call(\"createResponse\", selectedType, selectedCategory);\r\n    }\r\n\r\n  });\r\n\r\n Template.scoreCard.events({  \r\n   \r\n   \r\n\r\n    'click #onsubmitbutton' :function(event){\r\n      if(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {\r\n        event.preventDefault();\r\n        alert('Please wait for the quiz to complete to see the leaderboard');\r\n      }\r\n      else {\r\n        Meteor.call(\"getRanking\", function(error, result){\r\n          if (error){\r\n             \r\n            console.log(error.reason);\r\n        \r\n          }\r\n          else {\r\n        \r\n            Session.set('rank', result);\r\n            console.log(Session.get('rank')+' ............herep');     \r\n            Router.go('ranking');\r\n          }\r\n        });\r\n      }\r\n      },\r\n\r\n      'click #home1': function(){\r\n        $(\"#home\").trigger('click');\r\n      }\r\n\r\n  });\r\n\r\n\r\nTemplate.ranking.events({\r\n  'click #home2': function(){\r\n        $(\"#home\").trigger('click');\r\n      }  \r\n});\r\n\r\n Template.ranking.helpers({\r\n  'userRanking' : function(){\r\n   return Session.get('rank');\r\n  }  \r\n});\r\n\r\n  Template.scoreCard.helpers({\r\n \r\n  questionData: function(){\r\n   \r\n     var arr1=[];\r\n    var arr2=[];\r\n    var arr3=[];\r\n    var arr4=[];\r\n    var arr5=[];\r\n     var arr6=[];\r\n     var arr7 = [];\r\n     var arr8=[];\r\n     var arrayFinal = [];\r\n    for(var i=0;i<10;i++)\r\n    {\r\n      arr1[i]=Session.get('selectedScore')[i].question;\r\n \r\n      arr2[i]=Session.get('selectedScore')[i].option1;\r\n      arr3[i]=Session.get('selectedScore')[i].option2;\r\n      arr4[i]=Session.get('selectedScore')[i].option3;\r\n      arr5[i]=Session.get('selectedScore')[i].option4;\r\n      var ans = parseInt(Session.get('selectedScore')[i].answer);\r\n      if(ans==1){\r\n        arr6[i] = arr2[i];\r\n      }\r\n\r\n      else if(ans==2){\r\n        arr6[i] = arr3[i];\r\n      }\r\n\r\n      else if(ans==3){\r\n        arr6[i] = arr4[i];\r\n      }\r\n\r\n      else{\r\n        arr6[i] = arr5[i];\r\n      }\r\n  \r\n       arr7[i]=Session.get('selectedScore1')[i+1];\r\n\r\n       arr8[i]=Session.get('selectedScore2')[i];\r\n\r\n       var obj  = {arr1: arr1[i] , arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i]};\r\n       arrayFinal.push(obj);\r\n\r\n\r\n     }\r\n\r\n     console.log(\"here....................\",arrayFinal);\r\n  \r\n     console.log('final............. '+arrayFinal[0].arr1);\r\n     return arrayFinal;\r\n   \r\n  },\r\n\r\n  'getTotalScore': function() {\r\n    return Session.get('selectedScore2')[10];\r\n  },\r\n\r\n  'Group': function() {\r\n    return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';\r\n  },\r\n  'quizTimeLeft' : function(){\r\n    //return Session.get('quiz_time_left');\r\n    Tracker.autorun(function() {\r\n      return Session.get('quiz_time_left');\r\n    });\r\n  },\r\n\r\n  getIndex: function(index) {\r\n    return index + 1;\r\n  }\r\n\r\n  }); \r\nAccounts.ui.config({\r\n    passwordSignupFields:\"USERNAME_AND_OPTIONAL_EMAIL\"\r\n  });\r\n  /* **************************************************************************************************** */\r\n}\r\n\r\nRouter.route('/', {\r\n  name: 'home',\r\n  template: 'appBody'\r\n});\r\nRouter.route('/profile', {\r\n  name: 'profile1',\r\n  template: 'profile1',\r\n  onBeforeAction: function() {\r\n    if(!Meteor.userId()) {\r\n      alert('Please Log In First');\r\n      Router.go('home');\r\n    }\r\n    else {\r\n      this.next();\r\n    }\r\n  }\r\n});\r\n\r\nRouter.route('/rules', {\r\n  name: 'rules',\r\n  template: 'rules'\r\n});\r\n\r\nRouter.route('/addquiz', {\r\n  name: 'addquiz',\r\n  template: 'addquiz',\r\n  onBeforeAction: function() {\r\n    if(!Meteor.userId()) {\r\n      alert('Please Log In First');\r\n      Router.go('home');\r\n    }\r\n    else if(Meteor.user().username === 'admin'){\r\n      this.next();\r\n    }\r\n    else {\r\n      alert('You are not admin, login with admin account');\r\n      Router.go('home');\r\n    }\r\n  }\r\n});\r\n\r\nRouter.route('/quiz',{\r\n  name: 'quiz',\r\n  template: 'ApplicationLayout',\r\n  onBeforeAction: function() {\r\n  if (! Meteor.user()) {\r\n    //alert('Please Log in First');\r\n    this.next(); \r\n    this.render('appBody', {to:\"template1\"});\r\n    this.render('emptyTemplate', {to:\"template2\"}); \r\n  }\r\n  else if (Meteor.user().profile.current_response_id == '') {\r\n    this.next();\r\n    this.render('emptyTemplate', {to:\"template1\"});\r\n    this.render('quizSelect', {to:\"template2\"});\r\n  }\r\n  else if((Session.get('subscribed') === 'Subscribe' || (Session.get('selectedType') === 'Group')) && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0)  {\r\n       this.next();\r\n       this.render('emptyTemplate', {to:\"template1\"});\r\n       this.render('waiting_time', {to:\"template2\"});\r\n        \r\n  }\r\n\r\n  else if(ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer')==='submit'){\r\n    this.next();\r\n    if(Session.get('final_answer')==='submit') {\r\n      this.render('scoreCard',{to:\"template1\"});\r\n      this.render('emptyTemplate', {to:\"template2\"});\r\n   }\r\n   \r\n     clearInterval('updateTimeLeft');    \r\n     clearInterval('updateWaitingTimeLeft');\r\n  }\r\n  else{\r\n      this.next();\r\n    this.render('questionSelect', {to:\"template1\"});\r\n     this.render('questionShow', {to:\"template2\"});\r\n\r\n  }\r\n }\r\n});\r\n\r\nRouter.route('/ranking',{\r\n  template: 'ranking',\r\n  name : 'ranking'\r\n\r\n});\r\n\r\n\r\n\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nif(Meteor.isServer){\r\n  Meteor.startup(function () {\r\n   process.env.MAIL_URL=\"smtp://jaygohil15@gmail.com:jgohilay10125@smtp.gmail.com:465/\"\r\n   Accounts.config({sendVerificationEmail: true, forbidClientAccountCreation: false});\r\n    \r\n  });\r\nvar previousValue = 0;\r\nMeteor.methods({\r\n\r\n  getResponseSet: function (){\r\n    \r\n\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n \r\n  var response = ThisResponse.findOne(responseID);\r\n \r\n  var userId = Meteor.userId();\r\n \r\n  console.log('User '+userId);\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n\r\nconsole.log(answer);\r\n  return answer;\r\n\r\n\r\n  },\r\n\r\n  getQuestionSet: function(){\r\n  \r\n   var responseID = Meteor.user().profile.current_response_id;\r\n\r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n \r\n   var currentQuiz=response.quizID;\r\n\r\n  var correctOption=(ThisQuiz.findOne(currentQuiz));\r\n  var quizQuestions = correctOption.quiz;\r\n  return quizQuestions;\r\n  \r\n},\r\n\r\n  getActualScore: function(){\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n  var eachScore = [];\r\n  \r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n//   var answer = response.answers.userId;\r\n   var currentQuiz = response.quizID;\r\n\r\n  var correctOption= ThisQuiz.findOne(currentQuiz);\r\n  var quizQuestions = correctOption.quiz;\r\n \r\n  var cor_array=[];\r\n  var score=0;\r\n\r\n  for(var i=0;i<10;i++){\r\n    var correct=correctOption.quiz[i];\r\n    var cor=correct.answer;\r\n    var p='option'+cor;\r\n  \r\n    var cor='option'+cor;\r\n    cor_array[i]=eval('correct.'+p);\r\n    console.log(cor_array[i]);\r\n\r\n  \r\n  }\r\n \r\n  for(var i=0;i<10;i++)\r\n  {\r\n    if(answer[i+1]===cor_array[i])\r\n    {\r\n      eachScore[i] = 10;\r\n      score+=10;\r\n    \r\n    }\r\n\r\n    else{\r\n      eachScore[i] = 0;\r\n    }\r\n  }\r\n\r\n  ThisResponse.update({_id: response._id}, {$set: {['score.' + userId]: score} });\r\n  console.log(ThisResponse.findOne(response._id).score);\r\n  eachScore[10] = score;\r\n\r\n  Meteor.call('saveStats');\r\n // console.log('b..............'+eachScore[2]);\r\n  //Session.set('score', score);\r\n  //console.log(response.score.userId);\r\n\r\n\r\n  return eachScore;\r\n},\r\n\r\n saveStats: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response_doc = ThisResponse.findOne(responseID);\r\n    // var user_id = \r\n    var category = ThisQuiz.findOne(response_doc.quizID).category;\r\n    // for (var i=0 ; i<user_ids.length ; i++){\r\n      // var id = user_ids[i];\r\n      // var user_doc = Meteor.users.findOne(id);\r\n      // var rank = getRanking\r\n\r\n      var new_stat = {quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID};\r\n      // console.log(new_stat);\r\n      if (Meteor.user().stats)\r\n      Meteor.users.update(Meteor.user(), { $push: { stats: new_stat }});\r\n      else\r\n        Meteor.users.update(Meteor.user(), {$set: {stats: [new_stat]} });\r\n      // Meteor.users.update(id, { $push: { stats: new_stat }});\r\n    // }\r\n  },\r\n\r\n\r\n\r\n\r\n  getQuiz: function (){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var quizID = ThisResponse.findOne(responseID).quizID;\r\n    var randomQuiz = ThisQuiz.findOne(quizID);\r\n    var quizQuestions = randomQuiz.quiz;\r\n    for (var i=0 ; i<quizQuestions.length ; i++){\r\n      delete quizQuestions[i][\"answer\"];\r\n    }\r\n       return quizQuestions;\r\n  }\r\n}\r\n \r\n  },\r\n\r\n  getRandomQuizID: function(category){\r\n    var randomQuiz = ThisQuiz.find({category:category}).fetch();\r\n    var index = Math.floor(Math.random() * randomQuiz.length);\r\n    if(index === previousValue) {\r\n      index = (index + 1) % randomQuiz.length;\r\n      previousValue = index;\r\n    }\r\n   \r\n    randomQuiz = randomQuiz[index];\r\n    return randomQuiz._id;\r\n  },\r\n\r\n  createResponse: function(type, category){\r\n  \r\n    if (! Meteor.userId()) { throw new Meteor.Error('not-authorized'); }\r\n\r\n    var quizID = Meteor.call('getRandomQuizID', category);\r\n\r\n    var responseID = ThisResponse.insert({\r\n      userID: [Meteor.userId()],\r\n      category:category,\r\n      quizID: quizID,\r\n      type: type,\r\n      answers: {[Meteor.userId()]: {}},\r\n      time_left: 60,\r\n      waiting_time: 60,\r\n      score: {},\r\n      conductedAt: new Date()\r\n    });\r\n\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});\r\n  },\r\n\r\n  setResponse: function (question, answer){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    ThisResponse.update(responseID, {$set: {['answers.' + user + '.' + question]: answer}});\r\n  },\r\n\r\n  getResponse: function(question){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    var response = ThisResponse.findOne(responseID).answers;\r\n    var answer = eval('response.' + user + '[' + question + ']');\r\n    return answer;\r\n  }\r\n}\r\n  },\r\n\r\n  setTimer: function(new_time){\r\n    if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n        var responseID = Meteor.user().profile.current_response_id;\r\n        var response = ThisResponse.findOne(responseID);\r\n        if (response.time_left > new_time)\r\n          ThisResponse.update(response._id, {$set: {time_left: new_time}});\r\n      }\r\n    }\r\n  },\r\n\r\n  getTimer: function(){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).time_left;\r\n\r\n  }\r\n}\r\n  },\r\n  endquiz:function(id){\r\n   Meteor.users.update({ _id:id},{$set:{\"profile.current_response_id\":\"\"}});\r\n  },\r\n\r\n  setWaitingTimer: function(new_time){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    if (response.waiting_time > new_time)\r\n      ThisResponse.update(response._id, {$set: {waiting_time: new_time}});\r\n  },\r\n\r\n  getWaitingTimer: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).waiting_time;\r\n  },\r\n\r\n  'setGroupResponseId': function(responseID) {\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});      \r\n  },\r\n\r\n  getRanking: function(){\r\n    //var responseID = 'vxprdPF2CG9jdvRQZ';\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    var scores = ThisResponse.findOne(response._id).score;\r\n    var temp = {};\r\n\r\n    console.log(scores);\r\n\r\n    for (var key in scores) {\r\n      temp[Meteor.users.findOne(key).username] = scores[key];\r\n      console.log('Hello.................'+temp[Meteor.users.findOne(key).emails[0].address])\r\n    }\r\n\r\n    scores = temp;\r\n\r\n    var sortable = [];\r\n    for (var entry in scores)\r\n      sortable.push([entry, scores[entry]]);\r\n    sortable.sort(function(a, b) {return b[1] - a[1]})\r\n    console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]\r\n    console.log(sortable[0][0]+ ' 00');\r\n    console.log(sortable[0][1]+ ' 01');\r\n\r\n    var ranks = [];\r\n    var arr1 = [];\r\n    var arr2 = [];\r\n    var arr3 = [];\r\n    arr1[0] = 1;\r\n    var count = 1;\r\n    for(var i=0;i<sortable.length;i++){\r\n      arr2[i] = sortable[i][0];\r\n      arr3[i] = sortable[i][1];\r\n      if(i>0){\r\n        if(arr3[i]===arr3[i-1]){\r\n          arr1[i] = count;\r\n        }\r\n\r\n        else{\r\n          count = i+1;\r\n          arr1[i] = count;  \r\n        }\r\n      }\r\n\r\n      var obj = {arr1: arr1[i], arr2: arr2[i], arr3: arr3[i]};\r\n      ranks.push(obj);\r\n    }\r\n\r\n    return ranks;\r\n    \r\n  },\r\n   getProfileData: function(){\r\n    var userId = Meteor.userId();\r\n    var user = Meteor.users.findOne(userId);\r\n    var username = user.username;\r\n    var email = user.emails[0].address;\r\n    var created = user.createdAt;\r\n    var stats = user.stats;\r\n    var obj = {username: username, email: email, created: created, stats: stats};\r\n    return obj;\r\n  },\r\n\r\n  addQuizFunction: function (creater, category, que_array, conductQuiz, quizTime) {\r\n\r\n    // Make sure the user is logged in and is admin before inserting a task\r\n    if (! Meteor.userId()) {\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    var quizID = ThisQuiz.insert({\r\n      quizCreater: creater,\r\n      category: category,\r\n      createdAt: new Date(),\r\n      quiz: que_array\r\n    });\r\n\r\n    if (conductQuiz == 'yes')\r\n      Meteor.call('createHeadrushResponse', quizID, quizTime, category);\r\n  },\r\n\r\n  createHeadrushResponse: function(quizID, quizTime, category){\r\n    ThisResponse.insert({\r\n      userID: [],\r\n      quizID: quizID,\r\n      type: 'Group',\r\n      category: category,\r\n      answers: {},\r\n      time_left: 1200,\r\n      waiting_time: 600,\r\n      score: {},\r\n      conductedByHeadRush: true,\r\n      conductedAt: new Date(quizTime)\r\n    });\r\n  }\r\n\r\n});\r\n}"]}}]