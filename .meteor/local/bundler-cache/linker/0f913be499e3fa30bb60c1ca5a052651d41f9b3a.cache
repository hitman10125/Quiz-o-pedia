[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nSession = Package.session.Session;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"ind_quiz.html\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// template.ind_quiz.js                                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ApplicationLayout\");                                                                             // 2\nTemplate[\"ApplicationLayout\"] = new Template(\"Template.ApplicationLayout\", (function() {                               // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze._TemplateWith(function() {                                                                            // 5\n    return \"template1\";                                                                                                // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 8\n  }), \"\\n\t\", Blaze._TemplateWith(function() {                                                                          // 9\n    return \"template2\";                                                                                                // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 12\n  }) ];                                                                                                                // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\nTemplate.__checkName(\"appBody\");                                                                                       // 16\nTemplate[\"appBody\"] = new Template(\"Template.appBody\", (function() {                                                   // 17\n  var view = this;                                                                                                     // 18\n  return HTML.DIV({                                                                                                    // 19\n    \"class\": \"container\"                                                                                               // 20\n  }, \"\\n \t\t\t\", HTML.DIV({                                                                                              // 21\n    \"class\": \"row\"                                                                                                     // 22\n  }, \"\\n \t\t\t\t\t\", HTML.DIV({                                                                                            // 23\n    \"class\": \"col-md-6 col-lg-6\"                                                                                       // 24\n  }, \"\\n \t\t\t\", Spacebars.include(view.lookupTemplate(\"loginForm\")), \"\\n \t\t\t\t\t\"), \"\\n \t\t\t\t\t\", HTML.DIV({                // 25\n    \"class\": \"col-md-6 col-lg-6\"                                                                                       // 26\n  }, \"\\n \t\t\t\", Spacebars.include(view.lookupTemplate(\"signupForm\")), \"\\n \t\t\t\t\"), \"\\n \t\t\t\"), \"\t\\n \t\t\");                 // 27\n}));                                                                                                                   // 28\n                                                                                                                       // 29\nTemplate.__checkName(\"signupForm\");                                                                                    // 30\nTemplate[\"signupForm\"] = new Template(\"Template.signupForm\", (function() {                                             // 31\n  var view = this;                                                                                                     // 32\n  return HTML.Raw('<form id=\"signup-form\">\\n\t\t\t<h2 id=\"sub_title\">Sign Up</h2>\\n\\n\t\t\t<label for=\"signup-username\">Username</label>\\n\t\t\t<input type=\"text\" id=\"signup-username\" class=\"form-control\" placeholder=\"Username\"><br>\\n\\n\t\t\t\\n\t\t\t<label for=\"signup-email\">Email</label>\\n\t\t\t<input type=\"text\" id=\"signup-email\" class=\"form-control\" placeholder=\"Email\"><br>\\n\\n\t\t\t\\n\t\t\t<label for=\"signup-password\">Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-password\" class=\"form-control\" placeholder=\"Password\"><br>\\n\t\t\t<label id=\"limit\">Password length should be atleast 4.</label><br>\\n\t\t    \\n\t\t\t\\n\t\t\t<label for=\"signup-confirm\">Confirm Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-confirm\" class=\"form-control\" placeholder=\"Confirm password\"><br>\\n\\n\t\t\t<button class=\"btn btn-primary\" type=\"submit\">SignUp</button>\\n\\n\t\t</form>');\n}));                                                                                                                   // 34\n                                                                                                                       // 35\nTemplate.__checkName(\"loginForm\");                                                                                     // 36\nTemplate[\"loginForm\"] = new Template(\"Template.loginForm\", (function() {                                               // 37\n  var view = this;                                                                                                     // 38\n  return HTML.Raw('<form id=\"login-form\">\\n\t\t\t<h2 id=\"sub_title\">Log In</h2>\\n\\n\t\t\t<label for=\"login-username\">Username</label>\\n\t\t\t<input type=\"text\" id=\"login-username\" class=\"form-control\" placeholder=\"Username\"><br>\\n\\n\t\t\t<label for=\"login-password\">Password</label>\\n\t\t\t<input type=\"password\" id=\"login-password\" class=\"form-control\" placeholder=\"Password\"><br>\\n\\n\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Log In</button>\\n\\n\t\t</form>');\n}));                                                                                                                   // 40\n                                                                                                                       // 41\nTemplate.__checkName(\"emptyTemplate\");                                                                                 // 42\nTemplate[\"emptyTemplate\"] = new Template(\"Template.emptyTemplate\", (function() {                                       // 43\n  var view = this;                                                                                                     // 44\n  return \"\";                                                                                                           // 45\n}));                                                                                                                   // 46\n                                                                                                                       // 47\nTemplate.__checkName(\"waiting_time\");                                                                                  // 48\nTemplate[\"waiting_time\"] = new Template(\"Template.waiting_time\", (function() {                                         // 49\n  var view = this;                                                                                                     // 50\n  return [ Blaze.View(\"lookup:time_left\", function() {                                                                 // 51\n    return Spacebars.mustache(view.lookup(\"time_left\"));                                                               // 52\n  }), HTML.Raw('\\n\\n<button class=\"btn logoutbtn btn-danger\" type=\"submit\" id=\"logoutbtn\">Log Out</button>') ];        // 53\n}));                                                                                                                   // 54\n                                                                                                                       // 55\nTemplate.__checkName(\"quizSelect\");                                                                                    // 56\nTemplate[\"quizSelect\"] = new Template(\"Template.quizSelect\", (function() {                                             // 57\n  var view = this;                                                                                                     // 58\n  return [ HTML.Raw('<form class=\"quizParameters\">\\n\t\t<div class=\"form-group\">\\n\t\t\t<label>Type:</label>\\n\t\t\t<input type=\"radio\" name=\"quizType\" value=\"Individual\" required=\"\"> Individual\\n\t\t\t<input type=\"radio\" name=\"quizType\" value=\"Group\" required=\"\"> Group\\n\t\t</div>\\n\t\t<div class=\"form-group\">\\n\t\t\t<label>Category</label>\\n\t\t\t<select id=\"quizCategory\">\\n\t\t\t  <option value=\"General\">General</option>\\n\t\t\t  <option value=\"MELA\">MELA</option>\\n\t\t\t  <option value=\"Sports\">Sports</option>\\n\t\t\t</select>\\n\t\t</div>\\n\t\t<button type=\"submit\" value=\"Submit\">Submit</button>\\n\t</form>\\n\t'), Spacebars.include(view.lookupTemplate(\"online\")), HTML.Raw('\\n\t<button class=\"btn logoutbtn btn-danger\" type=\"submit\" id=\"logoutbtn\">Log Out</button>') ];\n}));                                                                                                                   // 60\n                                                                                                                       // 61\nTemplate.__checkName(\"questionSelect\");                                                                                // 62\nTemplate[\"questionSelect\"] = new Template(\"Template.questionSelect\", (function() {                                     // 63\n  var view = this;                                                                                                     // 64\n  return [ \"Timer: \", Blaze.View(\"lookup:time_left\", function() {                                                      // 65\n    return Spacebars.mustache(view.lookup(\"time_left\"));                                                               // 66\n  }), HTML.Raw('\\n\t<div class=\"form-group\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"1\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"2\">\\n\t</div>') ];\n}));                                                                                                                   // 68\n                                                                                                                       // 69\nTemplate.__checkName(\"questionShow\");                                                                                  // 70\nTemplate[\"questionShow\"] = new Template(\"Template.questionShow\", (function() {                                         // 71\n  var view = this;                                                                                                     // 72\n  return [ \"Question: \", Blaze.View(\"lookup:questionData.question\", function() {                                       // 73\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"question\"));                                 // 74\n  }), \"\\n\t\", HTML.DIV({                                                                                                // 75\n    \"class\": \"form-group\"                                                                                              // 76\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 77\n    type: \"radio\",                                                                                                     // 78\n    name: \"questionAnswer\",                                                                                            // 79\n    value: function() {                                                                                                // 80\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                // 81\n    }                                                                                                                  // 82\n  }), Blaze.View(\"lookup:questionData.option1\", function() {                                                           // 83\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                  // 84\n  }), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                        // 85\n    \"class\": \"form-group\"                                                                                              // 86\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 87\n    type: \"radio\",                                                                                                     // 88\n    name: \"questionAnswer\",                                                                                            // 89\n    value: function() {                                                                                                // 90\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                // 91\n    }                                                                                                                  // 92\n  }), Blaze.View(\"lookup:questionData.option2\", function() {                                                           // 93\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                  // 94\n  }), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                        // 95\n    \"class\": \"form-group\"                                                                                              // 96\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 97\n    type: \"radio\",                                                                                                     // 98\n    name: \"questionAnswer\",                                                                                            // 99\n    value: function() {                                                                                                // 100\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                // 101\n    }                                                                                                                  // 102\n  }), Blaze.View(\"lookup:questionData.option3\", function() {                                                           // 103\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                  // 104\n  }), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                        // 105\n    \"class\": \"form-group\"                                                                                              // 106\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 107\n    type: \"radio\",                                                                                                     // 108\n    name: \"questionAnswer\",                                                                                            // 109\n    value: function() {                                                                                                // 110\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                // 111\n    }                                                                                                                  // 112\n  }), Blaze.View(\"lookup:questionData.option4\", function() {                                                           // 113\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                  // 114\n  }), \"\\n\t\"), HTML.Raw('\\n\\n\t<button class=\"btn logoutbtn btn-danger\" type=\"submit\" id=\"logoutbtn\">Log Out</button>') ];\n}));                                                                                                                   // 116\n                                                                                                                       // 117\nTemplate.__checkName(\"online\");                                                                                        // 118\nTemplate[\"online\"] = new Template(\"Template.online\", (function() {                                                     // 119\n  var view = this;                                                                                                     // 120\n  return [ HTML.Raw(\"<p>Group quizzes to start soon</p>\\n\t\t\t\t\"), HTML.UL(\"\\n\t\t\t\t\", Blaze.Each(function() {             // 121\n    return Spacebars.call(view.lookup(\"showGroupQuizzes\"));                                                            // 122\n  }, function() {                                                                                                      // 123\n    return [ \"\\n\t\t\t\t\", HTML.LI(\"Category:\", Blaze.View(\"lookup:category\", function() {                                 // 124\n      return Spacebars.mustache(view.lookup(\"category\"));                                                              // 125\n    }), \" Initiated By:\", Blaze.View(\"lookup:userID\", function() {                                                     // 126\n      return Spacebars.mustache(view.lookup(\"userID\"));                                                                // 127\n    })), HTML.INPUT({                                                                                                  // 128\n      type: \"button\",                                                                                                  // 129\n      value: \"Subscribe\",                                                                                              // 130\n      id: function() {                                                                                                 // 131\n        return Spacebars.mustache(view.lookup(\"quizID\"));                                                              // 132\n      },                                                                                                               // 133\n      name: \"userID\"                                                                                                   // 134\n    }), \"\\n\t\t\t\t\" ];                                                                                                    // 135\n  }), \"\\n\t\t\t\t\") ];                                                                                                     // 136\n}));                                                                                                                   // 137\n                                                                                                                       // 138\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ind_quiz.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ind_quiz.js                                                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nThisQuiz = new Mongo.Collection(\"quizzes\");                                                                            // 1\nThisResponse = new Mongo.Collection(\"responses\");                                                                      // 2\n                                                                                                                       //\nif (Meteor.isClient) {                                                                                                 // 4\n                                                                                                                       //\n  Template.signupForm.events({                                                                                         // 6\n    'submit #signup-form': function () {                                                                               // 7\n      function submitSignupForm(e, t) {                                                                                // 7\n        e.preventDefault();                                                                                            // 8\n                                                                                                                       //\n        var input = t.find('#signup-password').value;                                                                  // 10\n        var input2 = t.find('#signup-confirm').value;                                                                  // 11\n        if (input.length < 4 || input.length > 8) {                                                                    // 12\n          alert(\"Please input the password between \" + 4 + \" and \" + 8 + \" characters\");                               // 14\n          return false;                                                                                                // 15\n        } else {                                                                                                       //\n          if (input != input2) {                                                                                       // 18\n            alert(\"Password Mismatch\");                                                                                // 19\n          } else {                                                                                                     //\n            Accounts.createUser({                                                                                      // 23\n              username: t.find('#signup-username').value,                                                              // 24\n              password: t.find('#signup-password').value,                                                              // 25\n              email: t.find('#signup-email').value,                                                                    // 26\n              profile: {                                                                                               // 27\n                confirm: t.find('#signup-confirm').value,                                                              // 28\n                current_response_id: \"\"                                                                                // 29\n              }                                                                                                        //\n                                                                                                                       //\n            });                                                                                                        //\n                                                                                                                       //\n            t.find('#signup-username').value = \"\";                                                                     // 34\n            t.find('#signup-password').value = \"\";                                                                     // 35\n            t.find('#signup-email').value = \"\";                                                                        // 36\n            t.find('#signup-confirm').value = \"\";                                                                      // 37\n            console.log(\"signed up\");                                                                                  // 38\n            //  Meteor.logout();                                                                                       //\n          }                                                                                                            // 22\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return submitSignupForm;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.loginForm.events({                                                                                          // 45\n    'submit #login-form': function () {                                                                                // 46\n      function submitLoginForm(e, t) {                                                                                 // 46\n        e.preventDefault();                                                                                            // 47\n                                                                                                                       //\n        var unam = t.find('#login-username').value;                                                                    // 49\n        var password = t.find('#login-password').value;                                                                // 50\n                                                                                                                       //\n        Meteor.loginWithPassword(unam, password);                                                                      // 52\n      }                                                                                                                //\n                                                                                                                       //\n      return submitLoginForm;                                                                                          //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  var quizQuestions = [];                                                                                              // 57\n                                                                                                                       //\n  changeAnswer = function changeAnswer(question) {                                                                     // 59\n    Meteor.call(\"getResponse\", question, function (error, result) {                                                    // 60\n      if (error) console.log(error.reason);else {                                                                      // 61\n        if (result) $('input[name=questionAnswer][value=' + result + ']').prop('checked', true);else $('input[name=questionAnswer]').prop('checked', false);\n      }                                                                                                                //\n    });                                                                                                                //\n  };                                                                                                                   //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionSelect.onCreated(function () {                                                                      // 4\n    this.time_left = new ReactiveVar(1200);                                                                            // 75\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onCreated(function () {                                                                        // 78\n    this.time_left = new ReactiveVar(300);                                                                             // 79\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onRendered(function () {                                                                     // 82\n                                                                                                                       //\n    var self = this;                                                                                                   // 84\n                                                                                                                       //\n    Meteor.call(\"getQuiz\", function (error, result) {                                                                  // 86\n      if (error) console.log(error.reason);else {                                                                      // 87\n        quizQuestions = result;                                                                                        // 90\n        Session.set('selectedQuestion', '1');                                                                          // 91\n        changeAnswer('1');                                                                                             // 92\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.call(\"getTimer\", function (error, result) {                                                                 // 98\n      if (error) console.log(error.reason);else {                                                                      // 99\n        self.time_left.set(result);                                                                                    // 102\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.setInterval(function () {                                                                                   // 106\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 106\n    }, 1000);                                                                                                          //\n    Meteor.setInterval(function () {                                                                                   // 107\n      Meteor.call('setTimer', self.time_left.get());                                                                   // 107\n    }, 5000);                                                                                                          //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onRendered(function () {                                                                       // 110\n                                                                                                                       //\n    var self = this;                                                                                                   // 112\n                                                                                                                       //\n    Meteor.call(\"getWaitingTimer\", function (error, result) {                                                          // 114\n      if (error) console.log(error.reason);else {                                                                      // 115\n        self.time_left.set(result);                                                                                    // 118\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.setInterval(function () {                                                                                   // 122\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 122\n    }, 1000);                                                                                                          //\n    Meteor.setInterval(function () {                                                                                   // 123\n      Meteor.call('setWaitingTimer', self.time_left.get());                                                            // 123\n    }, 1000);                                                                                                          //\n  });                                                                                                                  //\n  Template.waiting_time.events({                                                                                       // 128\n                                                                                                                       //\n    'click #logoutbtn': function () {                                                                                  // 130\n      function clickLogoutbtn() {                                                                                      // 130\n        Meteor.call('endquiz', Meteor.userId());                                                                       // 131\n        Meteor.logout();                                                                                               // 132\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.events({                                                                                     // 138\n    'click input': function () {                                                                                       // 139\n      function clickInput(event, template) {                                                                           // 139\n        Session.set('selectedQuestion', event.target.value);                                                           // 140\n        changeAnswer(event.target.value);                                                                              // 141\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.helpers({                                                                                            // 145\n    'showGroupQuizzes': function () {                                                                                  // 146\n      function showGroupQuizzes() {                                                                                    // 146\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 147\n        var time = new Date();                                                                                         // 148\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 149\n          var date = new Date(Date.parse(time) - Date.parse(groupQuizzes[i].createdAt));                               // 150\n          if (date.getMinutes() > 30) {                                                                                // 151\n            groupQuizzes.splice(i, 1);                                                                                 // 152\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes;                                                                                           // 155\n      }                                                                                                                //\n                                                                                                                       //\n      return showGroupQuizzes;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.events({                                                                                             // 159\n    'click input': function () {                                                                                       // 160\n      function clickInput() {                                                                                          // 160\n        event.preventDefault();                                                                                        // 161\n        var quizID = $(event.target).attr('id');                                                                       // 162\n        var userID = $(event.target).attr('name');                                                                     // 163\n        var category = ThisResponse.find({ userID: userID, quizID: quizID }).fetch()[0].category;                      // 164\n        var timeLeft = ThisResponse.find({ userID: userID, quizID: quizID }).fetch()[0].timeLeft;                      // 165\n        var responseID = ThisResponse.find({ userID: userID, category: category }).fetch()[0]._id;                     // 166\n        console.log(quidID + \"  \" + userID + \"  \" + category + \"  \" + timeLeft + \"  \" + responseID);                   // 167\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 168\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.helpers({                                                                                    // 172\n    time_left: function () {                                                                                           // 173\n      function time_left() {                                                                                           // 173\n        var time = Template.instance().time_left.get();                                                                // 174\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 175\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 176\n        return minutes + \":\" + seconds;                                                                                // 177\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.helpers({                                                                                      // 181\n    time_left: function () {                                                                                           // 182\n      function time_left() {                                                                                           // 182\n        var time = Template.instance().time_left.get();                                                                // 183\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 184\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 185\n        return minutes + \":\" + seconds;                                                                                // 186\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionShow.events({                                                                                       // 4\n    'click input': function () {                                                                                       // 193\n      function clickInput(event, template) {                                                                           // 193\n        Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')), event.target.value);                     // 194\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }(),                                                                                                               //\n    'click #logoutbtn': function () {                                                                                  // 196\n      function clickLogoutbtn() {                                                                                      // 196\n        Meteor.call('endquiz', Meteor.userId());                                                                       // 197\n        Meteor.logout();                                                                                               // 198\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionShow.helpers({                                                                                      // 203\n    questionData: function () {                                                                                        // 204\n      function questionData() {                                                                                        // 204\n        return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];                                           // 205\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.quizSelect.events({                                                                                         // 4\n    \"submit .quizParameters\": function () {                                                                            // 213\n      function submitQuizParameters(event) {                                                                           // 213\n        event.preventDefault();                                                                                        // 214\n        var selectedType = event.target.quizType.value;                                                                // 215\n        var selectedCategory = event.target.quizCategory.value;                                                        // 216\n        Meteor.call(\"createResponse\", selectedType, selectedCategory);                                                 // 217\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizParameters;                                                                                     //\n    }(),                                                                                                               //\n    'click #logoutbtn': function () {                                                                                  // 219\n      function clickLogoutbtn() {                                                                                      // 219\n                                                                                                                       //\n        Meteor.logout();                                                                                               // 221\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n}                                                                                                                      // 4\n                                                                                                                       //\nRouter.configure({                                                                                                     // 229\n  layoutTemplate: 'ApplicationLayout'                                                                                  // 230\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/', function () {                                                                                        // 233\n  if (!Meteor.userId()) {                                                                                              // 234\n    this.render('appBody', { to: \"template1\" });                                                                       // 235\n    this.render('emptyTemplate', { to: \"template2\" });                                                                 // 236\n  } else if (Meteor.user().profile.current_response_id == '') {                                                        //\n    this.render('emptyTemplate', { to: \"template1\" });                                                                 // 239\n    this.render('quizSelect', { to: \"template2\" });                                                                    // 240\n  } else {                                                                                                             //\n    this.render('emptyTemplate', { to: \"template1\" });                                                                 // 243\n    this.render('waiting_time', { to: \"template2\" });                                                                  // 244\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\n/* **************************************************************************************************** */             //\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 250\n                                                                                                                       //\n  Meteor.methods({                                                                                                     // 252\n                                                                                                                       //\n    getQuiz: function () {                                                                                             // 254\n      function getQuiz() {                                                                                             // 254\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 255\n        var quizID = ThisResponse.findOne(responseID).quizID;                                                          // 256\n        var randomQuiz = ThisQuiz.findOne(quizID);                                                                     // 257\n        var quizQuestions = randomQuiz.quiz;                                                                           // 258\n        for (var i = 0; i < quizQuestions.length; i++) {                                                               // 259\n          delete quizQuestions[i][\"answer\"];                                                                           // 260\n        }                                                                                                              //\n        return quizQuestions;                                                                                          // 262\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRandomQuizID: function () {                                                                                     // 265\n      function getRandomQuizID(category) {                                                                             // 265\n        var randomQuiz = ThisQuiz.find({ category: category }).fetch();                                                // 266\n        randomQuiz = randomQuiz[Math.floor(Math.random() * randomQuiz.length)];                                        // 267\n        return randomQuiz._id;                                                                                         // 268\n      }                                                                                                                //\n                                                                                                                       //\n      return getRandomQuizID;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createResponse: function () {                                                                                      // 271\n      function createResponse(type, category) {                                                                        // 271\n        var _answers;                                                                                                  //\n                                                                                                                       //\n        if (!Meteor.userId()) {                                                                                        // 272\n          throw new Meteor.Error('not-authorized');                                                                    // 272\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = Meteor.call('getRandomQuizID', category);                                                         // 274\n                                                                                                                       //\n        var responseID = ThisResponse.insert({                                                                         // 276\n          userID: [Meteor.userId()],                                                                                   // 277\n          category: category,                                                                                          // 278\n          quizID: quizID,                                                                                              // 279\n          type: type,                                                                                                  // 280\n          answers: (_answers = {}, _answers[Meteor.userId()] = {}, _answers),                                          // 281\n          time_left: 1200,                                                                                             // 282\n          waiting_time: 300,                                                                                           // 283\n          score: {},                                                                                                   // 284\n          conductedAt: new Date()                                                                                      // 285\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 288\n      }                                                                                                                //\n                                                                                                                       //\n      return createResponse;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setResponse: function () {                                                                                         // 291\n      function setResponse(question, answer) {                                                                         // 291\n        var _$set;                                                                                                     //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 292\n        var user = Meteor.userId();                                                                                    // 293\n        ThisResponse.update(responseID, { $set: (_$set = {}, _$set['answers.' + user + '.' + question] = answer, _$set) });\n      }                                                                                                                //\n                                                                                                                       //\n      return setResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getResponse: function () {                                                                                         // 297\n      function getResponse(question) {                                                                                 // 297\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 298\n        var user = Meteor.userId();                                                                                    // 299\n        var response = ThisResponse.findOne(responseID).answers;                                                       // 300\n        var answer = eval('response.' + user + '[' + question + ']');                                                  // 301\n        return answer;                                                                                                 // 302\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setTimer: function () {                                                                                            // 305\n      function setTimer(new_time) {                                                                                    // 305\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 306\n        var response = ThisResponse.findOne(responseID);                                                               // 307\n        if (response.time_left > new_time) ThisResponse.update(response._id, { $set: { time_left: new_time } });       // 308\n      }                                                                                                                //\n                                                                                                                       //\n      return setTimer;                                                                                                 //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getTimer: function () {                                                                                            // 312\n      function getTimer() {                                                                                            // 312\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 313\n        return ThisResponse.findOne(responseID).time_left;                                                             // 314\n      }                                                                                                                //\n                                                                                                                       //\n      return getTimer;                                                                                                 //\n    }(),                                                                                                               //\n    endquiz: function () {                                                                                             // 316\n      function endquiz(id) {                                                                                           // 316\n        Meteor.users.update({ _id: id }, { $set: { \"profile.current_response_id\": \"\" } });                             // 317\n      }                                                                                                                //\n                                                                                                                       //\n      return endquiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setWaitingTimer: function () {                                                                                     // 320\n      function setWaitingTimer(new_time) {                                                                             // 320\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 321\n        var response = ThisResponse.findOne(responseID);                                                               // 322\n        if (response.waiting_time > new_time) ThisResponse.update(response._id, { $set: { waiting_time: new_time } });\n      }                                                                                                                //\n                                                                                                                       //\n      return setWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getWaitingTimer: function () {                                                                                     // 327\n      function getWaitingTimer() {                                                                                     // 327\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 328\n        return ThisResponse.findOne(responseID).waiting_time;                                                          // 329\n      }                                                                                                                //\n                                                                                                                       //\n      return getWaitingTimer;                                                                                          //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n}                                                                                                                      //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},{\"extensions\":[\".js\",\".json\",\".html\"]});\nrequire(\"./ind_quiz.html\");\nrequire(\"./ind_quiz.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/ind_quiz.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["ThisQuiz = new Mongo.Collection(\"quizzes\");\r\nThisResponse = new Mongo.Collection(\"responses\");\r\n\r\nif (Meteor.isClient) {\r\n\r\n      Template.signupForm.events({\r\n    'submit #signup-form': function(e,t){\r\n      e.preventDefault();\r\n\r\n      var input=t.find('#signup-password').value;\r\n      var input2=t.find('#signup-confirm').value;\r\n      if(input.length<4 || input.length> 8)  \r\n          {   \r\n          alert(\"Please input the password between \" +4+ \" and \" +8+ \" characters\");  \r\n                return false;  \r\n          }  \r\n        else{\r\n            if(input!=input2){\r\n              alert(\"Password Mismatch\");\r\n            }\r\n\r\n            else{\r\n      Accounts.createUser({\r\n        username:t.find('#signup-username').value,\r\n        password:t.find('#signup-password').value,\r\n        email:t.find('#signup-email').value,\r\n        profile:{\r\n          confirm:t.find('#signup-confirm').value,\r\n          current_response_id:\"\"\r\n        }\r\n\r\n      });\r\n      \r\n      t.find('#signup-username').value = \"\";\r\n      t.find('#signup-password').value = \"\";\r\n      t.find('#signup-email').value = \"\";\r\n      t.find('#signup-confirm').value = \"\";\r\n      console.log(\"signed up\");\r\n    //  Meteor.logout();\r\n          }\r\n      }\r\n    }\r\n  });\r\n\r\n Template.loginForm.events({\r\n    'submit #login-form': function(e,t) {\r\n      e.preventDefault();\r\n\r\n       var unam=t.find('#login-username').value;\r\n       var password=t.find('#login-password').value;\r\n     \r\n         Meteor.loginWithPassword(unam,password);\r\n    }\r\n});\r\n\r\n\r\n  var quizQuestions = [];\r\n\r\n  changeAnswer = function(question){\r\n     Meteor.call(\"getResponse\", question, function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        if (result)\r\n          $('input[name=questionAnswer][value=' + result + ']').prop('checked',true);\r\n        else\r\n          $('input[name=questionAnswer]').prop('checked',false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.questionSelect.onCreated( function() {\r\n    this.time_left = new ReactiveVar(1200);\r\n  });\r\n\r\n  Template.waiting_time.onCreated( function() {\r\n    this.time_left = new ReactiveVar(300);\r\n  });\r\n\r\n  Template.questionSelect.onRendered( function() {\r\n\r\n    var self = this;\r\n\r\n    Meteor.call(\"getQuiz\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        quizQuestions = result;\r\n        Session.set('selectedQuestion', '1');\r\n        changeAnswer('1');\r\n      }\r\n    });\r\n\r\n\r\n\r\n    Meteor.call(\"getTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    Meteor.setInterval( function() {self.time_left.set(self.time_left.get() - 1);} , 1000 );\r\n    Meteor.setInterval( function() {Meteor.call('setTimer', self.time_left.get())} , 5000 );\r\n  });\r\n\r\n  Template.waiting_time.onRendered( function() {\r\n\r\n    var self = this;\r\n\r\n    Meteor.call(\"getWaitingTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    Meteor.setInterval( function() {self.time_left.set(self.time_left.get() - 1);} , 1000 );\r\n    Meteor.setInterval( function() {Meteor.call('setWaitingTimer', self.time_left.get())} , 1000 );\r\n\r\n     \r\n\r\n  });\r\n  Template.waiting_time.events({\r\n   \r\n      'click #logoutbtn': function() {\r\n     Meteor.call('endquiz',Meteor.userId());\r\n      Meteor.logout();\r\n\r\n    }\r\n  }); \r\n  \r\n\r\n  Template.questionSelect.events({\r\n    'click input': function( event,template ) {\r\n      Session.set('selectedQuestion', event.target.value);\r\n      changeAnswer(event.target.value);\r\n    }\r\n  });\r\n\r\n  Template.online.helpers({\r\n    'showGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        var date = new Date(Date.parse(time) - Date.parse(groupQuizzes[i].createdAt));\r\n        if(date.getMinutes() > 30) {\r\n          groupQuizzes.splice(i, 1);\r\n        }\r\n    }\r\n    return groupQuizzes;\r\n  }\r\n});\r\n\r\n  Template.online.events({\r\n    'click input': function() {\r\n      event.preventDefault();\r\n      var quizID = $(event.target).attr('id');\r\n      var userID = $(event.target).attr('name');\r\n      var category = ThisResponse.find({userID: userID, quizID: quizID}).fetch()[0].category;\r\n      var timeLeft = ThisResponse.find({userID: userID, quizID: quizID}).fetch()[0].timeLeft;\r\n      var responseID = ThisResponse.find({userID: userID, category: category}).fetch()[0]._id;\r\n      console.log(quidID+\"  \"+userID+\"  \"+category+\"  \"+timeLeft+\"  \"+responseID);\r\n      Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});      \r\n    }\r\n  });\r\n\r\n  Template.questionSelect.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      return minutes+\":\"+seconds;\r\n    }\r\n  }); \r\n\r\n  Template.waiting_time.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      return minutes+\":\"+seconds;\r\n    }\r\n  }); \r\n\r\n  /* **************************************************************************************************** */\r\n  \r\n  Template.questionShow.events({\r\n    'click input': function( event,template ) {\r\n      Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')) , event.target.value );\r\n    },\r\n      'click #logoutbtn': function() {\r\n     Meteor.call('endquiz',Meteor.userId());\r\n      Meteor.logout();\r\n\r\n    }\r\n  }); \r\n\r\n  Template.questionShow.helpers({\r\n    questionData: function() {\r\n      return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];\r\n    }\r\n   \r\n  });   \r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.quizSelect.events({  \r\n    \"submit .quizParameters\": function (event) {\r\n      event.preventDefault();\r\n      var selectedType =  event.target.quizType.value;\r\n      var selectedCategory =  event.target.quizCategory.value;\r\n      Meteor.call(\"createResponse\", selectedType, selectedCategory);\r\n    },\r\n    'click #logoutbtn': function() {\r\n     \r\n      Meteor.logout();\r\n    }\r\n\r\n  });\r\n\r\n  /* **************************************************************************************************** */\r\n}\r\n\r\nRouter.configure({\r\n  layoutTemplate: 'ApplicationLayout'\r\n});\r\n\r\nRouter.route('/', function () {\r\n  if (! Meteor.userId()) { \r\n    this.render('appBody', {to:\"template1\"});\r\n    this.render('emptyTemplate', {to:\"template2\"}); \r\n  }\r\n  else if (Meteor.user().profile.current_response_id == '') {\r\n    this.render('emptyTemplate', {to:\"template1\"});\r\n    this.render('quizSelect', {to:\"template2\"});\r\n  }\r\n  else {\r\n    this.render('emptyTemplate', {to:\"template1\"});\r\n    this.render('waiting_time', {to:\"template2\"});\r\n  }\r\n});\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nif(Meteor.isServer){\r\n\r\nMeteor.methods({\r\n\r\n  getQuiz: function (){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var quizID = ThisResponse.findOne(responseID).quizID;\r\n    var randomQuiz = ThisQuiz.findOne(quizID);\r\n    var quizQuestions = randomQuiz.quiz;\r\n    for (var i=0 ; i<quizQuestions.length ; i++){\r\n      delete quizQuestions[i][\"answer\"];\r\n    }\r\n    return quizQuestions;\r\n  },\r\n\r\n  getRandomQuizID: function(category){\r\n    var randomQuiz = ThisQuiz.find({category:category}).fetch();\r\n    randomQuiz = randomQuiz[Math.floor(Math.random() * randomQuiz.length)];\r\n    return randomQuiz._id;\r\n  },\r\n\r\n  createResponse: function(type, category){\r\n    if (! Meteor.userId()) { throw new Meteor.Error('not-authorized'); }\r\n\r\n    var quizID = Meteor.call('getRandomQuizID', category);\r\n\r\n    var responseID = ThisResponse.insert({\r\n      userID: [Meteor.userId()],\r\n      category:category,\r\n      quizID: quizID,\r\n      type: type,\r\n      answers: {[Meteor.userId()]: {}},\r\n      time_left: 1200,\r\n      waiting_time: 300,\r\n      score: {},\r\n      conductedAt: new Date()\r\n    });\r\n\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});\r\n  },\r\n\r\n  setResponse: function (question, answer){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    ThisResponse.update(responseID, {$set: {['answers.' + user + '.' + question]: answer}});\r\n  },\r\n\r\n  getResponse: function(question){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    var response = ThisResponse.findOne(responseID).answers;\r\n    var answer = eval('response.' + user + '[' + question + ']');\r\n    return answer;\r\n  },\r\n\r\n  setTimer: function(new_time){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    if (response.time_left > new_time)\r\n      ThisResponse.update(response._id, {$set: {time_left: new_time}});\r\n  },\r\n\r\n  getTimer: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).time_left;\r\n  },\r\n  endquiz:function(id){\r\n   Meteor.users.update({ _id:id},{$set:{\"profile.current_response_id\":\"\"}});\r\n  },\r\n\r\n  setWaitingTimer: function(new_time){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    if (response.waiting_time > new_time)\r\n      ThisResponse.update(response._id, {$set: {waiting_time: new_time}});\r\n  },\r\n\r\n  getWaitingTimer: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).waiting_time;\r\n  }\r\n\r\n});\r\n}"]}}]