[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nSession = Package.session.Session;\nPersistentSession = Package['u2622:persistent-session'].PersistentSession;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"ind_quiz.html\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// template.ind_quiz.js                                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ApplicationLayout\");                                                                             // 2\nTemplate[\"ApplicationLayout\"] = new Template(\"Template.ApplicationLayout\", (function() {                               // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze._TemplateWith(function() {                                                                            // 5\n    return \"template1\";                                                                                                // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 8\n  }), \"\\n\t\", Blaze._TemplateWith(function() {                                                                          // 9\n    return \"template2\";                                                                                                // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 12\n  }) ];                                                                                                                // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\nTemplate.__checkName(\"appBody\");                                                                                       // 16\nTemplate[\"appBody\"] = new Template(\"Template.appBody\", (function() {                                                   // 17\n  var view = this;                                                                                                     // 18\n  return HTML.DIV({                                                                                                    // 19\n    \"class\": \"container\"                                                                                               // 20\n  }, \"\\n \t\t\t\", HTML.DIV({                                                                                              // 21\n    \"class\": \"row\"                                                                                                     // 22\n  }, \"\\n \t\t\t\t\", HTML.Raw('<div class=\"col-md-3\" id=\"features\">\\n \t\t\t\t\t<h3 id=\"feat_head\"><b>Features!!</b></h3>\\n \t\t\t\t\t\\n \t\t\t\t\t\t<p>Meant for children and adults alike, the only requirement being the passion to take quizzes and learn</p>\\n \t\t\t\t\t\t<p>Take quizzes individually and learn</p>\\n \t\t\t\t\t\t<p>Take quizzes in a group with your peers and have fun</p>\\n \t\t\t\t\t\t<p>Attend regular sessions of headrush at the comfort of your place</p>\\n \t\t\t\t\t\t<p>Quizzes are provided happily by HeadRush-the quizzing club of DA-IICT</p>\\n \t\t\t\t\t\t\\n \t\t\t\t\t\\n \t\t\t\t</div>'), \"\t\\n \t\t\t\t\", HTML.Raw('<div class=\"col-md-5\">\\n \t\t\t\t\t<img class=\"img-responsive img-circle\" src=\"https://tttech.files.wordpress.com/2012/10/quiz.jpg\" alt=\"Cinque-Terre\">\\n \t\t\t\t</div>'), \"\\n \t\t\t\t\", HTML.DIV({\n    \"class\": \"col-md-4\"                                                                                                // 24\n  }, \"\\n \t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"signupForm\")), \"\\n \t\t\t\t\"), \"\\n\\n \t\t\t\"), \"\t\\n \t\t\");             // 25\n}));                                                                                                                   // 26\n                                                                                                                       // 27\nTemplate.__checkName(\"ranking\");                                                                                       // 28\nTemplate[\"ranking\"] = new Template(\"Template.ranking\", (function() {                                                   // 29\n  var view = this;                                                                                                     // 30\n  return [ HTML.TABLE({                                                                                                // 31\n    \"class\": \"table table-striped\"                                                                                     // 32\n  }, \" \", HTML.Comment(\" table striped class\"), \"\\n        \", HTML.THEAD(HTML.Comment(\" table head\"), \"\\n            \", HTML.TR(\"\\n               \", HTML.TH(\"Rank\"), \"\\n                \", HTML.TH(\"username\"), \"\\n              \", HTML.TH(\"Score\"), \"\\n               \\n            \"), \"\\n        \"), \"\\n\t\t\\n        \", HTML.TBODY(\"\\n        \t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"userRanking\"));                                                                 // 34\n  }, function() {                                                                                                      // 35\n    return [ \"\\n            \", HTML.TR(\"\\n            \t\", HTML.Comment(\" Row 1 \"), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr1\", function() {\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 37\n    })), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr2\", function() {                                          // 38\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 39\n    })), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr3\", function() {                                          // 40\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 41\n    })), \"\\n            \"), \"\\n            \" ];                                                                        // 42\n  }), \"\\n        \"), \"\\n\"), HTML.Raw('\\n\t\\n\\n<button type=\"submit\" class=\"btn btn-primary btn-primary btn3d\" value=\"submit\" id=\"home2\">Go back to home</button>') ];\n}));                                                                                                                   // 44\n                                                                                                                       // 45\nTemplate.__checkName(\"signupForm\");                                                                                    // 46\nTemplate[\"signupForm\"] = new Template(\"Template.signupForm\", (function() {                                             // 47\n  var view = this;                                                                                                     // 48\n  return HTML.Raw('<form id=\"signup-form\">\\n\t\t\t<h3 id=\"sub_title\">Sign Up</h3>\\n\\n\t\t\t<label for=\"signup-username\">Username</label>\\n\t\t\t<input type=\"text\" id=\"signup-username\" class=\"form-control\" placeholder=\"Username\"><br>\\n\t\t\t   \\n             \\n\t\t\t<label for=\"signup-email\">Email</label>\\n\t\t\t<input type=\"text\" id=\"signup-email\" class=\"form-control\" placeholder=\"Email\"><br>\\n\\n\t\t\t\\n\t\t\t<label for=\"signup-password\">Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-password\" class=\"form-control\" placeholder=\"Password\"><br>\\n\t\t\t\\n\t\t    \\n\t\t\t\\n\t\t\t<label for=\"signup-confirm\">Confirm Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-confirm\" class=\"form-control\" placeholder=\"Confirm password\"><br>\\n\\n\t\t\t<button class=\"btn btn-primary\" type=\"submit\">SignUp</button>\\n\\n\t\t</form>');\n}));                                                                                                                   // 50\n                                                                                                                       // 51\nTemplate.__checkName(\"emptyTemplate\");                                                                                 // 52\nTemplate[\"emptyTemplate\"] = new Template(\"Template.emptyTemplate\", (function() {                                       // 53\n  var view = this;                                                                                                     // 54\n  return \"\";                                                                                                           // 55\n}));                                                                                                                   // 56\n                                                                                                                       // 57\nTemplate.__checkName(\"waiting_time\");                                                                                  // 58\nTemplate[\"waiting_time\"] = new Template(\"Template.waiting_time\", (function() {                                         // 59\n  var view = this;                                                                                                     // 60\n  return [ HTML.Raw('<h2 id=\"qwerty\">Waiting for others Users to Join....</h2>\\n\\n\t<link href=\"https://fonts.googleapis.com/css?family=Orbitron\" rel=\"stylesheet\" type=\"text/css\">\\n'), Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"ended\"));                                                                       // 62\n  }, function() {                                                                                                      // 63\n    return [ \"\\n\t\", HTML.H1({                                                                                          // 64\n      id: \"timer\",                                                                                                     // 65\n      style: \"font-family: 'Orbitron', sans-serif;\"                                                                    // 66\n    }, Blaze.View(\"lookup:time_left\", function() {                                                                     // 67\n      return Spacebars.mustache(view.lookup(\"time_left\"));                                                             // 68\n    })), \"\\n\" ];                                                                                                       // 69\n  }), HTML.Raw('\\n\t<h2 id=\"info\">Quiz Will begin Soon...</h2>') ];                                                     // 70\n}));                                                                                                                   // 71\n                                                                                                                       // 72\nTemplate.__checkName(\"navigation\");                                                                                    // 73\nTemplate[\"navigation\"] = new Template(\"Template.navigation\", (function() {                                             // 74\n  var view = this;                                                                                                     // 75\n  return [ HTML.NAV({                                                                                                  // 76\n    \"class\": \"navbar navbar-inverse\"                                                                                   // 77\n  }, \"\\n\t\t\", HTML.DIV({                                                                                                // 78\n    \"class\": \"container-fluid\"                                                                                         // 79\n  }, \"\\n\t\t\t\", HTML.Raw('<div class=\"navbar-header\">\\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#mainNavBar\">\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t</button>\\n\t\t\t\t<a href=\"#\" class=\"navbar-brand\"><i>Quiz-o-Pedia</i></a>\\n\t\t\t</div>'), \"\\n\\n\t\t  \t\", HTML.DIV({\n    \"class\": \"collapse navbar-collapse\",                                                                               // 81\n    id: \"mainNavBar\"                                                                                                   // 82\n  }, \"\\n\t\t  \t\t\", HTML.UL({                                                                                             // 83\n    \"class\": \"nav navbar-nav\"                                                                                          // 84\n  }, \"\\n\t\t  \t\t\t\", HTML.LI({                                                                                            // 85\n    \"class\": \"active\"                                                                                                  // 86\n  }, HTML.A({                                                                                                          // 87\n    href: function() {                                                                                                 // 88\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                 // 89\n        route: \"quiz\"                                                                                                  // 90\n      }));                                                                                                             // 91\n    },                                                                                                                 // 92\n    id: \"home\"                                                                                                         // 93\n  }, \"HOME\")), \"\\n\t\t  \t\t\t\", Blaze.If(function() {                                                                      // 94\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 95\n  }, function() {                                                                                                      // 96\n    return [ \"\\n\t\t  \t\t\t\", HTML.LI(HTML.A({                                                                             // 97\n      href: function() {                                                                                               // 98\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                               // 99\n          route: \"profile1\"                                                                                            // 100\n        }));                                                                                                           // 101\n      },                                                                                                               // 102\n      id: \"profileButton\"                                                                                              // 103\n    }, \"PROFILE\")), \"\\n\t\t  \t\t\t\" ];                                                                                     // 104\n  }), \"\\n\t\t  \t\t\t\", HTML.LI(HTML.A({                                                                                    // 105\n    href: function() {                                                                                                 // 106\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                 // 107\n        route: \"rules\"                                                                                                 // 108\n      }));                                                                                                             // 109\n    },                                                                                                                 // 110\n    id: \"ruleButton\"                                                                                                   // 111\n  }, \"FAQ\")), \"\\n\t\t  \t\t\t\", Blaze.If(function() {                                                                       // 112\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 113\n  }, function() {                                                                                                      // 114\n    return [ \"\\n\t\t  \t\t\t\t\", Blaze.If(function() {                                                                       // 115\n      return Spacebars.call(view.lookup(\"isAdmin\"));                                                                   // 116\n    }, function() {                                                                                                    // 117\n      return [ \"\\n\t\t  \t\t\t\t\t\", HTML.LI(HTML.A({                                                                         // 118\n        href: function() {                                                                                             // 119\n          return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                             // 120\n            route: \"addquiz\"                                                                                           // 121\n          }));                                                                                                         // 122\n        },                                                                                                             // 123\n        id: \"addquiz\"                                                                                                  // 124\n      }, \"ADD-QUIZ\")), \"\\n\t\t  \t\t\t\t\" ];                                                                                 // 125\n    }), \"\\n\t\t  \t\t\t\" ];                                                                                                 // 126\n  }), \"\\n\t\t  \t\t\"), \"\\n\t\t\t\t\", HTML.UL({                                                                                 // 127\n    \"class\": \"nav navbar-nav navbar-right\"                                                                             // 128\n  }, \"\\n\t\t\t\t\t\", Blaze.If(function() {                                                                                  // 129\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 130\n  }, function() {                                                                                                      // 131\n    return [ \"\t\\n\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                             // 132\n      href: function() {                                                                                               // 133\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                               // 134\n          route: \"home\"                                                                                                // 135\n        }));                                                                                                           // 136\n      },                                                                                                               // 137\n      id: \"logoutbtn\"                                                                                                  // 138\n    }, \"LOGOUT\")), \"\\n\t\t\t\t\t\" ];                                                                                        // 139\n  }, function() {                                                                                                      // 140\n    return [ \"\\n\t\t\t\t\t\t\", HTML.LI(HTML.INPUT({                                                                          // 141\n      type: \"text\",                                                                                                    // 142\n      id: \"login-username\",                                                                                            // 143\n      placeholder: \"Username\"                                                                                          // 144\n    })), \"\\n\t\t\t\t\t\t\", HTML.LI(HTML.INPUT({                                                                              // 145\n      type: \"password\",                                                                                                // 146\n      id: \"login-password\",                                                                                            // 147\n      placeholder: \"Password\"                                                                                          // 148\n    })), \"\\n\t\t\t\t\t\t\", HTML.LI(HTML.BUTTON({                                                                             // 149\n      \"class\": \"btn btn-primary\",                                                                                      // 150\n      type: \"submit\",                                                                                                  // 151\n      id: \"loginbtn\"                                                                                                   // 152\n    }, \"LOGIN\")), \"\\n\t\t\t\t\t\" ];                                                                                         // 153\n  }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\"), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"yield\")), HTML.Raw('\\n\\n\t<!-- <div class=\"footer navbar-fixed-bottom\">\\n\\n\t\t\t           <ul class=\"footer\">\\n\t\t\t           <h3>\t&copy; Copyright 2016 Team-21</h3>\\n\t\t\t           </ul>\\n\\n                </div> -->\\n\\n\t<!-- <footer>&copy; Copyright 2016 Team 21</footer> -->') ];\n}));                                                                                                                   // 155\n                                                                                                                       // 156\nTemplate.__checkName(\"quizSelect\");                                                                                    // 157\nTemplate[\"quizSelect\"] = new Template(\"Template.quizSelect\", (function() {                                             // 158\n  var view = this;                                                                                                     // 159\n  return HTML.DIV({                                                                                                    // 160\n    \"class\": \"container\"                                                                                               // 161\n  }, HTML.Raw('\\n\t<form class=\"quizParameters\">\\n\\n\t\t\t<label><h3 align=\"center\"><b>Type</b></h3></label>\\n\t\t<div class=\"funkyradio\">\\n\t\t<div class=\"funkyradio-primary\">\t\t\\n\t\t\t<input type=\"radio\" name=\"quizType\" id=\"radio1\" value=\"Individual\" required=\"\"> \\n\t\t\t<label for=\"radio1\"> Individual</label>\\n\t\t</div>\\n\t\t<div class=\"funkyradio-primary\">\\n\t\t\t<input type=\"radio\" name=\"quizType\" id=\"radio2\" value=\"Group\" required=\"\"> \\n\t\t\t<label for=\"radio2\"> Group</label>\\n\t\t</div>\\n\t</div>\\n\\n\\n\t\t<div class=\"form-group\" id=\"cat\">\\n\t\t\t<label>Category:</label>\\n\t\t\t<select id=\"quizCategory\" class=\"button btn-primary\">\\n\t\t\t  <option value=\"General\">General</option>\\n\t\t\t  <option value=\"MELA\">MELA</option>\\n\t\t\t  <option value=\"Sports\">Sports</option>\\n\t\t\t</select>\\n\t\t</div>\\n\\n\t\t\\n\\n\t<button type=\"submit\" class=\"btn btn-primary btn-primary btn3d\" value=\"submit\">Take Quiz</button>\\n\t</form>\\n\\n\t\\n\t'), Blaze._TemplateWith(function() {\n    return {                                                                                                           // 163\n      template: Spacebars.call(\"online\")                                                                               // 164\n    };                                                                                                                 // 165\n  }, function() {                                                                                                      // 166\n    return Spacebars.include(function() {                                                                              // 167\n      return Spacebars.call(Template.__dynamic);                                                                       // 168\n    });                                                                                                                // 169\n  }), \"\\n\t\\n\");                                                                                                        // 170\n}));                                                                                                                   // 171\n                                                                                                                       // 172\nTemplate.__checkName(\"questionSelect\");                                                                                // 173\nTemplate[\"questionSelect\"] = new Template(\"Template.questionSelect\", (function() {                                     // 174\n  var view = this;                                                                                                     // 175\n  return HTML.DIV({                                                                                                    // 176\n    \"class\": \"row\"                                                                                                     // 177\n  }, \"\\n\t\", HTML.DIV({                                                                                                 // 178\n    \"class\": \"container\"                                                                                               // 179\n  }, \"\\n\t\", HTML.Raw('<div class=\"col-md-10\">\\n\t</div>'), \"\\n\t\", HTML.DIV({                                            // 180\n    \"class\": \"col-md-2\"                                                                                                // 181\n  }, \"\\n\t\t\", HTML.Raw(\"<h4>Time Left </h4>\"), HTML.H3(\" \", HTML.MARK(Blaze.View(\"lookup:time_left\", function() {       // 182\n    return Spacebars.mustache(view.lookup(\"time_left\"));                                                               // 183\n  }))), \"\\n\t\"), \"\\n\\n\t\", HTML.Raw('<div class=\"form-group\">\\n\t\t<label><h2>Questions: </h2></label>\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" style=\"background-color:red\" name=\"questionNumber\" value=\"1\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"2\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"3\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"4\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"5\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"6\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"7\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"8\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"9\">\\n\t\t<input type=\"button\" class=\"btn btn-primary btn-primary btn3d\" name=\"questionNumber\" value=\"10\">\\n\t\t<!-- <input type=\"button\" name=\"questionNumber\" value=\"1\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"2\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"3\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"4\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"5\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"6\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"7\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"8\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"9\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"10\"> -->\\n\t</div>'), \"\\n\"), \"\\n\");\n}));                                                                                                                   // 185\n                                                                                                                       // 186\nTemplate.__checkName(\"questionShow\");                                                                                  // 187\nTemplate[\"questionShow\"] = new Template(\"Template.questionShow\", (function() {                                         // 188\n  var view = this;                                                                                                     // 189\n  return HTML.DIV({                                                                                                    // 190\n    \"class\": \"container\"                                                                                               // 191\n  }, \"\\n\t\", Blaze.View(\"lookup:questionData.question\", function() {                                                    // 192\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"question\"));                                 // 193\n  }), \"\\n\t \", HTML.DIV({                                                                                               // 194\n    \"class\": \"funkyradio\"                                                                                              // 195\n  }, \"\\n\t\", HTML.DIV({                                                                                                 // 196\n    \"class\": \"funkyradio-success\"                                                                                      // 197\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 198\n    type: \"radio\",                                                                                                     // 199\n    name: \"questionAnswer\",                                                                                            // 200\n    id: \"radio1\",                                                                                                      // 201\n    value: function() {                                                                                                // 202\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                // 203\n    }                                                                                                                  // 204\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 205\n    \"for\": \"radio1\"                                                                                                    // 206\n  }, \" \", Blaze.View(\"lookup:questionData.option1\", function() {                                                       // 207\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                  // 208\n  }), \" \"), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                  // 209\n    \"class\": \"funkyradio-success\"                                                                                      // 210\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 211\n    type: \"radio\",                                                                                                     // 212\n    name: \"questionAnswer\",                                                                                            // 213\n    id: \"radio2\",                                                                                                      // 214\n    value: function() {                                                                                                // 215\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                // 216\n    }                                                                                                                  // 217\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 218\n    \"for\": \"radio2\"                                                                                                    // 219\n  }, \" \", Blaze.View(\"lookup:questionData.option2\", function() {                                                       // 220\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                  // 221\n  }), \" \"), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                  // 222\n    \"class\": \"funkyradio-success\"                                                                                      // 223\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 224\n    type: \"radio\",                                                                                                     // 225\n    name: \"questionAnswer\",                                                                                            // 226\n    id: \"radio3\",                                                                                                      // 227\n    value: function() {                                                                                                // 228\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                // 229\n    }                                                                                                                  // 230\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 231\n    \"for\": \"radio3\"                                                                                                    // 232\n  }, \" \", Blaze.View(\"lookup:questionData.option3\", function() {                                                       // 233\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                  // 234\n  }), \" \"), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                  // 235\n    \"class\": \"funkyradio-success\"                                                                                      // 236\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 237\n    type: \"radio\",                                                                                                     // 238\n    name: \"questionAnswer\",                                                                                            // 239\n    id: \"radio4\",                                                                                                      // 240\n    value: function() {                                                                                                // 241\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                // 242\n    }                                                                                                                  // 243\n  }), \"\\n\t\t\", HTML.LABEL({                                                                                             // 244\n    \"for\": \"radio4\"                                                                                                    // 245\n  }, \" \", Blaze.View(\"lookup:questionData.option4\", function() {                                                       // 246\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                  // 247\n  }), \" \"), \"\\n\t\"), \"\\n\t\"), HTML.Raw('\\n\t \t<button type=\"submit\" class=\"btn btn-primary btn-primary btn3d scoreCard\" value=\"submit\" id=\"onsubmitbutton\">Submit Quiz</button>\\n\t\\n\t '));\n}));                                                                                                                   // 249\n                                                                                                                       // 250\nTemplate.__checkName(\"online\");                                                                                        // 251\nTemplate[\"online\"] = new Template(\"Template.online\", (function() {                                                     // 252\n  var view = this;                                                                                                     // 253\n  return [ Blaze.If(function() {                                                                                       // 254\n    return Spacebars.call(view.lookup(\"totalHeadrushQuizzes\"));                                                        // 255\n  }, function() {                                                                                                      // 256\n    return [ \"\\n\t\t\t\t\", HTML.P(\"Headrush Quizzes:\"), \"\\n\t\t\t\t\", HTML.UL(\"\\n\t\t\t\t\", Blaze.Each(function() {                // 257\n      return Spacebars.call(view.lookup(\"showHeadRushQuizzes\"));                                                       // 258\n    }, function() {                                                                                                    // 259\n      return [ \"\\n\t\t\t\t\", HTML.LI(\"Category:\", Blaze.View(\"lookup:category\", function() {                               // 260\n        return Spacebars.mustache(view.lookup(\"category\"));                                                            // 261\n      }), \" Start Time:\", Blaze.View(\"lookup:date\", function() {                                                       // 262\n        return Spacebars.mustache(view.lookup(\"date\"));                                                                // 263\n      }), \",\", Blaze.View(\"lookup:time\", function() {                                                                  // 264\n        return Spacebars.mustache(view.lookup(\"time\"));                                                                // 265\n      })), \"\\n\t\t\t\t\", Blaze.If(function() {                                                                             // 266\n        return Spacebars.call(view.lookup(\"subscribe\"));                                                               // 267\n      }, function() {                                                                                                  // 268\n        return [ \"\\n\t\t\t\t\", HTML.INPUT({                                                                                // 269\n          type: \"button\",                                                                                              // 270\n          \"class\": \"btn btn-primary btn-primary btn3d\",                                                                // 271\n          value: \"Subscribe\",                                                                                          // 272\n          id: function() {                                                                                             // 273\n            return Spacebars.mustache(view.lookup(\"_id\"));                                                             // 274\n          }                                                                                                            // 275\n        }), \"\\n\t\t\t\t\" ];                                                                                                // 276\n      }), \"\t\\n\t\t\t\t\" ];                                                                                                 // 277\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\" ];                                                                                           // 278\n  }), \"\\n\\n\t\t\", Blaze.If(function() {                                                                                  // 279\n    return Spacebars.call(view.lookup(\"totalGroupQuizzes\"));                                                           // 280\n  }, function() {                                                                                                      // 281\n    return [ \"\\n\t\t\t\t\", HTML.P(\"Group quizzes to start soon\"), \"\\n\t\t\t\t\", HTML.UL(\"\\n\t\t\t\t\", Blaze.Each(function() {      // 282\n      return Spacebars.call(view.lookup(\"showGroupQuizzes\"));                                                          // 283\n    }, function() {                                                                                                    // 284\n      return [ \"\\n\t\t\t\t\", HTML.LI(\"Category:\", Blaze.View(\"lookup:category\", function() {                               // 285\n        return Spacebars.mustache(view.lookup(\"category\"));                                                            // 286\n      }), \" Initiated By:\", Blaze.View(\"lookup:username\", function() {                                                 // 287\n        return Spacebars.mustache(view.lookup(\"username\"));                                                            // 288\n      }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.INPUT({                                                                            // 289\n        type: \"button\",                                                                                                // 290\n        \"class\": \"btn btn-primary btn-primary btn3d\",                                                                  // 291\n        value: \"Subscribe\",                                                                                            // 292\n        id: function() {                                                                                               // 293\n          return Spacebars.mustache(view.lookup(\"_id\"));                                                               // 294\n        }                                                                                                              // 295\n      }), \"\\n\t\t\t\t\" ];                                                                                                  // 296\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\" ];                                                                                           // 297\n  }) ];                                                                                                                // 298\n}));                                                                                                                   // 299\n                                                                                                                       // 300\nTemplate.__checkName(\"scoreCard\");                                                                                     // 301\nTemplate[\"scoreCard\"] = new Template(\"Template.scoreCard\", (function() {                                               // 302\n  var view = this;                                                                                                     // 303\n  return [ HTML.DIV({                                                                                                  // 304\n    \"class\": \"container\"                                                                                               // 305\n  }, \"\\n \\n\\n\", HTML.P(\"\\n\t\", HTML.DIV({                                                                               // 306\n    \"class\": \"container\"                                                                                               // 307\n  }, \"\\n      \", HTML.H1({                                                                                             // 308\n    align: \"center\"                                                                                                    // 309\n  }, \"Total Score: \", Blaze.View(\"lookup:getTotalScore\", function() {                                                  // 310\n    return Spacebars.mustache(view.lookup(\"getTotalScore\"));                                                           // 311\n  })), \"\\n      \", HTML.Raw(\"<hr>\"), \"\\n  \"), \"\\n\\n  \", HTML.Raw(\"<br>\"), HTML.Raw(\"<br>\"), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"questionData\"));                                                                // 313\n  }, function() {                                                                                                      // 314\n    return [ \"\\n        \", HTML.UL({                                                                                   // 315\n      \"class\": \"list-group\"                                                                                            // 316\n    }, \"\\n          \", HTML.LI({                                                                                       // 317\n      \"class\": \"list-group-item list-group-item-info\"                                                                  // 318\n    }, HTML.B(\"Question \", Blaze.View(\"lookup:getIndex\", function() {                                                  // 319\n      return Spacebars.mustache(view.lookup(\"getIndex\"), view.lookup(\"@index\"));                                       // 320\n    }), \": \", Blaze.View(\"lookup:arr1\", function() {                                                                   // 321\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 322\n    })), HTML.BR()), \"\\n       \", HTML.LI({                                                                            // 323\n      \"class\": \"list-group-item\"                                                                                       // 324\n    }, \"   Option1: \", Blaze.View(\"lookup:arr2\", function() {                                                          // 325\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 326\n    }), \" \", Blaze.If(function() {                                                                                     // 327\n      return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr2\"), view.lookup(\"arr6\"));           // 328\n    }, function() {                                                                                                    // 329\n      return [ \" \", HTML.SPAN({                                                                                        // 330\n        \"class\": \"glyphicon glyphicon-ok\",                                                                             // 331\n        style: \"color:green\",                                                                                          // 332\n        \"aria-hidden\": \"true\"                                                                                          // 333\n      }), \" \" ];                                                                                                       // 334\n    }, function() {                                                                                                    // 335\n      return [ \" \", Blaze.If(function() {                                                                              // 336\n        return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr2\"), view.lookup(\"arr7\"));         // 337\n      }, function() {                                                                                                  // 338\n        return [ \" \", HTML.SPAN({                                                                                      // 339\n          \"class\": \"glyphicon glyphicon-remove\",                                                                       // 340\n          style: \"color:red\",                                                                                          // 341\n          \"aria-hidden\": \"true\"                                                                                        // 342\n        }), \" \" ];                                                                                                     // 343\n      }), \" \" ];                                                                                                       // 344\n    }), HTML.BR(), \"\\n          Option2: \", Blaze.View(\"lookup:arr3\", function() {                                     // 345\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 346\n    }), \" \", Blaze.If(function() {                                                                                     // 347\n      return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr3\"), view.lookup(\"arr6\"));           // 348\n    }, function() {                                                                                                    // 349\n      return [ \" \", HTML.SPAN({                                                                                        // 350\n        \"class\": \"glyphicon glyphicon-ok\",                                                                             // 351\n        style: \"color:green\",                                                                                          // 352\n        \"aria-hidden\": \"true\"                                                                                          // 353\n      }), \" \" ];                                                                                                       // 354\n    }, function() {                                                                                                    // 355\n      return [ \" \", Blaze.If(function() {                                                                              // 356\n        return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr3\"), view.lookup(\"arr7\"));         // 357\n      }, function() {                                                                                                  // 358\n        return [ \" \", HTML.SPAN({                                                                                      // 359\n          \"class\": \"glyphicon glyphicon-remove\",                                                                       // 360\n          style: \"color:red\",                                                                                          // 361\n          \"aria-hidden\": \"true\"                                                                                        // 362\n        }), \" \" ];                                                                                                     // 363\n      }), \" \" ];                                                                                                       // 364\n    }), HTML.BR(), \"\\n          Option3: \", Blaze.View(\"lookup:arr4\", function() {                                     // 365\n      return Spacebars.mustache(view.lookup(\"arr4\"));                                                                  // 366\n    }), \" \", Blaze.If(function() {                                                                                     // 367\n      return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr4\"), view.lookup(\"arr6\"));           // 368\n    }, function() {                                                                                                    // 369\n      return [ \" \", HTML.SPAN({                                                                                        // 370\n        \"class\": \"glyphicon glyphicon-ok\",                                                                             // 371\n        style: \"color:green\",                                                                                          // 372\n        \"aria-hidden\": \"true\"                                                                                          // 373\n      }), \" \" ];                                                                                                       // 374\n    }, function() {                                                                                                    // 375\n      return [ \" \", Blaze.If(function() {                                                                              // 376\n        return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr4\"), view.lookup(\"arr7\"));         // 377\n      }, function() {                                                                                                  // 378\n        return [ \" \", HTML.SPAN({                                                                                      // 379\n          \"class\": \"glyphicon glyphicon-remove\",                                                                       // 380\n          style: \"color:red\",                                                                                          // 381\n          \"aria-hidden\": \"true\"                                                                                        // 382\n        }), \" \" ];                                                                                                     // 383\n      }), \" \" ];                                                                                                       // 384\n    }), HTML.BR(), \"\\n          Option4: \", Blaze.View(\"lookup:arr5\", function() {                                     // 385\n      return Spacebars.mustache(view.lookup(\"arr5\"));                                                                  // 386\n    }), \" \", Blaze.If(function() {                                                                                     // 387\n      return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr5\"), view.lookup(\"arr6\"));           // 388\n    }, function() {                                                                                                    // 389\n      return [ \" \", HTML.SPAN({                                                                                        // 390\n        \"class\": \"glyphicon glyphicon-ok\",                                                                             // 391\n        style: \"color:green\",                                                                                          // 392\n        \"aria-hidden\": \"true\"                                                                                          // 393\n      }), \" \" ];                                                                                                       // 394\n    }, function() {                                                                                                    // 395\n      return [ \" \", Blaze.If(function() {                                                                              // 396\n        return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr5\"), view.lookup(\"arr7\"));         // 397\n      }, function() {                                                                                                  // 398\n        return [ \" \", HTML.SPAN({                                                                                      // 399\n          \"class\": \"glyphicon glyphicon-remove\",                                                                       // 400\n          style: \"color:red\",                                                                                          // 401\n          \"aria-hidden\": \"true\"                                                                                        // 402\n        }), \" \" ];                                                                                                     // 403\n      }), \" \" ];                                                                                                       // 404\n    }), HTML.BR(), HTML.STRONG(\"Score: \", Blaze.If(function() {                                                        // 405\n      return Spacebars.dataMustache(view.lookup(\"compareString\"), view.lookup(\"arr6\"), view.lookup(\"arr7\"));           // 406\n    }, function() {                                                                                                    // 407\n      return \"10\";                                                                                                     // 408\n    }, function() {                                                                                                    // 409\n      return \"0\";                                                                                                      // 410\n    }))), \"\\n\\n          \", HTML.Comment(' <li class=\"list-group-item list-group-item-success\">Correct Answer: {{arr6}}<br /></li> '), \"\\n          \", HTML.Comment(' <li class=\"list-group-item list-group-item-success\">Your Response: {{arr7}} <br /><br/></li>  '), \"\\n      \"), \"\\n        \" ];\n  }), \"\\n\"), \"\\n\\n\", Blaze.If(function() {                                                                             // 412\n    return Spacebars.call(view.lookup(\"Group\"));                                                                       // 413\n  }, function() {                                                                                                      // 414\n    return [ \"\\n\t\", HTML.BUTTON({                                                                                      // 415\n      type: \"submit\",                                                                                                  // 416\n      \"class\": \"btn btn-primary btn-primary btn3d\",                                                                    // 417\n      value: \"submit\",                                                                                                 // 418\n      id: \"onsubmitbutton\"                                                                                             // 419\n    }, \"Get Leaderboard\"), \"\\n\" ];                                                                                     // 420\n  }, function() {                                                                                                      // 421\n    return [ \"\\n\t\", HTML.BUTTON({                                                                                      // 422\n      type: \"submit\",                                                                                                  // 423\n      \"class\": \"btn btn-primary btn-primary btn3d\",                                                                    // 424\n      value: \"submit\",                                                                                                 // 425\n      id: \"home1\"                                                                                                      // 426\n    }, \"Go back to home\"), \"\\n\" ];                                                                                     // 427\n  }), \"  \\n\"), HTML.Raw(\"\\n<!-- <footer>&copy; Copyright 2016 Team 21</footer> -->\") ];                                // 428\n}));                                                                                                                   // 429\n                                                                                                                       // 430\nTemplate.__checkName(\"profile1\");                                                                                      // 431\nTemplate[\"profile1\"] = new Template(\"Template.profile1\", (function() {                                                 // 432\n  var view = this;                                                                                                     // 433\n  return [ HTML.Raw(\"<!-- Name, Email, UserSeens, Total Quiz, Stats-->\\n\\n \"), HTML.DIV({                              // 434\n    \"class\": \"container\"                                                                                               // 435\n  }, \"\\n\", HTML.H2(HTML.CENTER(\"Welcome \", Blaze.View(\"lookup:getProfileData.username\", function() {                   // 436\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"username\"));                               // 437\n  }))), \"\\n\", HTML.Raw(\"<h4><center><q>You Miss 100% Of The Shots You Don't Take</q></center><br></h4>\"), \"\\n\\n\", HTML.P(HTML.Raw(\"<h4><b><u>What we Know About You</u></b></h4>\"), HTML.Raw(\"<br>\"), \"\\n\", HTML.Raw(\"<b>Your Email:</b>\"), \" \", Blaze.View(\"lookup:getProfileData.email\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"email\"));                                  // 439\n  }), \" \", HTML.Raw(\"<br>\"), \"\\n\", HTML.Raw(\"<b>When You Registered With Us:</b>\"), \" \", Blaze.View(\"lookup:getProfileData.created\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"created\"));                                // 441\n  }), \" \", HTML.Raw(\"<br>\"), \"\\n\"), \"\\n\\n\", HTML.DIV({                                                                 // 442\n    \"class\": \"row\"                                                                                                     // 443\n  }, \"\\n\", HTML.DIV({                                                                                                  // 444\n    \"class\": \"col-md-6\"                                                                                                // 445\n  }, \" \\n\t\", HTML.Raw(\"<center><h3><u>Individual</u></h3></center>\"), HTML.Raw(\"<br>\"), \"\\n\t\", HTML.TABLE({            // 446\n    \"class\": \"table table-stripped\"                                                                                    // 447\n  }, \"\\n\t \", HTML.Comment(\" table striped class\"), \"\\n        \", HTML.THEAD({                                          // 448\n    style: \"border-style:solid; border-color:grey; padding-top:5px;\"                                                   // 449\n  }, HTML.Comment(\" table head\"), \"\\n            \", HTML.TR(\"\\n               \", HTML.TH(\"Category\"), \"\\n                \", HTML.TH(\"Score\"), \"\\n              \", HTML.TH(\"Taken On\"), \"\\n               \\n            \"), \"\\n        \"), \"\\n\t\t\\n        \", HTML.TBODY({\n    style: \"overflow-y:scroll;\"                                                                                        // 451\n  }, \"\\n        \t\", Blaze.Each(function() {                                                                            // 452\n    return Spacebars.call(view.lookup(\"getStatsIndividual\"));                                                          // 453\n  }, function() {                                                                                                      // 454\n    return [ \"\\n            \", HTML.TR(\"\\n            \t\", HTML.Comment(\" Row 1 \"), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr1\", function() {\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 456\n    })), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr2\", function() {                                          // 457\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 458\n    })), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr3\", function() {                                          // 459\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 460\n    })), \"\\n            \"), \"\\n            \" ];                                                                        // 461\n  }), \"\\n        \"), \"\\n\"), \"\\n\"), \"\\n\\n\", HTML.DIV({                                                                  // 462\n    \"class\": \"col-md-6\"                                                                                                // 463\n  }, \"\\n\t\", HTML.Raw(\"<center><h3><u>Group</u></h3></center>\"), \" \", HTML.Raw(\"<br>\"), \"\\n\", HTML.TABLE({              // 464\n    \"class\": \"table table-stripped\"                                                                                    // 465\n  }, \" \", HTML.Comment(\" table striped class\"), \"\\n        \", HTML.THEAD({                                             // 466\n    style: \"border-style:solid; border-color:grey; padding-top:5px;\"                                                   // 467\n  }, HTML.Comment(\" table head\"), \"\\n            \", HTML.TR(\"\\n               \", HTML.TH(\"Category\"), \"\\n                \", HTML.TH(\"Score\"), \"\\n              \", HTML.TH(\"Taken On\"), \"\\n               \\n            \"), \"\\n        \"), \"\\n\t\t\\n        \", HTML.TBODY({\n    style: \"overflow-y:scroll;\"                                                                                        // 469\n  }, \"\\n        \t\", Blaze.Each(function() {                                                                            // 470\n    return Spacebars.call(view.lookup(\"getStatsGroup\"));                                                               // 471\n  }, function() {                                                                                                      // 472\n    return [ \"\\n            \", HTML.TR(\"\\n            \t\", HTML.Comment(\" Row 1 \"), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr1\", function() {\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 474\n    })), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr2\", function() {                                          // 475\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 476\n    })), \"\\n                \", HTML.TD(Blaze.View(\"lookup:arr3\", function() {                                          // 477\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 478\n    })), \"\\n            \"), \"\\n            \" ];                                                                        // 479\n  }), \"\\n        \"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\t\") ];                                                                    // 480\n}));                                                                                                                   // 481\n                                                                                                                       // 482\nTemplate.__checkName(\"rules\");                                                                                         // 483\nTemplate[\"rules\"] = new Template(\"Template.rules\", (function() {                                                       // 484\n  var view = this;                                                                                                     // 485\n  return HTML.Raw('<div class=\"container\">\\n\t<i><center><h3><u>Quiz-o-Pedia</u></h3></center> <br><br>\\n<strong>What is Quiz-O-Pedia?</strong> <br>\\nQuiz-O-Pedia is an online quizzing website. We bring best of quizzing and help you learn, have fun and let smartest brains compete with each other all at the same time. <br><br>\\n<strong>Whom is Quiz-O-Pedia meant for?</strong><br>\\nYou don’t need a PhD. to play. (If you have one we will be honored to see you play). Quiz-O-Pedia is for anyone and everyone.<br><br>\\n<strong>How do I play?</strong><br>\\nRegister following a simple process, log in with that id, choose the category you like and start quizzing.<br><hr><br>\\n<mark>Questions</mark> <br><br>\\n<strong>What kinds of questions do I expect?</strong><br>\\nThe questions will be based on the category they belong to, which would include general questions, MELA-music entertainment, literature and arts and Sports which would cover all the domains.<br><hr><br>\\n<mark>Answers</mark> <br><br>\\n<strong>What is the format of the answer?</strong><br>\\nThe answers are in the MCQ format so the only requirement is selecting the appropriate option. \\nThe answer I looked up on the internet is correct but Quiz-o-Pedia doesn’t accept it!\\nContact us at quizzing@daiict.ac.in and we’ll be happy to follow up.<br><br>\\n<strong>What are the buttons at the top meant for?</strong><br>\\nIf you want to move to a random question or go back to a selected question for reviewing your answers, select one of those buttons to go to a specific question in the quiz.<br><hr><br>\\n<mark>Correctness Indicator</mark><br><br>\\n<strong>How are the correct answers evaluated?</strong><br>\\nThese are basically MCQ questions so if the right answer is selected, you will get 10 points.<br><hr><br>\\n<mark>General</mark><br><br>\\n<strong>What would happen  if a quiz is initiated?</strong><br>\\nFor a group quiz, a waiting timer of 1 minute will start which will allow various users to subscribe to that particular quiz, otherwise the quiz will start individually.\\nFollowing this, a quiz with 10 questions with a timer of 5 minutes will be initiated. <br><br>\\n<strong>What would happen once the timer of the quiz expires?</strong><br>\\nThe quiz will automatically be submiited. For an individual/group quiz, you will be directed to the scorecard page and you could move to the leaderboard page as an option appears for the same for group quiz.  <br><br>\\n<strong>Would the internet be accessible during the quiz?</strong><br>\\nWe cannot stop you from doing that but we’ll advice you to not Google the answers as the basic motive of learning and having fun is disturbed.<br><br>\\nIf you have any further questions please feel free to mail us,<b> quizzing@daiict.ac.in</b><br><hr></i>\\n</div>\\n<!-- <footer>&copy; Copyright 2016 Team 21</footer> -->');\n}));                                                                                                                   // 487\n                                                                                                                       // 488\nTemplate.__checkName(\"addquiz\");                                                                                       // 489\nTemplate[\"addquiz\"] = new Template(\"Template.addquiz\", (function() {                                                   // 490\n  var view = this;                                                                                                     // 491\n  return [ HTML.FORM({                                                                                                 // 492\n    \"class\": \"quizEntry\",                                                                                              // 493\n    id: \"quizEntry\"                                                                                                    // 494\n  }, \"\\n\\n\t\t\", HTML.Raw('<div class=\"form-group\">\\n\t\t\t<label>Quiz Creater: </label>\\n\t\t\t<input id=\"creater\" type=\"text\" required=\"\">\\n\t\t</div>'), \"\\n\\n\t\t\", HTML.Raw('<div class=\"form-group\" id=\"addCodeHere\">\\n\t\t\t<label>Category: </label>\\n\t\t\t<select id=\"category\">\\n\t\t\t  <option value=\"General\">General</option>\\n\t\t\t  <option value=\"MELA\">MELA</option>\\n\t\t\t  <option value=\"Sports\">Sports</option>\\n\t\t\t</select>\\n\t\t</div>'), \"\\n\\n\t\t\", HTML.SCRIPT({\n    type: \"text/javascript\"                                                                                            // 496\n  }, \"\\n\t\t\tvar form_string = \\\"<br>\\\";\\n\t\t\tfor (var i = 1; i <= 10; i++) {\\n\t\t\t\tform_string += \\\"<div class='form-group'><label>Question \\\"+ i +\\\": </label>\\\";\\n\t\t\t\tform_string += \\\"<input id='question\\\" + i + \\\"' type='text' required /></div>\\\" ;\\n\\n\t\t\t\tfor (var op = 1; op <= 4; op++) {\\n\t\t\t\t\tform_string += \\\"<div class='form-group'><label>Option \\\"+ op +\\\": </label>\\\";\\n\t\t\t\t\tform_string += \\\"<input id='question\\\" + i + \\\"_option\\\" + op + \\\"' type='text' required /> </div>\\\";\\n\t\t\t\t}\\n\\n\t\t\t\tform_string += \\\"<div class='form-group'><label>Answer \\\"+ i +\\\": </label>\\\";\\n\t\t\t\tform_string += \\\"<input id='question\\\" + i + \\\"_answer\\\" + \\\"' type='number' min='1' max='4' step='1' required /> </div> <br>\\\";\\n\t\t\t}\\n\t\t\t// form_string += \\\"<button type='submit' value='Submit'>Submit</button>\\\";\\n\\n\t\t\t// document.write(form_string);\\n\t\t\tvar temp = document.getElementById('addCodeHere');\\n\t\t\ttemp.insertAdjacentHTML('afterend', form_string);\\n\t\t\"), \"\\n\\n\t\t\", HTML.Raw('<div class=\"form-group\">\\n\t    \tWould you like to conduct a quiz for this questionnaire?\\n\t    \t<input type=\"radio\" name=\"conductQuiz\" value=\"yes\"> Yes\\n\t  \t\t<input type=\"radio\" name=\"conductQuiz\" value=\"no\" checked=\"checked\" required=\"\"> No\\n\t    </div>'), \"\\n\t    \", HTML.Raw('<div class=\"form-group\" id=\"quizTimeDiv\">\\n\t    \tSelect date and time:\\n\t    \t<input id=\"quizTime\" type=\"datetime-local\">\\n\t    </div>'), \"\\n\\n\t    \", HTML.Raw(\"<br>\"), HTML.Raw('<button type=\"submit\" value=\"Submit\">Submit</button>'), \"\\n\\n    \"), HTML.Raw(\"\\n<!-- <footer>&copy; Copyright 2016 Team 21</footer> -->\") ];\n}));                                                                                                                   // 498\n                                                                                                                       // 499\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ind_quiz.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ind_quiz.js                                                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nThisQuiz = new Mongo.Collection(\"quizzes\");                                                                            // 1\nThisResponse = new Mongo.Collection(\"responses\");                                                                      // 2\nvar q = 0;                                                                                                             // 3\nRouter.configure({                                                                                                     // 4\n  layoutTemplate: 'navigation'                                                                                         // 5\n});                                                                                                                    //\nif (Meteor.isClient) {                                                                                                 // 7\n  var updateTimeLeft;                                                                                                  // 8\n  Template.signupForm.events({                                                                                         // 9\n    'submit #signup-form': function () {                                                                               // 10\n      function submitSignupForm(e, t) {                                                                                // 10\n        //  e.preventDefault();                                                                                        //\n        //  if(Meteor.users.findOne({username: $('#signup-username').val()}) ) {                                       //\n        //    alert('Username already exists');                                                                        //\n        //  }                                                                                                          //\n        //  else {                                                                                                     //\n        //  var input=t.find('#signup-password').value;                                                                //\n        //  var input2=t.find('#signup-confirm').value;                                                                //\n        //  if(input.length<4 || input.length> 8)                                                                      //\n        //      {                                                                                                      //\n        //      alert(\"Please input the password between \" +4+ \" and \" +8+ \" characters\");                             //\n        //            return false;                                                                                    //\n        //      }                                                                                                      //\n        //    else{                                                                                                    //\n        //        if(input!=input2){                                                                                   //\n        //          alert(\"Password Mismatch\");                                                                        //\n        //        }                                                                                                    //\n                                                                                                                       //\n        //        else{                                                                                                //\n        //  Accounts.createUser({                                                                                      //\n        //    username:t.find('#signup-username').value,                                                               //\n        //    password:t.find('#signup-password').value,                                                               //\n        //    email:t.find('#signup-email').value,                                                                     //\n        //    stats: {},                                                                                               //\n        //    profile:{                                                                                                //\n        //      confirm:t.find('#signup-confirm').value,                                                               //\n        //      current_response_id:\"\"                                                                                 //\n        //    },                                                                                                       //\n        //    stats:[]                                                                                                 //\n        //  });                                                                                                        //\n                                                                                                                       //\n        //  t.find('#signup-username').value = \"\";                                                                     //\n        //  t.find('#signup-password').value = \"\";                                                                     //\n        //  t.find('#signup-email').value = \"\";                                                                        //\n        //  t.find('#signup-confirm').value = \"\";                                                                      //\n                                                                                                                       //\n        //      }                                                                                                      //\n        //      Meteor.logout();                                                                                       //\n        //  }                                                                                                          //\n        // }                                                                                                           //\n                                                                                                                       //\n        e.preventDefault();                                                                                            // 51\n        var username = $('#signup-username').val();                                                                    // 52\n        var email = $('#signup-email').val();                                                                          // 53\n        var password = $('#signup-password').val();                                                                    // 54\n        var confirm = $('#signup-confirm').val();                                                                      // 55\n        if (Meteor.users.findOne({ username: username })) {                                                            // 56\n          alert('Username already exists');                                                                            // 57\n        } else {                                                                                                       //\n          //alert('Email already exists');                                                                             //\n          Meteor.call('getUserByEmail', email, function (error, result) {                                              // 61\n            console.log(result);                                                                                       // 62\n            if (result) {                                                                                              // 63\n              console.log('Email not unique');                                                                         // 64\n              alert('Email already exists');                                                                           // 65\n            } else {                                                                                                   //\n              if (password.length < 4 || password.length > 15) {                                                       // 68\n                alert('Please enter a password of length 4-15 characters');                                            // 69\n              } else if (password !== confirm) {                                                                       //\n                alert('Passwords do not match');                                                                       // 72\n              } else {                                                                                                 //\n                Accounts.createUser({                                                                                  // 75\n                  username: $('#signup-username').val(),                                                               // 76\n                  password: $('#signup-password').val(),                                                               // 77\n                  email: $('#signup-email').val(),                                                                     // 78\n                  stats: {},                                                                                           // 79\n                  profile: {                                                                                           // 80\n                    confirm: $('#signup-confirm').val(),                                                               // 81\n                    current_response_id: \"\"                                                                            // 82\n                  },                                                                                                   //\n                  stats: []                                                                                            // 84\n                });                                                                                                    //\n                $('#signup-username').val('');                                                                         // 86\n                $('#signup-password').val('');                                                                         // 87\n                $('#signup-email').val('');                                                                            // 88\n                $('#signup-confirm').val('');                                                                          // 89\n              }                                                                                                        //\n            }                                                                                                          //\n          });                                                                                                          //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return submitSignupForm;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  //  Template.loginForm.events({                                                                                      //\n  //     'submit #login-form': function(e,t) {                                                                         //\n  //       e.preventDefault();                                                                                         //\n                                                                                                                       //\n  //        var unam=t.find('#login-username').value;                                                                  //\n  //        var password=t.find('#login-password').value;                                                              //\n                                                                                                                       //\n  //          Meteor.loginWithPassword(unam,password);                                                                 //\n  //          Router.go('/quiz');                                                                                      //\n  //     }                                                                                                             //\n  // });                                                                                                               //\n                                                                                                                       //\n  var quizQuestions = [];                                                                                              // 7\n                                                                                                                       //\n  changeAnswer = function changeAnswer(question) {                                                                     // 112\n    console.log('In change answer');                                                                                   // 113\n    Meteor.call(\"getResponse\", question, function (error, result) {                                                    // 114\n      if (error) console.log(error.reason);else {                                                                      // 115\n        if (result) {                                                                                                  // 118\n          console.log(result);                                                                                         // 119\n          $('input[name=questionAnswer][value=\"' + result + '\"]').prop('checked', true);                               // 120\n        } else $('input[name=questionAnswer]').prop('checked', false);                                                 //\n      }                                                                                                                //\n    });                                                                                                                //\n  };                                                                                                                   //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.addquiz.onRendered(function () {                                                                            // 7\n    $(document).ready(function () {                                                                                    // 131\n      $('#quizTimeDiv').hide();                                                                                        // 132\n      $(\"input[name=conductQuiz]\").click(function () {                                                                 // 133\n        var val = $(this).val();                                                                                       // 134\n        if (val == 'yes') {                                                                                            // 135\n          $('#quizTimeDiv').show();                                                                                    // 136\n          $('#quizTime').prop('required', true);                                                                       // 137\n        } else {                                                                                                       //\n          $('#quizTimeDiv').hide();                                                                                    // 140\n          $('#quizTime').removeAttr('required');                                                                       // 141\n        }                                                                                                              //\n      });                                                                                                              //\n    });                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.addquiz.events({                                                                                            // 148\n    \"submit .quizEntry\": function () {                                                                                 // 149\n      function submitQuizEntry(event) {                                                                                // 149\n        event.preventDefault();                                                                                        // 150\n        var que_array = new Array();                                                                                   // 151\n        var creater = event.target.creater.value;                                                                      // 152\n        var category = event.target.category.value;                                                                    // 153\n        var conductQuiz = event.target.conductQuiz.value;                                                              // 154\n        var quizTime = event.target.quizTime.value + ':00+05:30';                                                      // 155\n                                                                                                                       //\n        for (var i = 1; i <= 10; i++) {                                                                                // 157\n          eval(\"var que\" + \"= event.target.question\" + i + \".value\");                                                  // 158\n          eval(\"var ans\" + \"= event.target.question\" + i + \"_answer.value\");                                           // 159\n          for (var op = 1; op <= 4; op++) {                                                                            // 160\n            eval(\"var opt\" + op + \"= event.target.question\" + i + \"_option\" + op + \".value\");                          // 161\n          }                                                                                                            //\n          que_array.push({ number: i, question: que, option1: opt1, option2: opt2, option3: opt3, option4: opt4, answer: ans });\n        }                                                                                                              //\n                                                                                                                       //\n        Meteor.call(\"addQuizFunction\", creater, category, que_array, conductQuiz, quizTime);                           // 166\n        event.target.reset();                                                                                          // 167\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizEntry;                                                                                          //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onCreated(function () {                                                                      // 172\n    this.time_left = new ReactiveVar(1200);                                                                            // 173\n    Session.clear('updateTimeLeft');                                                                                   // 174\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.onCreated(function () {                                                                           // 177\n    this.time_left = new ReactiveVar(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left);       // 178\n  });                                                                                                                  //\n  Template.waiting_time.onCreated(function () {                                                                        // 180\n    this.time_left = new ReactiveVar(300);                                                                             // 181\n    Session.clear('updateWaitingTimeLeft');                                                                            // 182\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.onRendered(function () {                                                                          // 185\n    if (Session.get('selectedType') === 'Individual') {                                                                // 186\n      $('#home').click(function () {                                                                                   // 187\n        console.log('home clicked');                                                                                   // 188\n        Meteor.users.update(Meteor.userId(), { $set: { \"profile.current_response_id\": '' } });                         // 189\n        Session.clear('final_answer');                                                                                 // 190\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 191\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 192\n        Session.clear('subscribed');                                                                                   // 193\n      });                                                                                                              //\n    }                                                                                                                  //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.onRendered(function () {                                                                            // 198\n    $('#home').click(function () {                                                                                     // 199\n      console.log('home clicked');                                                                                     // 200\n      Meteor.users.update(Meteor.userId(), { $set: { \"profile.current_response_id\": '' } });                           // 201\n      Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                      // 202\n      Meteor.clearInterval(Session.get('updateTimeLeft'));                                                             // 203\n      Session.clear('final_answer');                                                                                   // 204\n      Session.clear('subscribed');                                                                                     // 205\n    });                                                                                                                //\n  });                                                                                                                  //\n  Template.questionSelect.onRendered(function () {                                                                     // 208\n    Meteor.clearInterval(Session.get('updateTimeLeft'));                                                               // 209\n    var self = this;                                                                                                   // 210\n                                                                                                                       //\n    Meteor.call(\"getQuiz\", function (error, result) {                                                                  // 212\n      if (error) console.log(error.reason);else {                                                                      // 213\n        quizQuestions = result;                                                                                        // 216\n        Session.set('selectedQuestion', '1');                                                                          // 217\n        changeAnswer('1');                                                                                             // 218\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.call(\"getTimer\", function (error, result) {                                                                 // 224\n      if (error) console.log(error.reason);else {                                                                      // 225\n        self.time_left.set(result);                                                                                    // 228\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateTimeLeft = Meteor.setInterval(function () {                                                                  // 232\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 233\n      Meteor.call('setTimer', self.time_left.get());                                                                   // 234\n    }, 1000);                                                                                                          //\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);                                                           // 236\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onDestroyed(function () {                                                                    // 240\n                                                                                                                       //\n    Meteor.clearInterval('updateTimeLeft');                                                                            // 243\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onDestroyed(function () {                                                                      // 246\n                                                                                                                       //\n    Meteor.clearInterval('updateWaitingTimeLeft');                                                                     // 248\n    Session.clear('subscribed');                                                                                       // 249\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onRendered(function () {                                                                       // 252\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                        // 253\n    var self = this;                                                                                                   // 254\n                                                                                                                       //\n    Meteor.call(\"getWaitingTimer\", function (error, result) {                                                          // 256\n      if (error) console.log(error.reason);else {                                                                      // 257\n        self.time_left.set(result);                                                                                    // 260\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateWaitingTimeLeft = Meteor.setInterval(function () {                                                           // 264\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 265\n      Meteor.call('setWaitingTimer', self.time_left.get());                                                            // 266\n    }, 1000);                                                                                                          //\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);                                                       // 268\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.events({                                                                                     // 274\n    'click input[name=questionNumber]': function () {                                                                  // 275\n      function clickInputNameQuestionNumber(event, template) {                                                         // 275\n        Session.set('selectedQuestion', event.target.value);                                                           // 276\n        $('input[name=questionNumber]').attr(\"style\", \"background-color:blue\");                                        // 277\n        $(event.target).attr(\"style\", \"background-color:red\");                                                         // 278\n        console.log(event.target.value);                                                                               // 279\n        changeAnswer(event.target.value);                                                                              // 280\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInputNameQuestionNumber;                                                                             //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.helpers({                                                                                            // 284\n                                                                                                                       //\n    'totalHeadrushQuizzes': function () {                                                                              // 286\n      function totalHeadrushQuizzes() {                                                                                // 286\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 287\n        var time = new Date();                                                                                         // 288\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 289\n                                                                                                                       //\n          if (!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedAt - new Date() < 0) {\n            console.log('Hello');                                                                                      // 292\n            groupQuizzes.splice(i, 1);                                                                                 // 293\n            i = -1;                                                                                                    // 294\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes.length > 0;                                                                                // 297\n      }                                                                                                                //\n                                                                                                                       //\n      return totalHeadrushQuizzes;                                                                                     //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showHeadRushQuizzes': function () {                                                                               // 300\n      function showHeadRushQuizzes() {                                                                                 // 300\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 301\n        var time = new Date();                                                                                         // 302\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 303\n                                                                                                                       //\n          if (!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedAt - new Date() < 0) {\n            console.log('Hello');                                                                                      // 306\n            groupQuizzes.splice(i, 1);                                                                                 // 307\n            i = -1;                                                                                                    // 308\n          } else {                                                                                                     //\n            groupQuizzes[i].date = groupQuizzes[i].conductedAt.toDateString();                                         // 310\n            groupQuizzes[i].time = groupQuizzes[i].conductedAt.toLocaleTimeString();                                   // 311\n            groupQuizzes[i].subscribe = Math.abs(groupQuizzes[i].conductedAt - new Date()) / (1000 * 60) < 10;         // 312\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes;                                                                                           // 315\n      }                                                                                                                //\n                                                                                                                       //\n      return showHeadRushQuizzes;                                                                                      //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getUserName': function () {                                                                                       // 318\n      function getUserName(userID) {                                                                                   // 318\n        return Meteor.users.findOne(userID).username;                                                                  // 319\n      }                                                                                                                //\n                                                                                                                       //\n      return getUserName;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showGroupQuizzes': function () {                                                                                  // 322\n      function showGroupQuizzes() {                                                                                    // 322\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 323\n        var time = new Date();                                                                                         // 324\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 325\n                                                                                                                       //\n          if (groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {                              // 327\n            console.log('Hello');                                                                                      // 328\n            groupQuizzes.splice(i, 1);                                                                                 // 329\n            i = -1;                                                                                                    // 330\n          } else {                                                                                                     //\n            groupQuizzes[i].username = Meteor.users.findOne(groupQuizzes[i].userID[0]).username;                       // 334\n            console.log(groupQuizzes[i].username);                                                                     // 335\n          }                                                                                                            //\n          // if(groupQuizzes[i].conductedByHeadRush){                                                                  //\n          //   headrushQuiz = groupQuizzes[i];                                                                         //\n          //   groupQuizzes.splice(i, 1);                                                                              //\n          //   i=-1;                                                                                                   //\n          // }                                                                                                         //\n        }                                                                                                              // 325\n        return groupQuizzes;                                                                                           // 343\n      }                                                                                                                //\n                                                                                                                       //\n      return showGroupQuizzes;                                                                                         //\n    }(),                                                                                                               //\n    'totalGroupQuizzes': function () {                                                                                 // 345\n      function totalGroupQuizzes() {                                                                                   // 345\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 346\n        var time = new Date();                                                                                         // 347\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 348\n                                                                                                                       //\n          if (groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {                              // 350\n            console.log('Hello');                                                                                      // 351\n            groupQuizzes.splice(i, 1);                                                                                 // 352\n            i = -1;                                                                                                    // 353\n          }                                                                                                            //\n        }                                                                                                              //\n        return groupQuizzes.length > 0;                                                                                // 357\n      }                                                                                                                //\n                                                                                                                       //\n      return totalGroupQuizzes;                                                                                        //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.events({                                                                                             // 361\n    'click input': function () {                                                                                       // 362\n      function clickInput() {                                                                                          // 362\n        event.preventDefault();                                                                                        // 363\n                                                                                                                       //\n        var responseID = $(event.target).attr('id');                                                                   // 365\n        var subscribed = $(event.target).attr('value');                                                                // 366\n        console.log(subscribed);                                                                                       // 367\n        Session.setPersistent('subscribed', subscribed);                                                               // 368\n                                                                                                                       //\n        Meteor.call('setGroupResponseId', responseID);                                                                 // 370\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.helpers({                                                                                    // 374\n    time_left: function () {                                                                                           // 375\n      function time_left() {                                                                                           // 375\n        var time = Template.instance().time_left.get();                                                                // 376\n        Session.set('timeLeft', time);                                                                                 // 377\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 378\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 379\n        if (time <= 0) {                                                                                               // 380\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 381\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 382\n          Session.clear('final_answer');                                                                               // 383\n          Session.clear('subscribed');                                                                                 // 384\n          $('.scoreCard').trigger('click');                                                                            // 385\n        }                                                                                                              //\n        Session.update('quiz_time_left', minutes + \":\" + seconds);                                                     // 387\n        Session.makePersistent('quiz_time_left');                                                                      // 388\n        return minutes + \":\" + seconds;                                                                                // 389\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }(),                                                                                                               //\n    'ended': function () {                                                                                             // 391\n      function ended() {                                                                                               // 391\n        return Session.get('timeLeft') <= 0;                                                                           // 392\n      }                                                                                                                //\n                                                                                                                       //\n      return ended;                                                                                                    //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.helpers({                                                                                      // 396\n    time_left: function () {                                                                                           // 397\n      function time_left() {                                                                                           // 397\n        var time = Template.instance().time_left.get();                                                                // 398\n        Session.set('timeLeft', time);                                                                                 // 399\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 400\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 401\n        if (time <= 0) {                                                                                               // 402\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 403\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 404\n          Session.clear('final_answer');                                                                               // 405\n          Session.clear('subscribed');                                                                                 // 406\n        }                                                                                                              //\n        return minutes + \":\" + seconds;                                                                                // 408\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.helpers({                                                                                        // 412\n    'user': function () {                                                                                              // 413\n      function user() {                                                                                                // 413\n        console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");                             // 414\n        return Meteor.users.find({ _id: Meteor.userId() });                                                            // 415\n      }                                                                                                                //\n                                                                                                                       //\n      return user;                                                                                                     //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'isAdmin': function () {                                                                                           // 418\n      function isAdmin() {                                                                                             // 418\n        return Meteor.users.findOne(Meteor.userId()).username === 'admin';                                             // 419\n      }                                                                                                                //\n                                                                                                                       //\n      return isAdmin;                                                                                                  //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.events({                                                                                         // 423\n    'click #logoutbtn': function () {                                                                                  // 424\n      function clickLogoutbtn() {                                                                                      // 424\n        Meteor.call('endquiz', Meteor.userId());                                                                       // 425\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 426\n        console.log();                                                                                                 // 427\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 428\n        Session.clear('final_answer');                                                                                 // 429\n        Session.clear('subscribed');                                                                                   // 430\n        Meteor.logout();                                                                                               // 431\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #loginbtn': function () {                                                                                   // 434\n      function clickLoginbtn(e, t) {                                                                                   // 434\n        // e.preventDefault();                                                                                         //\n                                                                                                                       //\n        // console.log('hello');                                                                                       //\n        //  var unam=t.find('#login-username').value;                                                                  //\n        //  var password=t.find('#login-password').value;                                                              //\n                                                                                                                       //\n        //    Meteor.loginWithPassword(unam,password);                                                                 //\n        //    Router.go('/quiz');                                                                                      //\n                                                                                                                       //\n        e.preventDefault();                                                                                            // 444\n        var unam = $('#login-username').val();                                                                         // 445\n        var password = $('#login-password').val();                                                                     // 446\n        // if(!Meteor.users.findOne({username: unam})) {                                                               //\n        //   alert('Username does not exist');                                                                         //\n        // }                                                                                                           //\n        Meteor.loginWithPassword(unam, password, function (error, result) {                                            // 434\n          if (error) {                                                                                                 // 451\n            if (error.reason === 'Incorrect password') alert('Incorrect Password');else if (error.reason === 'User not found') alert('User not Found');\n          } else {                                                                                                     //\n            Router.go('/quiz');                                                                                        // 456\n          }                                                                                                            //\n        });                                                                                                            //\n        console.log('hello');                                                                                          // 459\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLoginbtn;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'keypress input': function () {                                                                                    // 463\n      function keypressInput(e, t) {                                                                                   // 463\n        if (e.which === 13) {                                                                                          // 464\n          $('#loginbtn').trigger('click');                                                                             // 465\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return keypressInput;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #profileButton': function () {                                                                              // 469\n      function clickProfileButton() {                                                                                  // 469\n        Meteor.call(\"getProfileData\", function (error, result) {                                                       // 470\n          if (error) {                                                                                                 // 471\n            //console.log(\"Chu\");                                                                                      //\n            console.log(error.reason);                                                                                 // 473\n          } else {                                                                                                     //\n            Session.set('profileData', result);                                                                        // 477\n            Router.go('profile');                                                                                      // 478\n            //console.log(Session.get('selectedScore1'));                                                              //\n            $('#links li').removeClass('active');                                                                      // 476\n            $(this).parent().addClass('active');                                                                       // 481\n          }                                                                                                            //\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickProfileButton;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #ruleButton': function () {                                                                                 // 486\n      function clickRuleButton() {                                                                                     // 486\n        $('#links li').removeClass('active');                                                                          // 487\n        $(this).parent().addClass('active');                                                                           // 488\n        Router.go('rules');                                                                                            // 489\n      }                                                                                                                //\n                                                                                                                       //\n      return clickRuleButton;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #home': function () {                                                                                       // 493\n      function clickHome() {                                                                                           // 493\n        $('#links li').removeClass('active');                                                                          // 494\n        $(this).parent().addClass('active');                                                                           // 495\n        Router.go('quiz');                                                                                             // 496\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #addquiz': function () {                                                                                    // 499\n      function clickAddquiz() {                                                                                        // 499\n        $('#links li').removeClass('active');                                                                          // 500\n        $(this).parent().addClass('active');                                                                           // 501\n        Router.go('addquiz');                                                                                          // 502\n      }                                                                                                                //\n                                                                                                                       //\n      return clickAddquiz;                                                                                             //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.profile1.helpers({                                                                                          // 508\n    'getProfileData': function () {                                                                                    // 509\n      function getProfileData() {                                                                                      // 509\n        return Session.get('profileData');                                                                             // 510\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsIndividual': function () {                                                                                // 513\n      function getStatsIndividual() {                                                                                  // 513\n        var statistics = Session.get('profileData').stats;                                                             // 514\n        var count = 0;                                                                                                 // 515\n        var arr1 = [];                                                                                                 // 516\n        var arr2 = [];                                                                                                 // 517\n        var arr3 = [];                                                                                                 // 518\n        var array = [];                                                                                                // 519\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 521\n          if (statistics[i].type === 'Individual') {                                                                   // 522\n            arr1[count] = statistics[i].category;                                                                      // 523\n            arr2[count] = statistics[i].score;                                                                         // 524\n            arr3[count] = statistics[i].takenOn;                                                                       // 525\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 526\n            array.push(obj);                                                                                           // 527\n            count++;                                                                                                   // 528\n          }                                                                                                            //\n        }                                                                                                              //\n        Session.setPersistent('arrayIndLen', array.length);                                                            // 531\n        return array;                                                                                                  // 532\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsIndividual;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsGroup': function () {                                                                                     // 535\n      function getStatsGroup() {                                                                                       // 535\n        var statistics = Session.get('profileData').stats;                                                             // 536\n        var count = 0;                                                                                                 // 537\n        var arr1 = [];                                                                                                 // 538\n        var arr2 = [];                                                                                                 // 539\n        var arr3 = [];                                                                                                 // 540\n        var array = [];                                                                                                // 541\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 543\n          if (statistics[i].type === 'Group') {                                                                        // 544\n            arr1[count] = statistics[i].category;                                                                      // 545\n            arr2[count] = statistics[i].score;                                                                         // 546\n            arr3[count] = statistics[i].takenOn;                                                                       // 547\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 548\n            array.push(obj);                                                                                           // 549\n            count++;                                                                                                   // 550\n          }                                                                                                            //\n        }                                                                                                              //\n        Session.setPersistent('arrayGrpLen', array.length);                                                            // 553\n        return array;                                                                                                  // 554\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsGroup;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getLengths': function () {                                                                                        // 557\n      function getLengths() {                                                                                          // 557\n        var obj = { a1: Session.get('arrayIndLen') > 0, a2: Session.get('arrayGrpLen') > 0 };                          // 558\n        console.log(obj + ' ...........obj');                                                                          // 559\n        return obj;                                                                                                    // 560\n      }                                                                                                                //\n                                                                                                                       //\n      return getLengths;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionShow.events({                                                                                       // 7\n    'click input': function () {                                                                                       // 567\n      function clickInput(event, template) {                                                                           // 567\n        Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')), event.target.value);                     // 568\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 571\n      function clickOnsubmitbutton() {                                                                                 // 571\n                                                                                                                       //\n        var final_answer = $('#onsubmitbutton').attr('value');                                                         // 573\n        Session.setPersistent('final_answer', final_answer);                                                           // 574\n        console.log(\"going Here\");                                                                                     // 575\n        Meteor.call(\"getQuestionSet\", function (error, result) {                                                       // 576\n          if (error) {                                                                                                 // 577\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 579\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.setPersistent('selectedScore', result);                                                            // 584\n            console.log(Session.get('selectedScore'));                                                                 // 585\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getResponseSet\", function (error, result) {                                                       // 589\n          if (error) {                                                                                                 // 590\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 592\n          } else {                                                                                                     //\n            Session.setPersistent('selectedScore1', result);                                                           // 596\n            console.log(Session.get('selectedScore1'));                                                                // 597\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getActualScore\", function (error, result) {                                                       // 601\n          if (error) {                                                                                                 // 602\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 604\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.setPersistent('selectedScore2', result);                                                           // 609\n            // console.log(Session.get('selectedScore2'));                                                             //\n            // console.log(\"aaasssssss\"+ Session.get('selectedScore2'));                                               //\n          }                                                                                                            // 607\n        });                                                                                                            //\n        Router.go('scoreCard');                                                                                        // 614\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionShow.helpers({                                                                                      // 618\n    questionData: function () {                                                                                        // 619\n      function questionData() {                                                                                        // 619\n                                                                                                                       //\n        return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];                                           // 621\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showSubmitButton': function () {                                                                                  // 624\n      function showSubmitButton() {                                                                                    // 624\n        return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;\n      }                                                                                                                //\n                                                                                                                       //\n      return showSubmitButton;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.quizSelect.events({                                                                                         // 7\n    \"submit .quizParameters\": function () {                                                                            // 632\n      function submitQuizParameters(event) {                                                                           // 632\n        event.preventDefault();                                                                                        // 633\n        var selectedType = event.target.quizType.value;                                                                // 634\n        var selectedCategory = event.target.quizCategory.value;                                                        // 635\n        if (selectedType === '') alert(\"Select quiz type.\");else {                                                     // 636\n          Session.setPersistent('selectedType', selectedType);                                                         // 639\n          Meteor.call(\"createResponse\", selectedType, selectedCategory);                                               // 640\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizParameters;                                                                                     //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.events({                                                                                          // 646\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 650\n      function clickOnsubmitbutton(event) {                                                                            // 650\n        if (ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {                           // 651\n          event.preventDefault();                                                                                      // 652\n          alert('Please wait for the quiz to complete to see the leaderboard');                                        // 653\n        } else {                                                                                                       //\n          Meteor.call(\"getRanking\", function (error, result) {                                                         // 656\n            if (error) {                                                                                               // 657\n                                                                                                                       //\n              console.log(error.reason);                                                                               // 659\n            } else {                                                                                                   //\n                                                                                                                       //\n              Session.set('rank', result);                                                                             // 664\n              console.log(Session.get('rank') + ' ............herep');                                                 // 665\n              Router.go('ranking');                                                                                    // 666\n            }                                                                                                          //\n          });                                                                                                          //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #home1': function () {                                                                                      // 672\n      function clickHome1() {                                                                                          // 672\n        $(\"#home\").trigger('click');                                                                                   // 673\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome1;                                                                                               //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.events({                                                                                            // 679\n    'click #home2': function () {                                                                                      // 680\n      function clickHome2() {                                                                                          // 680\n        $(\"#home\").trigger('click');                                                                                   // 681\n      }                                                                                                                //\n                                                                                                                       //\n      return clickHome2;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.helpers({                                                                                           // 685\n    'userRanking': function () {                                                                                       // 686\n      function userRanking() {                                                                                         // 686\n        return Session.get('rank');                                                                                    // 687\n      }                                                                                                                //\n                                                                                                                       //\n      return userRanking;                                                                                              //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.helpers({                                                                                         // 691\n                                                                                                                       //\n    compareString: function () {                                                                                       // 693\n      function compareString(a, b) {                                                                                   // 693\n        return a == b;                                                                                                 // 694\n      }                                                                                                                //\n                                                                                                                       //\n      return compareString;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    questionData: function () {                                                                                        // 697\n      function questionData() {                                                                                        // 697\n                                                                                                                       //\n        var arr1 = [];                                                                                                 // 699\n        var arr2 = [];                                                                                                 // 700\n        var arr3 = [];                                                                                                 // 701\n        var arr4 = [];                                                                                                 // 702\n        var arr5 = [];                                                                                                 // 703\n        var arr6 = [];                                                                                                 // 704\n        var arr7 = [];                                                                                                 // 705\n        var arr8 = [];                                                                                                 // 706\n        var arrayFinal = [];                                                                                           // 707\n        for (var i = 0; i < 10; i++) {                                                                                 // 708\n          arr1[i] = Session.get('selectedScore')[i].question;                                                          // 710\n                                                                                                                       //\n          arr2[i] = Session.get('selectedScore')[i].option1;                                                           // 712\n          arr3[i] = Session.get('selectedScore')[i].option2;                                                           // 713\n          arr4[i] = Session.get('selectedScore')[i].option3;                                                           // 714\n          arr5[i] = Session.get('selectedScore')[i].option4;                                                           // 715\n          var ans = parseInt(Session.get('selectedScore')[i].answer);                                                  // 716\n          if (ans == 1) {                                                                                              // 717\n            arr6[i] = arr2[i];                                                                                         // 718\n          } else if (ans == 2) {                                                                                       //\n            arr6[i] = arr3[i];                                                                                         // 722\n          } else if (ans == 3) {                                                                                       //\n            arr6[i] = arr4[i];                                                                                         // 726\n          } else {                                                                                                     //\n            arr6[i] = arr5[i];                                                                                         // 730\n          }                                                                                                            //\n                                                                                                                       //\n          arr7[i] = Session.get('selectedScore1')[i + 1];                                                              // 733\n                                                                                                                       //\n          arr8[i] = Session.get('selectedScore2')[i];                                                                  // 735\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i] };\n          arrayFinal.push(obj);                                                                                        // 738\n        }                                                                                                              //\n                                                                                                                       //\n        console.log(\"here....................\", arrayFinal);                                                           // 743\n                                                                                                                       //\n        console.log('final............. ' + arrayFinal[0].arr1);                                                       // 745\n        return arrayFinal;                                                                                             // 746\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getTotalScore': function () {                                                                                     // 750\n      function getTotalScore() {                                                                                       // 750\n        return Session.get('selectedScore2')[10];                                                                      // 751\n      }                                                                                                                //\n                                                                                                                       //\n      return getTotalScore;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'Group': function () {                                                                                             // 754\n      function Group() {                                                                                               // 754\n        return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';                       // 755\n      }                                                                                                                //\n                                                                                                                       //\n      return Group;                                                                                                    //\n    }(),                                                                                                               //\n    'quizTimeLeft': function () {                                                                                      // 757\n      function quizTimeLeft() {                                                                                        // 757\n        //return Session.get('quiz_time_left');                                                                        //\n        Tracker.autorun(function () {                                                                                  // 759\n          return Session.get('quiz_time_left');                                                                        // 760\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return quizTimeLeft;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getIndex: function () {                                                                                            // 764\n      function getIndex(index) {                                                                                       // 764\n        return index + 1;                                                                                              // 765\n      }                                                                                                                //\n                                                                                                                       //\n      return getIndex;                                                                                                 //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n  Accounts.ui.config({                                                                                                 // 769\n    passwordSignupFields: \"USERNAME_AND_OPTIONAL_EMAIL\"                                                                // 770\n  });                                                                                                                  //\n  /* **************************************************************************************************** */           //\n}                                                                                                                      // 7\n                                                                                                                       //\nRouter.route('/', {                                                                                                    // 775\n  name: 'home',                                                                                                        // 776\n  template: 'appBody'                                                                                                  // 777\n});                                                                                                                    //\nRouter.route('/profile', {                                                                                             // 779\n  name: 'profile1',                                                                                                    // 780\n  template: 'profile1',                                                                                                // 781\n  onBeforeAction: function () {                                                                                        // 782\n    function onBeforeAction() {                                                                                        // 782\n      if (!Meteor.userId()) {                                                                                          // 783\n        alert('Please Log In First');                                                                                  // 784\n        Router.go('home');                                                                                             // 785\n      } else {                                                                                                         //\n        this.next();                                                                                                   // 788\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/rules', {                                                                                               // 793\n  name: 'rules',                                                                                                       // 794\n  template: 'rules'                                                                                                    // 795\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/addquiz', {                                                                                             // 798\n  name: 'addquiz',                                                                                                     // 799\n  template: 'addquiz',                                                                                                 // 800\n  onBeforeAction: function () {                                                                                        // 801\n    function onBeforeAction() {                                                                                        // 801\n      if (!Meteor.userId()) {                                                                                          // 802\n        alert('Please Log In First');                                                                                  // 803\n        Router.go('home');                                                                                             // 804\n      } else if (Meteor.user().username === 'admin') {                                                                 //\n        this.next();                                                                                                   // 807\n      } else {                                                                                                         //\n        alert('You are not admin, login with admin account');                                                          // 810\n        Router.go('home');                                                                                             // 811\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/quiz', {                                                                                                // 816\n  name: 'quiz',                                                                                                        // 817\n  template: 'ApplicationLayout',                                                                                       // 818\n  onBeforeAction: function () {                                                                                        // 819\n    function onBeforeAction() {                                                                                        // 819\n      if (!Meteor.user()) {                                                                                            // 820\n        //alert('Please Log in First');                                                                                //\n        this.next();                                                                                                   // 822\n        this.render('appBody', { to: \"template1\" });                                                                   // 823\n        this.render('emptyTemplate', { to: \"template2\" });                                                             // 824\n      } else if (Meteor.user().profile.current_response_id == '') {                                                    //\n        this.next();                                                                                                   // 827\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 828\n        this.render('quizSelect', { to: \"template2\" });                                                                // 829\n      } else if ((Session.get('subscribed') === 'Subscribe' || Session.get('selectedType') === 'Group') && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0) {\n        this.next();                                                                                                   // 832\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 833\n        this.render('waiting_time', { to: \"template2\" });                                                              // 834\n      } else if (ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer') === 'submit') {\n        this.next();                                                                                                   // 839\n        if (Session.get('final_answer') === 'submit') {                                                                // 840\n          this.render('scoreCard', { to: \"template1\" });                                                               // 841\n          this.render('emptyTemplate', { to: \"template2\" });                                                           // 842\n        }                                                                                                              //\n                                                                                                                       //\n        clearInterval('updateTimeLeft');                                                                               // 845\n        clearInterval('updateWaitingTimeLeft');                                                                        // 846\n      } else {                                                                                                         //\n        this.next();                                                                                                   // 849\n        this.render('questionSelect', { to: \"template1\" });                                                            // 850\n        this.render('questionShow', { to: \"template2\" });                                                              // 851\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/ranking', {                                                                                             // 857\n  template: 'ranking',                                                                                                 // 858\n  name: 'ranking'                                                                                                      // 859\n                                                                                                                       //\n});                                                                                                                    //\n                                                                                                                       //\n/* **************************************************************************************************** */             //\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 868\n                                                                                                                       //\n  Meteor.startup(function () {                                                                                         // 870\n    process.env.MAIL_URL = \"smtp://jaygohil15@gmail.com:jgohilay10125@smtp.gmail.com:465/\";                            // 871\n    Accounts.config({ sendVerificationEmail: true, forbidClientAccountCreation: false });                              // 872\n  });                                                                                                                  //\n  Accounts.validateLoginAttempt(function (options) {                                                                   // 875\n    //console.log(Meteor.users.findOne( {username: userName} ));                                                       //\n    if (!options.allowed) {                                                                                            // 877\n      return false;                                                                                                    // 878\n    }                                                                                                                  //\n    if (options.user.emails[0].verified === true) {                                                                    // 880\n      return true;                                                                                                     // 881\n    } else {                                                                                                           //\n      alert('email-not-verified. You must verify your email address before you can log in');                           // 884\n    }                                                                                                                  //\n  });                                                                                                                  //\n                                                                                                                       //\n  var previousValue = 0;                                                                                               // 888\n  Meteor.methods({                                                                                                     // 889\n                                                                                                                       //\n    getUserByEmail: function () {                                                                                      // 891\n      function getUserByEmail(email) {                                                                                 // 891\n        return Accounts.findUserByEmail(email) !== null;                                                               // 892\n      }                                                                                                                //\n                                                                                                                       //\n      return getUserByEmail;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getResponseSet: function () {                                                                                      // 895\n      function getResponseSet() {                                                                                      // 895\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 898\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 900\n                                                                                                                       //\n        var userId = Meteor.userId();                                                                                  // 902\n                                                                                                                       //\n        console.log('User ' + userId);                                                                                 // 904\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 906\n                                                                                                                       //\n        console.log(answer);                                                                                           // 908\n        return answer;                                                                                                 // 909\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponseSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuestionSet: function () {                                                                                      // 914\n      function getQuestionSet() {                                                                                      // 914\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 916\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 918\n        var userId = Meteor.userId();                                                                                  // 919\n                                                                                                                       //\n        var currentQuiz = response.quizID;                                                                             // 922\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 924\n        var quizQuestions = correctOption.quiz;                                                                        // 925\n        return quizQuestions;                                                                                          // 926\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuestionSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getActualScore: function () {                                                                                      // 930\n      function getActualScore() {                                                                                      // 930\n        var _$set;                                                                                                     //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 931\n        var eachScore = [];                                                                                            // 932\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 934\n        var userId = Meteor.userId();                                                                                  // 935\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 937\n        //   var answer = response.answers.userId;                                                                     //\n        var currentQuiz = response.quizID;                                                                             // 930\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 941\n        var quizQuestions = correctOption.quiz;                                                                        // 942\n                                                                                                                       //\n        var cor_array = [];                                                                                            // 944\n        var score = 0;                                                                                                 // 945\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 947\n          var correct = correctOption.quiz[i];                                                                         // 948\n          var cor = correct.answer;                                                                                    // 949\n          var p = 'option' + cor;                                                                                      // 950\n                                                                                                                       //\n          var cor = 'option' + cor;                                                                                    // 952\n          cor_array[i] = eval('correct.' + p);                                                                         // 953\n          console.log(cor_array[i]);                                                                                   // 954\n        }                                                                                                              //\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 959\n          if (answer[i + 1] === cor_array[i]) {                                                                        // 961\n            eachScore[i] = 10;                                                                                         // 963\n            score += 10;                                                                                               // 964\n          } else {                                                                                                     //\n            eachScore[i] = 0;                                                                                          // 969\n          }                                                                                                            //\n        }                                                                                                              //\n                                                                                                                       //\n        ThisResponse.update({ _id: response._id }, { $set: (_$set = {}, _$set['score.' + userId] = score, _$set) });   // 973\n        console.log(ThisResponse.findOne(response._id).score);                                                         // 974\n        eachScore[10] = score;                                                                                         // 975\n                                                                                                                       //\n        Meteor.call('saveStats');                                                                                      // 977\n        // console.log('b..............'+eachScore[2]);                                                                //\n        //Session.set('score', score);                                                                                 //\n        //console.log(response.score.userId);                                                                          //\n                                                                                                                       //\n        return eachScore;                                                                                              // 930\n      }                                                                                                                //\n                                                                                                                       //\n      return getActualScore;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    saveStats: function () {                                                                                           // 986\n      function saveStats() {                                                                                           // 986\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 987\n        var response_doc = ThisResponse.findOne(responseID);                                                           // 988\n        // var user_id =                                                                                               //\n        var category = ThisQuiz.findOne(response_doc.quizID).category;                                                 // 986\n        // for (var i=0 ; i<user_ids.length ; i++){                                                                    //\n        // var id = user_ids[i];                                                                                       //\n        // var user_doc = Meteor.users.findOne(id);                                                                    //\n        // var rank = getRanking                                                                                       //\n                                                                                                                       //\n        var new_stat = { quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID };\n        // console.log(new_stat);                                                                                      //\n        if (Meteor.user().stats) Meteor.users.update(Meteor.user(), { $push: { stats: new_stat } });else Meteor.users.update(Meteor.user(), { $set: { stats: [new_stat] } });\n        // Meteor.users.update(id, { $push: { stats: new_stat }});                                                     //\n        // }                                                                                                           //\n      }                                                                                                                // 986\n                                                                                                                       //\n      return saveStats;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuiz: function () {                                                                                             // 1009\n      function getQuiz() {                                                                                             // 1009\n        if (Meteor.user()) {                                                                                           // 1010\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 1011\n            var responseID = Meteor.user().profile.current_response_id;                                                // 1012\n            var quizID = ThisResponse.findOne(responseID).quizID;                                                      // 1013\n            var randomQuiz = ThisQuiz.findOne(quizID);                                                                 // 1014\n            var quizQuestions = randomQuiz.quiz;                                                                       // 1015\n            for (var i = 0; i < quizQuestions.length; i++) {                                                           // 1016\n              delete quizQuestions[i][\"answer\"];                                                                       // 1017\n            }                                                                                                          //\n            return quizQuestions;                                                                                      // 1019\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRandomQuizID: function () {                                                                                     // 1025\n      function getRandomQuizID(category) {                                                                             // 1025\n        var randomQuiz = ThisQuiz.find({ category: category }).fetch();                                                // 1026\n        var index = Math.floor(Math.random() * randomQuiz.length);                                                     // 1027\n        if (index === previousValue) {                                                                                 // 1028\n          index = (index + 1) % randomQuiz.length;                                                                     // 1029\n          previousValue = index;                                                                                       // 1030\n        }                                                                                                              //\n                                                                                                                       //\n        randomQuiz = randomQuiz[index];                                                                                // 1033\n        return randomQuiz._id;                                                                                         // 1034\n      }                                                                                                                //\n                                                                                                                       //\n      return getRandomQuizID;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createResponse: function () {                                                                                      // 1037\n      function createResponse(type, category) {                                                                        // 1037\n        var _answers;                                                                                                  //\n                                                                                                                       //\n        if (!Meteor.userId()) {                                                                                        // 1039\n          throw new Meteor.Error('not-authorized');                                                                    // 1039\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = Meteor.call('getRandomQuizID', category);                                                         // 1041\n                                                                                                                       //\n        var responseID = ThisResponse.insert({                                                                         // 1043\n          userID: [Meteor.userId()],                                                                                   // 1044\n          category: category,                                                                                          // 1045\n          quizID: quizID,                                                                                              // 1046\n          type: type,                                                                                                  // 1047\n          answers: (_answers = {}, _answers[Meteor.userId()] = {}, _answers),                                          // 1048\n          time_left: 60,                                                                                               // 1049\n          waiting_time: 60,                                                                                            // 1050\n          score: {},                                                                                                   // 1051\n          conductedAt: new Date()                                                                                      // 1052\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 1055\n      }                                                                                                                //\n                                                                                                                       //\n      return createResponse;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setResponse: function () {                                                                                         // 1058\n      function setResponse(question, answer) {                                                                         // 1058\n        var _$set2;                                                                                                    //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 1059\n        var user = Meteor.userId();                                                                                    // 1060\n        ThisResponse.update(responseID, { $set: (_$set2 = {}, _$set2['answers.' + user + '.' + question] = answer, _$set2) });\n      }                                                                                                                //\n                                                                                                                       //\n      return setResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getResponse: function () {                                                                                         // 1064\n      function getResponse(question) {                                                                                 // 1064\n        if (Meteor.user()) {                                                                                           // 1065\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 1066\n            var responseID = Meteor.user().profile.current_response_id;                                                // 1067\n            var user = Meteor.userId();                                                                                // 1068\n            var response = ThisResponse.findOne(responseID).answers;                                                   // 1069\n            var answer = eval('response.' + user + '[' + question + ']');                                              // 1070\n            return answer;                                                                                             // 1071\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setTimer: function () {                                                                                            // 1076\n      function setTimer(new_time) {                                                                                    // 1076\n        if (Meteor.user()) {                                                                                           // 1077\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 1078\n            var responseID = Meteor.user().profile.current_response_id;                                                // 1079\n            var response = ThisResponse.findOne(responseID);                                                           // 1080\n            if (response.time_left > new_time) ThisResponse.update(response._id, { $set: { time_left: new_time } });   // 1081\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return setTimer;                                                                                                 //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getTimer: function () {                                                                                            // 1087\n      function getTimer() {                                                                                            // 1087\n        if (Meteor.user()) {                                                                                           // 1088\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 1089\n            var responseID = Meteor.user().profile.current_response_id;                                                // 1090\n            return ThisResponse.findOne(responseID).time_left;                                                         // 1091\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getTimer;                                                                                                 //\n    }(),                                                                                                               //\n    endquiz: function () {                                                                                             // 1096\n      function endquiz(id) {                                                                                           // 1096\n        Meteor.users.update({ _id: id }, { $set: { \"profile.current_response_id\": \"\" } });                             // 1097\n      }                                                                                                                //\n                                                                                                                       //\n      return endquiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setWaitingTimer: function () {                                                                                     // 1100\n      function setWaitingTimer(new_time) {                                                                             // 1100\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 1101\n        var response = ThisResponse.findOne(responseID);                                                               // 1102\n        if (response.waiting_time > new_time) ThisResponse.update(response._id, { $set: { waiting_time: new_time } });\n      }                                                                                                                //\n                                                                                                                       //\n      return setWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getWaitingTimer: function () {                                                                                     // 1107\n      function getWaitingTimer() {                                                                                     // 1107\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 1108\n        return ThisResponse.findOne(responseID).waiting_time;                                                          // 1109\n      }                                                                                                                //\n                                                                                                                       //\n      return getWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'setGroupResponseId': function () {                                                                                // 1112\n      function setGroupResponseId(responseID) {                                                                        // 1112\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 1113\n      }                                                                                                                //\n                                                                                                                       //\n      return setGroupResponseId;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRanking: function () {                                                                                          // 1116\n      function getRanking() {                                                                                          // 1116\n        //var responseID = 'vxprdPF2CG9jdvRQZ';                                                                        //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 1118\n        var response = ThisResponse.findOne(responseID);                                                               // 1119\n        var scores = ThisResponse.findOne(response._id).score;                                                         // 1120\n        var temp = {};                                                                                                 // 1121\n                                                                                                                       //\n        console.log(scores);                                                                                           // 1123\n                                                                                                                       //\n        for (var key in meteorBabelHelpers.sanitizeForInObject(scores)) {                                              // 1125\n          temp[Meteor.users.findOne(key).username] = scores[key];                                                      // 1126\n          console.log('Hello.................' + temp[Meteor.users.findOne(key).emails[0].address]);                   // 1127\n        }                                                                                                              //\n                                                                                                                       //\n        scores = temp;                                                                                                 // 1130\n                                                                                                                       //\n        var sortable = [];                                                                                             // 1132\n        for (var entry in meteorBabelHelpers.sanitizeForInObject(scores)) {                                            // 1133\n          sortable.push([entry, scores[entry]]);                                                                       // 1134\n        }sortable.sort(function (a, b) {                                                                               //\n          return b[1] - a[1];                                                                                          // 1135\n        });                                                                                                            //\n        console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]                                        // 1136\n        console.log(sortable[0][0] + ' 00');                                                                           // 1116\n        console.log(sortable[0][1] + ' 01');                                                                           // 1138\n                                                                                                                       //\n        var ranks = [];                                                                                                // 1140\n        var arr1 = [];                                                                                                 // 1141\n        var arr2 = [];                                                                                                 // 1142\n        var arr3 = [];                                                                                                 // 1143\n        arr1[0] = 1;                                                                                                   // 1144\n        var count = 1;                                                                                                 // 1145\n        for (var i = 0; i < sortable.length; i++) {                                                                    // 1146\n          arr2[i] = sortable[i][0];                                                                                    // 1147\n          arr3[i] = sortable[i][1];                                                                                    // 1148\n          if (i > 0) {                                                                                                 // 1149\n            if (arr3[i] === arr3[i - 1]) {                                                                             // 1150\n              arr1[i] = count;                                                                                         // 1151\n            } else {                                                                                                   //\n              count = i + 1;                                                                                           // 1155\n              arr1[i] = count;                                                                                         // 1156\n            }                                                                                                          //\n          }                                                                                                            //\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i] };                                                   // 1160\n          ranks.push(obj);                                                                                             // 1161\n        }                                                                                                              //\n                                                                                                                       //\n        return ranks;                                                                                                  // 1164\n      }                                                                                                                //\n                                                                                                                       //\n      return getRanking;                                                                                               //\n    }(),                                                                                                               //\n    getProfileData: function () {                                                                                      // 1167\n      function getProfileData() {                                                                                      // 1167\n        var userId = Meteor.userId();                                                                                  // 1168\n        var user = Meteor.users.findOne(userId);                                                                       // 1169\n        var username = user.username;                                                                                  // 1170\n        var email = user.emails[0].address;                                                                            // 1171\n        var created = user.createdAt;                                                                                  // 1172\n        var stats = user.stats;                                                                                        // 1173\n        var obj = { username: username, email: email, created: created, stats: stats };                                // 1174\n        return obj;                                                                                                    // 1175\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    addQuizFunction: function () {                                                                                     // 1178\n      function addQuizFunction(creater, category, que_array, conductQuiz, quizTime) {                                  // 1178\n                                                                                                                       //\n        // Make sure the user is logged in and is admin before inserting a task                                        //\n        if (!Meteor.userId()) {                                                                                        // 1181\n          throw new Meteor.Error(\"not-authorized\");                                                                    // 1182\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = ThisQuiz.insert({                                                                                 // 1185\n          quizCreater: creater,                                                                                        // 1186\n          category: category,                                                                                          // 1187\n          createdAt: new Date(),                                                                                       // 1188\n          quiz: que_array                                                                                              // 1189\n        });                                                                                                            //\n                                                                                                                       //\n        if (conductQuiz == 'yes') Meteor.call('createHeadrushResponse', quizID, quizTime, category);                   // 1192\n      }                                                                                                                //\n                                                                                                                       //\n      return addQuizFunction;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createHeadrushResponse: function () {                                                                              // 1196\n      function createHeadrushResponse(quizID, quizTime, category) {                                                    // 1196\n        ThisResponse.insert({                                                                                          // 1197\n          userID: [],                                                                                                  // 1198\n          quizID: quizID,                                                                                              // 1199\n          type: 'Group',                                                                                               // 1200\n          category: category,                                                                                          // 1201\n          answers: {},                                                                                                 // 1202\n          time_left: 1200,                                                                                             // 1203\n          waiting_time: 600,                                                                                           // 1204\n          score: {},                                                                                                   // 1205\n          conductedByHeadRush: true,                                                                                   // 1206\n          conductedAt: new Date(quizTime)                                                                              // 1207\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return createHeadrushResponse;                                                                                   //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n}                                                                                                                      //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./ind_quiz.html\");\nrequire(\"./ind_quiz.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/ind_quiz.js"],"names":[],"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","file":"/app.js","sourcesContent":["ThisQuiz = new Mongo.Collection(\"quizzes\");\r\nThisResponse = new Mongo.Collection(\"responses\");\r\nvar q=0;\r\nRouter.configure({\r\n  layoutTemplate: 'navigation'\r\n});\r\nif (Meteor.isClient) {\r\n      var updateTimeLeft;\r\n      Template.signupForm.events({\r\n    'submit #signup-form': function(e,t){\r\n     //  e.preventDefault();\r\n     //  if(Meteor.users.findOne({username: $('#signup-username').val()}) ) {\r\n     //    alert('Username already exists');\r\n     //  } \r\n     //  else {\r\n     //  var input=t.find('#signup-password').value;\r\n     //  var input2=t.find('#signup-confirm').value;\r\n     //  if(input.length<4 || input.length> 8)  \r\n     //      {   \r\n     //      alert(\"Please input the password between \" +4+ \" and \" +8+ \" characters\");  \r\n     //            return false;  \r\n     //      }  \r\n     //    else{\r\n     //        if(input!=input2){\r\n     //          alert(\"Password Mismatch\");\r\n     //        }\r\n\r\n     //        else{\r\n     //  Accounts.createUser({\r\n     //    username:t.find('#signup-username').value,\r\n     //    password:t.find('#signup-password').value,\r\n     //    email:t.find('#signup-email').value,\r\n     //    stats: {},\r\n     //    profile:{\r\n     //      confirm:t.find('#signup-confirm').value,\r\n     //      current_response_id:\"\"\r\n     //    },\r\n     //    stats:[]\r\n     //  });\r\n      \r\n     //  t.find('#signup-username').value = \"\";\r\n     //  t.find('#signup-password').value = \"\";\r\n     //  t.find('#signup-email').value = \"\";\r\n     //  t.find('#signup-confirm').value = \"\";\r\n    \r\n     //      }\r\n     //      Meteor.logout();\r\n     //  }\r\n     // }\r\n\r\n     e.preventDefault();\r\n        var username = $('#signup-username').val();\r\n        var email = $('#signup-email').val();\r\n        var password = $('#signup-password').val();\r\n        var confirm = $('#signup-confirm').val();\r\n        if(Meteor.users.findOne({username: username})) {\r\n          alert('Username already exists');\r\n        }\r\n        else  {\r\n          //alert('Email already exists');\r\n          Meteor.call('getUserByEmail', email, function(error,result) {\r\n            console.log(result);\r\n              if(result) {\r\n                console.log('Email not unique');\r\n                alert('Email already exists');\r\n              }\r\n              else {\r\n                if(password.length < 4 || password.length > 15) {\r\n                  alert('Please enter a password of length 4-15 characters');\r\n                }\r\n              else if(password !== confirm) {\r\n                  alert('Passwords do not match');\r\n              }\r\n              else {\r\n              Accounts.createUser({\r\n              username:$('#signup-username').val(),\r\n              password:$('#signup-password').val(),\r\n              email:$('#signup-email').val(),\r\n              stats: {},\r\n              profile:{\r\n                confirm:$('#signup-confirm').val(),\r\n                current_response_id:\"\"\r\n              },\r\n              stats:[]\r\n              });\r\n              $('#signup-username').val('');\r\n              $('#signup-password').val('');\r\n              $('#signup-email').val('');\r\n              $('#signup-confirm').val('');\r\n              }\r\n              }\r\n          });\r\n        }\r\n      }\r\n  });\r\n\r\n//  Template.loginForm.events({\r\n//     'submit #login-form': function(e,t) {\r\n//       e.preventDefault();\r\n\r\n//        var unam=t.find('#login-username').value;\r\n//        var password=t.find('#login-password').value;\r\n     \r\n//          Meteor.loginWithPassword(unam,password);\r\n//          Router.go('/quiz');\r\n//     }\r\n// });\r\n\r\n\r\n  var quizQuestions = [];\r\n\r\n  changeAnswer = function(question){\r\n    console.log('In change answer');\r\n     Meteor.call(\"getResponse\", question, function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        if (result) {\r\n          console.log(result);\r\n          $('input[name=questionAnswer][value=\"' + result + '\"]').prop('checked',true);          \r\n        }\r\n        else\r\n          $('input[name=questionAnswer]').prop('checked',false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nTemplate.addquiz.onRendered(function() {\r\n$(document).ready(function() {\r\n$('#quizTimeDiv').hide();   \r\n        $(\"input[name=conductQuiz]\").click(function() {\r\n            var val = $(this).val();\r\n            if (val == 'yes'){\r\n              $('#quizTimeDiv').show();\r\n              $('#quizTime').prop('required',true);\r\n            }\r\n            else{\r\n              $('#quizTimeDiv').hide();\r\n              $('#quizTime').removeAttr('required');\r\n            }\r\n        });\r\n      });\r\n});\r\n\r\n\r\n  Template.addquiz.events({\r\n    \"submit .quizEntry\": function (event) {\r\n      event.preventDefault();\r\n      var que_array = new Array();\r\n      var creater =  event.target.creater.value;\r\n      var category =  event.target.category.value;\r\n      var conductQuiz = event.target.conductQuiz.value;\r\n      var quizTime = event.target.quizTime.value + ':00+05:30';\r\n\r\n      for (var i = 1; i <= 10; i++) {\r\n        eval(\"var que\" + \"= event.target.question\" + i + \".value\");\r\n        eval(\"var ans\" + \"= event.target.question\" + i + \"_answer.value\");\r\n        for (var op = 1; op <= 4; op++) {\r\n          eval(\"var opt\" + op + \"= event.target.question\" + i + \"_option\" + op + \".value\");\r\n        }\r\n        que_array.push({number: i, question: que, option1: opt1, option2: opt2, option3: opt3, option4: opt4, answer: ans});\r\n      }\r\n\r\n      Meteor.call(\"addQuizFunction\", creater, category, que_array, conductQuiz, quizTime);\r\n      event.target.reset();\r\n    }\r\n  });\r\n\r\n\r\n  Template.questionSelect.onCreated( function() {\r\n    this.time_left = new ReactiveVar(1200);\r\n    Session.clear('updateTimeLeft');\r\n  });\r\n\r\n  Template.scoreCard.onCreated(function() {\r\n    this.time_left = new ReactiveVar(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left);\r\n  });\r\n  Template.waiting_time.onCreated( function() {\r\n    this.time_left = new ReactiveVar(300);\r\n    Session.clear('updateWaitingTimeLeft');\r\n  });\r\n\r\n  Template.scoreCard.onRendered(function() {\r\n    if(Session.get('selectedType') === 'Individual') {\r\n      $('#home').click(function() {\r\n        console.log('home clicked');\r\n        Meteor.users.update( Meteor.userId(), {$set: {\"profile.current_response_id\" : ''}});\r\n        Session.clear('final_answer');\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n        Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n        Session.clear('subscribed');\r\n      });\r\n    }\r\n  });\r\n\r\n  Template.ranking.onRendered(function() {\r\n    $('#home').click(function() {\r\n        console.log('home clicked');\r\n        Meteor.users.update( Meteor.userId(), {$set: {\"profile.current_response_id\" : ''}});\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n        Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n        Session.clear('final_answer');\r\n        Session.clear('subscribed');\r\n      });\r\n  });\r\n  Template.questionSelect.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getQuiz\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        quizQuestions = result;\r\n        Session.set('selectedQuestion', '1');\r\n        changeAnswer('1');\r\n      }\r\n    });\r\n\r\n\r\n\r\n    Meteor.call(\"getTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);\r\n  \r\n  });\r\n\r\n  Template.questionSelect.onDestroyed(function() {\r\n \r\n    \r\n    Meteor.clearInterval('updateTimeLeft');\r\n  });\r\n\r\n  Template.waiting_time.onDestroyed(function() {\r\n  \r\n    Meteor.clearInterval('updateWaitingTimeLeft');\r\n    Session.clear('subscribed');\r\n  });\r\n\r\n  Template.waiting_time.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getWaitingTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateWaitingTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setWaitingTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);\r\n    \r\n\r\n  });\r\n  \r\n\r\n  Template.questionSelect.events({\r\n    'click input[name=questionNumber]': function( event,template ) {\r\n      Session.set('selectedQuestion', event.target.value);\r\n      $('input[name=questionNumber]').attr(\"style\", \"background-color:blue\");\r\n      $(event.target).attr(\"style\", \"background-color:red\");\r\n      console.log(event.target.value);\r\n      changeAnswer(event.target.value);\r\n    }\r\n  });\r\n\r\n  Template.online.helpers({\r\n\r\n    'totalHeadrushQuizzes': function(){\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        \r\n        if(!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || (groupQuizzes[i].conductedAt - new Date()) < 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;   \r\n        }\r\n    }\r\n    return groupQuizzes.length > 0;\r\n    },\r\n\r\n    'showHeadRushQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n       \r\n        if(!groupQuizzes[i].conductedByHeadRush || groupQuizzes[i].waiting_time <= 0 || (groupQuizzes[i].conductedAt - new Date()) < 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;   \r\n        }else {\r\n        groupQuizzes[i].date = groupQuizzes[i].conductedAt.toDateString();\r\n        groupQuizzes[i].time = groupQuizzes[i].conductedAt.toLocaleTimeString();\r\n        groupQuizzes[i].subscribe = Math.abs(groupQuizzes[i].conductedAt - new Date())/(1000*60) < 10;\r\n      }\r\n    }\r\n    return groupQuizzes;\r\n  },\r\n\r\n    'getUserName': function(userID) {\r\n      return Meteor.users.findOne(userID).username;\r\n    },\r\n\r\n    'showGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n       \r\n        if(groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n         \r\n        }\r\n        else {\r\n          groupQuizzes[i].username = Meteor.users.findOne(groupQuizzes[i].userID[0]).username;\r\n          console.log(groupQuizzes[i].username);\r\n        }\r\n        // if(groupQuizzes[i].conductedByHeadRush){\r\n        //   headrushQuiz = groupQuizzes[i];\r\n        //   groupQuizzes.splice(i, 1);\r\n        //   i=-1;\r\n        // }\r\n    }\r\n    return groupQuizzes;\r\n  },\r\n    'totalGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        \r\n        if(groupQuizzes[i].waiting_time <= 0 || groupQuizzes[i].conductedByHeadRush) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n         \r\n        }\r\n    }\r\n    return groupQuizzes.length > 0;\r\n    }\r\n});\r\n\r\n  Template.online.events({\r\n    'click input': function() {\r\n      event.preventDefault();\r\n     \r\n      var responseID = $(event.target).attr('id');\r\n      var subscribed = $(event.target).attr('value');\r\n      console.log(subscribed);\r\n      Session.setPersistent('subscribed', subscribed);\r\n     \r\n      Meteor.call('setGroupResponseId', responseID);\r\n    }\r\n  });\r\n\r\n  Template.questionSelect.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n     $('.scoreCard').trigger('click');\r\n      }\r\n      Session.update('quiz_time_left',minutes+\":\"+seconds);\r\n      Session.makePersistent('quiz_time_left');\r\n      return minutes+\":\"+seconds;\r\n    },\r\n     'ended': function() {\r\n       return Session.get('timeLeft') <= 0;\r\n     }\r\n  }); \r\n\r\n  Template.waiting_time.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      }\r\n      return minutes+\":\"+seconds;\r\n    }\r\n  }); \r\n\r\n  Template.navigation.helpers({\r\n    'user': function() {\r\n      console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");\r\n        return Meteor.users.find({_id: Meteor.userId()});\r\n    },\r\n\r\n    'isAdmin': function() {\r\n      return Meteor.users.findOne(Meteor.userId()).username === 'admin';\r\n    }\r\n  });\r\n\r\n  Template.navigation.events({\r\n    'click #logoutbtn': function() {\r\n     Meteor.call('endquiz',Meteor.userId());\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     console.log();\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      Meteor.logout();\r\n    },\r\n\r\n    'click #loginbtn' : function(e, t){\r\n      // e.preventDefault();\r\n \r\n      // console.log('hello');\r\n      //  var unam=t.find('#login-username').value;\r\n      //  var password=t.find('#login-password').value;\r\n     \r\n      //    Meteor.loginWithPassword(unam,password);\r\n      //    Router.go('/quiz');\r\n\r\n      e.preventDefault();\r\n      var unam=$('#login-username').val();\r\n      var password=$('#login-password').val();\r\n      // if(!Meteor.users.findOne({username: unam})) {\r\n      //   alert('Username does not exist');\r\n      // }\r\n      Meteor.loginWithPassword(unam, password, function(error, result) {\r\n        if(error) {\r\n          if(error.reason === 'Incorrect password')alert('Incorrect Password');\r\n          else if(error.reason === 'User not found')alert('User not Found');\r\n        }\r\n        else {\r\n          Router.go('/quiz');\r\n        }\r\n      });\r\n      console.log('hello');\r\n\r\n    },\r\n     \r\n     'keypress input': function(e, t) {\r\n      if(e.which === 13) {\r\n      $('#loginbtn').trigger('click');  \r\n      }\r\n    },\r\n\r\n     'click #profileButton': function(){\r\n      Meteor.call(\"getProfileData\", function(error, result){\r\n      if (error){\r\n        //console.log(\"Chu\");\r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.set('profileData', result);\r\n        Router.go('profile');\r\n       //console.log(Session.get('selectedScore1'));\r\n       $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      }\r\n    });\r\n},\r\n\r\n    'click #ruleButton': function() {\r\n       $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      Router.go('rules');\r\n\r\n    },\r\n\r\n    'click #home': function(){\r\n      $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      Router.go('quiz');\r\n    },\r\n\r\n    'click #addquiz': function(){\r\n      $('#links li').removeClass('active');\r\n       $(this).parent().addClass('active');\r\n      Router.go('addquiz');\r\n\r\n    }\r\n\r\n      });\r\n\r\n   Template.profile1.helpers({\r\n    'getProfileData': function(){\r\n      return Session.get('profileData');\r\n    },\r\n\r\n    'getStatsIndividual': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Individual'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n          count++;\r\n        }\r\n      }\r\n      Session.setPersistent('arrayIndLen',array.length);\r\n      return array;\r\n    },\r\n\r\n    'getStatsGroup': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Group'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n          count++;\r\n        }\r\n      }\r\n      Session.setPersistent('arrayGrpLen',array.length);\r\n      return array;\r\n    },\r\n\r\n    'getLengths' : function(){\r\n        var obj = {a1: Session.get('arrayIndLen')>0, a2: Session.get('arrayGrpLen')>0};\r\n        console.log(obj+' ...........obj');\r\n        return obj;\r\n    }\r\n  });\r\n\r\n  /* **************************************************************************************************** */\r\n  \r\n  Template.questionShow.events({\r\n    'click input': function( event,template ) {\r\n      Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')) , event.target.value );\r\n    },\r\n   \r\n     'click #onsubmitbutton' :function(){\r\n\r\n      var final_answer = $('#onsubmitbutton').attr('value');\r\n      Session.setPersistent('final_answer',final_answer);\r\n      console.log(\"going Here\");\r\n      Meteor.call(\"getQuestionSet\", function(error, result){\r\n      if (error){\r\n       \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.setPersistent('selectedScore', result);\r\n        console.log(Session.get('selectedScore'));     \r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getResponseSet\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.setPersistent('selectedScore1', result);\r\n       console.log(Session.get('selectedScore1'));\r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getActualScore\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.setPersistent('selectedScore2', result);\r\n        // console.log(Session.get('selectedScore2'));\r\n        // console.log(\"aaasssssss\"+ Session.get('selectedScore2'));\r\n      }\r\n    });\r\n      Router.go('scoreCard');\r\n  }\r\n  }); \r\n\r\n  Template.questionShow.helpers({\r\n    questionData: function() {\r\n\r\n      return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];\r\n    },\r\n\r\n   'showSubmitButton': function() {\r\n    return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;  \r\n   }\r\n  });   \r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.quizSelect.events({  \r\n    \"submit .quizParameters\": function (event) {\r\n      event.preventDefault();\r\n      var selectedType =  event.target.quizType.value;\r\n      var selectedCategory =  event.target.quizCategory.value;\r\n      if (selectedType === '')\r\n        alert(\"Select quiz type.\");\r\n      else{\r\n      Session.setPersistent('selectedType', selectedType);\r\n      Meteor.call(\"createResponse\", selectedType, selectedCategory);\r\n    }\r\n    }\r\n\r\n  });\r\n\r\n Template.scoreCard.events({  \r\n   \r\n   \r\n\r\n    'click #onsubmitbutton' :function(event){\r\n      if(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {\r\n        event.preventDefault();\r\n        alert('Please wait for the quiz to complete to see the leaderboard');\r\n      }\r\n      else {\r\n        Meteor.call(\"getRanking\", function(error, result){\r\n          if (error){\r\n             \r\n            console.log(error.reason);\r\n        \r\n          }\r\n          else {\r\n        \r\n            Session.set('rank', result);\r\n            console.log(Session.get('rank')+' ............herep');     \r\n            Router.go('ranking');\r\n          }\r\n        });\r\n      }\r\n      },\r\n\r\n      'click #home1': function(){\r\n        $(\"#home\").trigger('click');\r\n      }\r\n\r\n  });\r\n\r\n\r\nTemplate.ranking.events({\r\n  'click #home2': function(){\r\n        $(\"#home\").trigger('click');\r\n      }  \r\n});\r\n\r\n Template.ranking.helpers({\r\n  'userRanking' : function(){\r\n   return Session.get('rank');\r\n  }  \r\n});\r\n\r\n  Template.scoreCard.helpers({\r\n\r\n    compareString: function(a ,b){\r\n      return a==b;\r\n    },\r\n \r\n  questionData: function(){\r\n   \r\n     var arr1=[];\r\n    var arr2=[];\r\n    var arr3=[];\r\n    var arr4=[];\r\n    var arr5=[];\r\n     var arr6=[];\r\n     var arr7 = [];\r\n     var arr8=[];\r\n     var arrayFinal = [];\r\n    for(var i=0;i<10;i++)\r\n    {\r\n      arr1[i]=Session.get('selectedScore')[i].question;\r\n \r\n      arr2[i]=Session.get('selectedScore')[i].option1;\r\n      arr3[i]=Session.get('selectedScore')[i].option2;\r\n      arr4[i]=Session.get('selectedScore')[i].option3;\r\n      arr5[i]=Session.get('selectedScore')[i].option4;\r\n      var ans = parseInt(Session.get('selectedScore')[i].answer);\r\n      if(ans==1){\r\n        arr6[i] = arr2[i];\r\n      }\r\n\r\n      else if(ans==2){\r\n        arr6[i] = arr3[i];\r\n      }\r\n\r\n      else if(ans==3){\r\n        arr6[i] = arr4[i];\r\n      }\r\n\r\n      else{\r\n        arr6[i] = arr5[i];\r\n      }\r\n  \r\n       arr7[i]=Session.get('selectedScore1')[i+1];\r\n\r\n       arr8[i]=Session.get('selectedScore2')[i];\r\n\r\n       var obj  = {arr1: arr1[i] , arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i]};\r\n       arrayFinal.push(obj);\r\n\r\n\r\n     }\r\n\r\n     console.log(\"here....................\",arrayFinal);\r\n  \r\n     console.log('final............. '+arrayFinal[0].arr1);\r\n     return arrayFinal;\r\n   \r\n  },\r\n\r\n  'getTotalScore': function() {\r\n    return Session.get('selectedScore2')[10];\r\n  },\r\n\r\n  'Group': function() {\r\n    return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';\r\n  },\r\n  'quizTimeLeft' : function(){\r\n    //return Session.get('quiz_time_left');\r\n    Tracker.autorun(function() {\r\n      return Session.get('quiz_time_left');\r\n    });\r\n  },\r\n\r\n  getIndex: function(index) {\r\n    return index + 1;\r\n  }\r\n\r\n  }); \r\nAccounts.ui.config({\r\n    passwordSignupFields:\"USERNAME_AND_OPTIONAL_EMAIL\"\r\n  });\r\n  /* **************************************************************************************************** */\r\n}\r\n\r\nRouter.route('/', {\r\n  name: 'home',\r\n  template: 'appBody'\r\n});\r\nRouter.route('/profile', {\r\n  name: 'profile1',\r\n  template: 'profile1',\r\n  onBeforeAction: function() {\r\n    if(!Meteor.userId()) {\r\n      alert('Please Log In First');\r\n      Router.go('home');\r\n    }\r\n    else {\r\n      this.next();\r\n    }\r\n  }\r\n});\r\n\r\nRouter.route('/rules', {\r\n  name: 'rules',\r\n  template: 'rules'\r\n});\r\n\r\nRouter.route('/addquiz', {\r\n  name: 'addquiz',\r\n  template: 'addquiz',\r\n  onBeforeAction: function() {\r\n    if(!Meteor.userId()) {\r\n      alert('Please Log In First');\r\n      Router.go('home');\r\n    }\r\n    else if(Meteor.user().username === 'admin'){\r\n      this.next();\r\n    }\r\n    else {\r\n      alert('You are not admin, login with admin account');\r\n      Router.go('home');\r\n    }\r\n  }\r\n});\r\n\r\nRouter.route('/quiz',{\r\n  name: 'quiz',\r\n  template: 'ApplicationLayout',\r\n  onBeforeAction: function() {\r\n  if (! Meteor.user()) {\r\n    //alert('Please Log in First');\r\n    this.next(); \r\n    this.render('appBody', {to:\"template1\"});\r\n    this.render('emptyTemplate', {to:\"template2\"}); \r\n  }\r\n  else if (Meteor.user().profile.current_response_id == '') {\r\n    this.next();\r\n    this.render('emptyTemplate', {to:\"template1\"});\r\n    this.render('quizSelect', {to:\"template2\"});\r\n  }\r\n  else if((Session.get('subscribed') === 'Subscribe' || (Session.get('selectedType') === 'Group')) && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0)  {\r\n       this.next();\r\n       this.render('emptyTemplate', {to:\"template1\"});\r\n       this.render('waiting_time', {to:\"template2\"});\r\n        \r\n  }\r\n\r\n  else if(ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer')==='submit'){\r\n    this.next();\r\n    if(Session.get('final_answer')==='submit') {\r\n      this.render('scoreCard',{to:\"template1\"});\r\n      this.render('emptyTemplate', {to:\"template2\"});\r\n   }\r\n   \r\n     clearInterval('updateTimeLeft');    \r\n     clearInterval('updateWaitingTimeLeft');\r\n  }\r\n  else{\r\n      this.next();\r\n    this.render('questionSelect', {to:\"template1\"});\r\n     this.render('questionShow', {to:\"template2\"});\r\n\r\n  }\r\n }\r\n});\r\n\r\nRouter.route('/ranking',{\r\n  template: 'ranking',\r\n  name : 'ranking'\r\n\r\n});\r\n\r\n\r\n\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nif(Meteor.isServer){\r\n\r\n  Meteor.startup(function () {\r\n   process.env.MAIL_URL=\"smtp://jaygohil15@gmail.com:jgohilay10125@smtp.gmail.com:465/\"\r\n   Accounts.config({sendVerificationEmail: true, forbidClientAccountCreation: false});\r\n    \r\n  });\r\n  Accounts.validateLoginAttempt(function(options) {\r\n  //console.log(Meteor.users.findOne( {username: userName} ));\r\n  if (!options.allowed) {\r\n        return false;\r\n  }\r\n  if (options.user.emails[0].verified === true) {\r\n        return true;\r\n  } \r\n  else {\r\n        alert('email-not-verified. You must verify your email address before you can log in');\r\n  }\r\n});\r\n\r\nvar previousValue = 0;\r\nMeteor.methods({\r\n\r\n  getUserByEmail: function(email) {\r\n    return Accounts.findUserByEmail(email) !== null;\r\n  },\r\n\r\n  getResponseSet: function (){\r\n    \r\n\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n \r\n  var response = ThisResponse.findOne(responseID);\r\n \r\n  var userId = Meteor.userId();\r\n \r\n  console.log('User '+userId);\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n\r\nconsole.log(answer);\r\n  return answer;\r\n\r\n\r\n  },\r\n\r\n  getQuestionSet: function(){\r\n  \r\n   var responseID = Meteor.user().profile.current_response_id;\r\n\r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n \r\n   var currentQuiz=response.quizID;\r\n\r\n  var correctOption=(ThisQuiz.findOne(currentQuiz));\r\n  var quizQuestions = correctOption.quiz;\r\n  return quizQuestions;\r\n  \r\n},\r\n\r\n  getActualScore: function(){\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n  var eachScore = [];\r\n  \r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n//   var answer = response.answers.userId;\r\n   var currentQuiz = response.quizID;\r\n\r\n  var correctOption= ThisQuiz.findOne(currentQuiz);\r\n  var quizQuestions = correctOption.quiz;\r\n \r\n  var cor_array=[];\r\n  var score=0;\r\n\r\n  for(var i=0;i<10;i++){\r\n    var correct=correctOption.quiz[i];\r\n    var cor=correct.answer;\r\n    var p='option'+cor;\r\n  \r\n    var cor='option'+cor;\r\n    cor_array[i]=eval('correct.'+p);\r\n    console.log(cor_array[i]);\r\n\r\n  \r\n  }\r\n \r\n  for(var i=0;i<10;i++)\r\n  {\r\n    if(answer[i+1]===cor_array[i])\r\n    {\r\n      eachScore[i] = 10;\r\n      score+=10;\r\n    \r\n    }\r\n\r\n    else{\r\n      eachScore[i] = 0;\r\n    }\r\n  }\r\n\r\n  ThisResponse.update({_id: response._id}, {$set: {['score.' + userId]: score} });\r\n  console.log(ThisResponse.findOne(response._id).score);\r\n  eachScore[10] = score;\r\n\r\n  Meteor.call('saveStats');\r\n // console.log('b..............'+eachScore[2]);\r\n  //Session.set('score', score);\r\n  //console.log(response.score.userId);\r\n\r\n\r\n  return eachScore;\r\n},\r\n\r\n saveStats: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response_doc = ThisResponse.findOne(responseID);\r\n    // var user_id = \r\n    var category = ThisQuiz.findOne(response_doc.quizID).category;\r\n    // for (var i=0 ; i<user_ids.length ; i++){\r\n      // var id = user_ids[i];\r\n      // var user_doc = Meteor.users.findOne(id);\r\n      // var rank = getRanking\r\n\r\n      var new_stat = {quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID};\r\n      // console.log(new_stat);\r\n      if (Meteor.user().stats)\r\n      Meteor.users.update(Meteor.user(), { $push: { stats: new_stat }});\r\n      else\r\n        Meteor.users.update(Meteor.user(), {$set: {stats: [new_stat]} });\r\n      // Meteor.users.update(id, { $push: { stats: new_stat }});\r\n    // }\r\n  },\r\n\r\n\r\n\r\n\r\n  getQuiz: function (){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var quizID = ThisResponse.findOne(responseID).quizID;\r\n    var randomQuiz = ThisQuiz.findOne(quizID);\r\n    var quizQuestions = randomQuiz.quiz;\r\n    for (var i=0 ; i<quizQuestions.length ; i++){\r\n      delete quizQuestions[i][\"answer\"];\r\n    }\r\n       return quizQuestions;\r\n  }\r\n}\r\n \r\n  },\r\n\r\n  getRandomQuizID: function(category){\r\n    var randomQuiz = ThisQuiz.find({category:category}).fetch();\r\n    var index = Math.floor(Math.random() * randomQuiz.length);\r\n    if(index === previousValue) {\r\n      index = (index + 1) % randomQuiz.length;\r\n      previousValue = index;\r\n    }\r\n   \r\n    randomQuiz = randomQuiz[index];\r\n    return randomQuiz._id;\r\n  },\r\n\r\n  createResponse: function(type, category){\r\n  \r\n    if (! Meteor.userId()) { throw new Meteor.Error('not-authorized'); }\r\n\r\n    var quizID = Meteor.call('getRandomQuizID', category);\r\n\r\n    var responseID = ThisResponse.insert({\r\n      userID: [Meteor.userId()],\r\n      category:category,\r\n      quizID: quizID,\r\n      type: type,\r\n      answers: {[Meteor.userId()]: {}},\r\n      time_left: 60,\r\n      waiting_time: 60,\r\n      score: {},\r\n      conductedAt: new Date()\r\n    });\r\n\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});\r\n  },\r\n\r\n  setResponse: function (question, answer){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    ThisResponse.update(responseID, {$set: {['answers.' + user + '.' + question]: answer}});\r\n  },\r\n\r\n  getResponse: function(question){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    var response = ThisResponse.findOne(responseID).answers;\r\n    var answer = eval('response.' + user + '[' + question + ']');\r\n    return answer;\r\n  }\r\n}\r\n  },\r\n\r\n  setTimer: function(new_time){\r\n    if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n        var responseID = Meteor.user().profile.current_response_id;\r\n        var response = ThisResponse.findOne(responseID);\r\n        if (response.time_left > new_time)\r\n          ThisResponse.update(response._id, {$set: {time_left: new_time}});\r\n      }\r\n    }\r\n  },\r\n\r\n  getTimer: function(){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).time_left;\r\n\r\n  }\r\n}\r\n  },\r\n  endquiz:function(id){\r\n   Meteor.users.update({ _id:id},{$set:{\"profile.current_response_id\":\"\"}});\r\n  },\r\n\r\n  setWaitingTimer: function(new_time){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    if (response.waiting_time > new_time)\r\n      ThisResponse.update(response._id, {$set: {waiting_time: new_time}});\r\n  },\r\n\r\n  getWaitingTimer: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).waiting_time;\r\n  },\r\n\r\n  'setGroupResponseId': function(responseID) {\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});      \r\n  },\r\n\r\n  getRanking: function(){\r\n    //var responseID = 'vxprdPF2CG9jdvRQZ';\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    var scores = ThisResponse.findOne(response._id).score;\r\n    var temp = {};\r\n\r\n    console.log(scores);\r\n\r\n    for (var key in scores) {\r\n      temp[Meteor.users.findOne(key).username] = scores[key];\r\n      console.log('Hello.................'+temp[Meteor.users.findOne(key).emails[0].address])\r\n    }\r\n\r\n    scores = temp;\r\n\r\n    var sortable = [];\r\n    for (var entry in scores)\r\n      sortable.push([entry, scores[entry]]);\r\n    sortable.sort(function(a, b) {return b[1] - a[1]})\r\n    console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]\r\n    console.log(sortable[0][0]+ ' 00');\r\n    console.log(sortable[0][1]+ ' 01');\r\n\r\n    var ranks = [];\r\n    var arr1 = [];\r\n    var arr2 = [];\r\n    var arr3 = [];\r\n    arr1[0] = 1;\r\n    var count = 1;\r\n    for(var i=0;i<sortable.length;i++){\r\n      arr2[i] = sortable[i][0];\r\n      arr3[i] = sortable[i][1];\r\n      if(i>0){\r\n        if(arr3[i]===arr3[i-1]){\r\n          arr1[i] = count;\r\n        }\r\n\r\n        else{\r\n          count = i+1;\r\n          arr1[i] = count;  \r\n        }\r\n      }\r\n\r\n      var obj = {arr1: arr1[i], arr2: arr2[i], arr3: arr3[i]};\r\n      ranks.push(obj);\r\n    }\r\n\r\n    return ranks;\r\n    \r\n  },\r\n   getProfileData: function(){\r\n    var userId = Meteor.userId();\r\n    var user = Meteor.users.findOne(userId);\r\n    var username = user.username;\r\n    var email = user.emails[0].address;\r\n    var created = user.createdAt;\r\n    var stats = user.stats;\r\n    var obj = {username: username, email: email, created: created, stats: stats};\r\n    return obj;\r\n  },\r\n\r\n  addQuizFunction: function (creater, category, que_array, conductQuiz, quizTime) {\r\n\r\n    // Make sure the user is logged in and is admin before inserting a task\r\n    if (! Meteor.userId()) {\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    var quizID = ThisQuiz.insert({\r\n      quizCreater: creater,\r\n      category: category,\r\n      createdAt: new Date(),\r\n      quiz: que_array\r\n    });\r\n\r\n    if (conductQuiz == 'yes')\r\n      Meteor.call('createHeadrushResponse', quizID, quizTime, category);\r\n  },\r\n\r\n  createHeadrushResponse: function(quizID, quizTime, category){\r\n    ThisResponse.insert({\r\n      userID: [],\r\n      quizID: quizID,\r\n      type: 'Group',\r\n      category: category,\r\n      answers: {},\r\n      time_left: 1200,\r\n      waiting_time: 600,\r\n      score: {},\r\n      conductedByHeadRush: true,\r\n      conductedAt: new Date(quizTime)\r\n    });\r\n  }\r\n\r\n});\r\n}"]}}]