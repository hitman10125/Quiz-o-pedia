[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nSession = Package.session.Session;\nPersistentSession = Package['u2622:persistent-session'].PersistentSession;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"ind_quiz.html\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// template.ind_quiz.js                                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ApplicationLayout\");                                                                             // 2\nTemplate[\"ApplicationLayout\"] = new Template(\"Template.ApplicationLayout\", (function() {                               // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze._TemplateWith(function() {                                                                            // 5\n    return \"template1\";                                                                                                // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 8\n  }), \"\\n\t\", Blaze._TemplateWith(function() {                                                                          // 9\n    return \"template2\";                                                                                                // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 12\n  }) ];                                                                                                                // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\nTemplate.__checkName(\"appBody\");                                                                                       // 16\nTemplate[\"appBody\"] = new Template(\"Template.appBody\", (function() {                                                   // 17\n  var view = this;                                                                                                     // 18\n  return [ HTML.Raw(\"<!-- {{> navigation}}\\n -->\\n \t\t\"), HTML.DIV({                                                    // 19\n    \"class\": \"container\"                                                                                               // 20\n  }, \"\\n \t\t\t\", HTML.DIV({                                                                                              // 21\n    \"class\": \"row\"                                                                                                     // 22\n  }, \"\\n \t\t\t\t\t\", HTML.DIV({                                                                                            // 23\n    \"class\": \"col-md-6\"                                                                                                // 24\n  }, \"\\n \t\t\t\", Spacebars.include(view.lookupTemplate(\"loginForm\")), \"\\n \t\t\t\t\t\"), \"\\n \t\t\t\t\t\", HTML.DIV({                // 25\n    \"class\": \"col-md-6\"                                                                                                // 26\n  }, \"\\n \t\t\t\", Spacebars.include(view.lookupTemplate(\"signupForm\")), \"\\n \t\t\t\t\"), \"\\n \t\t\t\"), \"\t\\n \t\t\") ];               // 27\n}));                                                                                                                   // 28\n                                                                                                                       // 29\nTemplate.__checkName(\"ranking\");                                                                                       // 30\nTemplate[\"ranking\"] = new Template(\"Template.ranking\", (function() {                                                   // 31\n  var view = this;                                                                                                     // 32\n  return Blaze.Each(function() {                                                                                       // 33\n    return Spacebars.call(view.lookup(\"userRanking\"));                                                                 // 34\n  }, function() {                                                                                                      // 35\n    return [ \"\\n\t\t\", Blaze.View(\"lookup:arr1\", function() {                                                            // 36\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 37\n    }), \"\\n\t\t\", Blaze.View(\"lookup:arr2\", function() {                                                                 // 38\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 39\n    }), \"\\n\t\t\", Blaze.View(\"lookup:arr3\", function() {                                                                 // 40\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 41\n    }), HTML.BR(), HTML.BR(), \"\\n\t\" ];                                                                                 // 42\n  });                                                                                                                  // 43\n}));                                                                                                                   // 44\n                                                                                                                       // 45\nTemplate.__checkName(\"signupForm\");                                                                                    // 46\nTemplate[\"signupForm\"] = new Template(\"Template.signupForm\", (function() {                                             // 47\n  var view = this;                                                                                                     // 48\n  return HTML.Raw('<form id=\"signup-form\">\\n\t\t\t<h3 id=\"sub_title\">Sign Up</h3>\\n\\n\t\t\t<label for=\"signup-username\">Username</label>\\n\t\t\t<input type=\"text\" id=\"signup-username\" class=\"form-control\" placeholder=\"Username\"><br>\\n\t\t\t   \\n             \\n\t\t\t<label for=\"signup-email\">Email</label>\\n\t\t\t<input type=\"text\" id=\"signup-email\" class=\"form-control\" placeholder=\"Email\"><br>\\n\\n\t\t\t\\n\t\t\t<label for=\"signup-password\">Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-password\" class=\"form-control\" placeholder=\"Password\"><br>\\n\t\t\t\\n\t\t    \\n\t\t\t\\n\t\t\t<label for=\"signup-confirm\">Confirm Password</label>\\n\t\t\t<input type=\"password\" id=\"signup-confirm\" class=\"form-control\" placeholder=\"Confirm password\"><br>\\n\\n\t\t\t<button class=\"btn btn-primary\" type=\"submit\">SignUp</button>\\n\\n\t\t</form>');\n}));                                                                                                                   // 50\n                                                                                                                       // 51\nTemplate.__checkName(\"loginForm\");                                                                                     // 52\nTemplate[\"loginForm\"] = new Template(\"Template.loginForm\", (function() {                                               // 53\n  var view = this;                                                                                                     // 54\n  return HTML.Raw('<form id=\"login-form\">\\n\t\t\t<h3 id=\"sub_title\">Log In</h3>\\n\\n\t\t\t<label for=\"login-username\">Username</label>\\n\t\t\t<input type=\"text\" id=\"login-username\" class=\"form-control\" placeholder=\"Username\"><br>\\n\\n\t\t\t<label for=\"login-password\">Password</label>\\n\t\t\t<input type=\"password\" id=\"login-password\" class=\"form-control\" placeholder=\"Password\"><br>\\n\\n\t\t\t<button class=\"btn btn-primary\" type=\"submit\">Log In</button>\\n\\n\t\t</form>');\n}));                                                                                                                   // 56\n                                                                                                                       // 57\nTemplate.__checkName(\"emptyTemplate\");                                                                                 // 58\nTemplate[\"emptyTemplate\"] = new Template(\"Template.emptyTemplate\", (function() {                                       // 59\n  var view = this;                                                                                                     // 60\n  return \"\";                                                                                                           // 61\n}));                                                                                                                   // 62\n                                                                                                                       // 63\nTemplate.__checkName(\"waiting_time\");                                                                                  // 64\nTemplate[\"waiting_time\"] = new Template(\"Template.waiting_time\", (function() {                                         // 65\n  var view = this;                                                                                                     // 66\n  return Blaze.If(function() {                                                                                         // 67\n    return Spacebars.call(view.lookup(\"ended\"));                                                                       // 68\n  }, function() {                                                                                                      // 69\n    return [ \"\\n\t\", HTML.H3(\"Time's Up!\"), \"\\n\" ];                                                                     // 70\n  }, function() {                                                                                                      // 71\n    return [ \"\\n\t\", Blaze.View(\"lookup:time_left\", function() {                                                        // 72\n      return Spacebars.mustache(view.lookup(\"time_left\"));                                                             // 73\n    }), \"\\n\" ];                                                                                                        // 74\n  });                                                                                                                  // 75\n}));                                                                                                                   // 76\n                                                                                                                       // 77\nTemplate.__checkName(\"navigation\");                                                                                    // 78\nTemplate[\"navigation\"] = new Template(\"Template.navigation\", (function() {                                             // 79\n  var view = this;                                                                                                     // 80\n  return [ HTML.NAV({                                                                                                  // 81\n    \"class\": \"navbar navbar-default\"                                                                                   // 82\n  }, \"\\n\t\t\", HTML.DIV({                                                                                                // 83\n    \"class\": \"container-fluid\"                                                                                         // 84\n  }, \"\\n\t\t\t\", HTML.Raw('<div class=\"navbar-header\">\\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#mainNavBar\">\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t\t<span class=\"icon-bar\"></span>\\n\t\t\t\t</button>\\n\t\t\t\t<a href=\"#\" class=\"navbar-brand\">Quiz-o-Pedia</a>\\n\t\t\t</div>'), \"\\n\\n\t\t  \t\", HTML.DIV({\n    \"class\": \"collapse navbar-collapse\",                                                                               // 86\n    id: \"mainNavBar\"                                                                                                   // 87\n  }, \"\\n\t\t  \t\t\", HTML.UL({                                                                                             // 88\n    \"class\": \"nav navbar-nav\"                                                                                          // 89\n  }, \"\\n\t\t  \t\t\t\", HTML.Raw('<li class=\"active\"><a href=\"#\">HOME</a></li>'), \"\\n\t\t  \t\t\t\", HTML.LI(HTML.A({              // 90\n    href: function() {                                                                                                 // 91\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                                 // 92\n        route: \"profile1\"                                                                                              // 93\n      }));                                                                                                             // 94\n    },                                                                                                                 // 95\n    id: \"profileButton\"                                                                                                // 96\n  }, \"PROFILE\")), \"\\n\t\t  \t\t\"), \"\\n\t\t\t\t\", HTML.UL({                                                                     // 97\n    \"class\": \"nav navbar-nav navbar-right\"                                                                             // 98\n  }, \"\\n\t\t\t\t\t\", Blaze.If(function() {                                                                                  // 99\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 100\n  }, function() {                                                                                                      // 101\n    return [ \"\t\\n\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                             // 102\n      href: function() {                                                                                               // 103\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                               // 104\n          route: \"home\"                                                                                                // 105\n        }));                                                                                                           // 106\n      },                                                                                                               // 107\n      id: \"logoutbtn\"                                                                                                  // 108\n    }, \"LOGOUT\")), \"\\n\t\t\t\t\t\" ];                                                                                        // 109\n  }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\"), \"\\n\t\", Spacebars.include(view.lookupTemplate(\"yield\")) ];                  // 110\n}));                                                                                                                   // 111\n                                                                                                                       // 112\nTemplate.__checkName(\"quizSelect\");                                                                                    // 113\nTemplate[\"quizSelect\"] = new Template(\"Template.quizSelect\", (function() {                                             // 114\n  var view = this;                                                                                                     // 115\n  return [ HTML.Raw('<!-- {{> navigation}} -->\\n\t<form class=\"quizParameters\">\\n\\n\t\t<div class=\"form-group\">\\n\t\t\t<label>Type:</label>\\n\t\t\t<input type=\"radio\" name=\"quizType\" value=\"Individual\" required=\"\"> Individual\\n\t\t\t<input type=\"radio\" name=\"quizType\" value=\"Group\" required=\"\"> Group\\n\t\t</div>\\n\\n\\n\t\t<div class=\"form-group\">\\n\t\t\t<label>Category</label>\\n\t\t\t<select id=\"quizCategory\">\\n\t\t\t  <option value=\"General\">General</option>\\n\t\t\t  <option value=\"MELA\">MELA</option>\\n\t\t\t  <option value=\"Sports\">Sports</option>\\n\t\t\t</select>\\n\t\t</div>\\n\\n\t\t\\n\\n\t<button type=\"submit\" value=\"Submit\" class=\"btn btn-success\">Submit</button>\\n\t</form>\\n\\n\t\\n\t'), Blaze._TemplateWith(function() {\n    return {                                                                                                           // 117\n      template: Spacebars.call(\"online\")                                                                               // 118\n    };                                                                                                                 // 119\n  }, function() {                                                                                                      // 120\n    return Spacebars.include(function() {                                                                              // 121\n      return Spacebars.call(Template.__dynamic);                                                                       // 122\n    });                                                                                                                // 123\n  }) ];                                                                                                                // 124\n}));                                                                                                                   // 125\n                                                                                                                       // 126\nTemplate.__checkName(\"questionSelect\");                                                                                // 127\nTemplate[\"questionSelect\"] = new Template(\"Template.questionSelect\", (function() {                                     // 128\n  var view = this;                                                                                                     // 129\n  return [ HTML.Raw(\"<!-- {{#if ended}}\\n\t\t<h3>Time's Up!</h3>\\n\t{{else}}\\n\t\t{{time_left}}\\n\t{{/if}} -->\\n\t\"), Blaze.View(\"lookup:time_left\", function() {\n    return Spacebars.mustache(view.lookup(\"time_left\"));                                                               // 131\n  }), HTML.Raw('\\n\\n\t<div class=\"form-group\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"1\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"2\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"3\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"4\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"5\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"6\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"7\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"8\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"9\">\\n\t\t<input type=\"button\" name=\"questionNumber\" value=\"10\">\\n\t</div>') ];\n}));                                                                                                                   // 133\n                                                                                                                       // 134\nTemplate.__checkName(\"questionShow\");                                                                                  // 135\nTemplate[\"questionShow\"] = new Template(\"Template.questionShow\", (function() {                                         // 136\n  var view = this;                                                                                                     // 137\n  return [ \"Question: \", Blaze.View(\"lookup:questionData.question\", function() {                                       // 138\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"question\"));                                 // 139\n  }), \"\\n\t\", HTML.DIV({                                                                                                // 140\n    \"class\": \"form-group\"                                                                                              // 141\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 142\n    type: \"radio\",                                                                                                     // 143\n    name: \"questionAnswer\",                                                                                            // 144\n    value: function() {                                                                                                // 145\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                // 146\n    }                                                                                                                  // 147\n  }), Blaze.View(\"lookup:questionData.option1\", function() {                                                           // 148\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option1\"));                                  // 149\n  }), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                        // 150\n    \"class\": \"form-group\"                                                                                              // 151\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 152\n    type: \"radio\",                                                                                                     // 153\n    name: \"questionAnswer\",                                                                                            // 154\n    value: function() {                                                                                                // 155\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                // 156\n    }                                                                                                                  // 157\n  }), Blaze.View(\"lookup:questionData.option2\", function() {                                                           // 158\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option2\"));                                  // 159\n  }), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                        // 160\n    \"class\": \"form-group\"                                                                                              // 161\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 162\n    type: \"radio\",                                                                                                     // 163\n    name: \"questionAnswer\",                                                                                            // 164\n    value: function() {                                                                                                // 165\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                // 166\n    }                                                                                                                  // 167\n  }), Blaze.View(\"lookup:questionData.option3\", function() {                                                           // 168\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option3\"));                                  // 169\n  }), \"\\n\t\"), \"\\n\t\", HTML.DIV({                                                                                        // 170\n    \"class\": \"form-group\"                                                                                              // 171\n  }, \"\\n\t\t\", HTML.INPUT({                                                                                              // 172\n    type: \"radio\",                                                                                                     // 173\n    name: \"questionAnswer\",                                                                                            // 174\n    value: function() {                                                                                                // 175\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                // 176\n    }                                                                                                                  // 177\n  }), Blaze.View(\"lookup:questionData.option4\", function() {                                                           // 178\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"questionData\"), \"option4\"));                                  // 179\n  }), \"\\n\t\"), HTML.Raw('\\n\t<!-- {{#if showSubmitButton}} -->\\n\t \t<button type=\"submit\" value=\"submit\" id=\"onsubmitbutton\">Submit Quiz</button>\\n\t<!-- {{/if}} -->') ];\n}));                                                                                                                   // 181\n                                                                                                                       // 182\nTemplate.__checkName(\"online\");                                                                                        // 183\nTemplate[\"online\"] = new Template(\"Template.online\", (function() {                                                     // 184\n  var view = this;                                                                                                     // 185\n  return Blaze.If(function() {                                                                                         // 186\n    return Spacebars.call(view.lookup(\"totalGroupQuizzes\"));                                                           // 187\n  }, function() {                                                                                                      // 188\n    return [ \"\\n\t\t\t\t\", HTML.P(\"Group quizzes to start soon\"), \"\\n\t\t\t\t\", HTML.UL(\"\\n\t\t\t\t\", Blaze.Each(function() {      // 189\n      return Spacebars.call(view.lookup(\"showGroupQuizzes\"));                                                          // 190\n    }, function() {                                                                                                    // 191\n      return [ \"\\n\t\t\t\t\", HTML.LI(\"Category:\", Blaze.View(\"lookup:category\", function() {                               // 192\n        return Spacebars.mustache(view.lookup(\"category\"));                                                            // 193\n      }), \" Initiated By:\", Blaze.View(\"lookup:userID\", function() {                                                   // 194\n        return Spacebars.mustache(view.lookup(\"userID\"));                                                              // 195\n      })), HTML.INPUT({                                                                                                // 196\n        type: \"button\",                                                                                                // 197\n        value: \"Subscribe\",                                                                                            // 198\n        id: function() {                                                                                               // 199\n          return Spacebars.mustache(view.lookup(\"_id\"));                                                               // 200\n        }                                                                                                              // 201\n      }), \"\\n\t\t\t\t\" ];                                                                                                  // 202\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\" ];                                                                                           // 203\n  });                                                                                                                  // 204\n}));                                                                                                                   // 205\n                                                                                                                       // 206\nTemplate.__checkName(\"scoreCard\");                                                                                     // 207\nTemplate[\"scoreCard\"] = new Template(\"Template.scoreCard\", (function() {                                               // 208\n  var view = this;                                                                                                     // 209\n  return [ HTML.Raw(\"<!-- <button type='submit' value='submit' id=\\\"onsubmitbutton\\\">Submit Quiz</button> -->\\n\\n\"), HTML.P(\"\\n      Total Score: \", Blaze.View(\"lookup:getTotalScore\", function() {\n    return Spacebars.mustache(view.lookup(\"getTotalScore\"));                                                           // 211\n  }), \" \", HTML.Raw(\"<br>\"), \" \", HTML.Raw(\"<br>\"), \"\\n\\n        \", Blaze.Each(function() {                            // 212\n    return Spacebars.call(view.lookup(\"questionData\"));                                                                // 213\n  }, function() {                                                                                                      // 214\n    return [ \"\\n          Question\", Blaze.View(\"lookup:@index\", function() {                                          // 215\n      return Spacebars.mustache(view.lookup(\"@index\"));                                                                // 216\n    }), \":\", Blaze.View(\"lookup:arr1\", function() {                                                                    // 217\n      return Spacebars.mustache(view.lookup(\"arr1\"));                                                                  // 218\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 219\n      html: \"&emsp;\",                                                                                                  // 220\n      str: \" \"                                                                                                         // 221\n    }), \"  1:\", Blaze.View(\"lookup:arr2\", function() {                                                                 // 222\n      return Spacebars.mustache(view.lookup(\"arr2\"));                                                                  // 223\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 224\n      html: \"&emsp;\",                                                                                                  // 225\n      str: \" \"                                                                                                         // 226\n    }), \"  2:\", Blaze.View(\"lookup:arr3\", function() {                                                                 // 227\n      return Spacebars.mustache(view.lookup(\"arr3\"));                                                                  // 228\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 229\n      html: \"&emsp;\",                                                                                                  // 230\n      str: \" \"                                                                                                         // 231\n    }), \"  3:\", Blaze.View(\"lookup:arr4\", function() {                                                                 // 232\n      return Spacebars.mustache(view.lookup(\"arr4\"));                                                                  // 233\n    }), HTML.BR(), \"\\n        \", HTML.CharRef({                                                                        // 234\n      html: \"&emsp;\",                                                                                                  // 235\n      str: \" \"                                                                                                         // 236\n    }), \"  4:\", Blaze.View(\"lookup:arr5\", function() {                                                                 // 237\n      return Spacebars.mustache(view.lookup(\"arr5\"));                                                                  // 238\n    }), HTML.BR(), \"\\n          Correct Ans:\", Blaze.View(\"lookup:arr6\", function() {                                  // 239\n      return Spacebars.mustache(view.lookup(\"arr6\"));                                                                  // 240\n    }), HTML.BR(), \"\\n          Your Ans: \", Blaze.View(\"lookup:arr7\", function() {                                    // 241\n      return Spacebars.mustache(view.lookup(\"arr7\"));                                                                  // 242\n    }), \" \", HTML.BR(), \" \\n          Score: \", Blaze.View(\"lookup:arr8\", function() {                                 // 243\n      return Spacebars.mustache(view.lookup(\"arr8\"));                                                                  // 244\n    }), HTML.BR(), \" \", HTML.BR(), \"\\n        \" ];                                                                     // 245\n  }), \"\\n\"), \"\\n\\n\", Blaze.If(function() {                                                                             // 246\n    return Spacebars.call(view.lookup(\"Group\"));                                                                       // 247\n  }, function() {                                                                                                      // 248\n    return [ \"\\n\t\", HTML.BUTTON({                                                                                      // 249\n      type: \"submit\",                                                                                                  // 250\n      value: \"submit\",                                                                                                 // 251\n      id: \"onsubmitbutton\"                                                                                             // 252\n    }, \"Get Leaderboard\"), \"\\n\" ];                                                                                     // 253\n  }) ];                                                                                                                // 254\n}));                                                                                                                   // 255\n                                                                                                                       // 256\nTemplate.__checkName(\"profile1\");                                                                                      // 257\nTemplate[\"profile1\"] = new Template(\"Template.profile1\", (function() {                                                 // 258\n  var view = this;                                                                                                     // 259\n  return [ HTML.Raw(\"<!-- Name, Email, UserSeens, Total Quiz, Stats-->\\nName: \"), Blaze.View(\"lookup:getProfileData.username\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"username\"));                               // 261\n  }), HTML.Raw(\" <br>\\nEmail: \"), Blaze.View(\"lookup:getProfileData.email\", function() {                               // 262\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"email\"));                                  // 263\n  }), HTML.Raw(\" <br>\\nCreated On : \"), Blaze.View(\"lookup:getProfileData.created\", function() {                       // 264\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"getProfileData\"), \"created\"));                                // 265\n  }), HTML.Raw(\" <br>\") ];                                                                                             // 266\n}));                                                                                                                   // 267\n                                                                                                                       // 268\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ind_quiz.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ind_quiz.js                                                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nThisQuiz = new Mongo.Collection(\"quizzes\");                                                                            // 1\nThisResponse = new Mongo.Collection(\"responses\");                                                                      // 2\nvar q = 0;                                                                                                             // 3\nRouter.configure({                                                                                                     // 4\n  layoutTemplate: 'navigation'                                                                                         // 5\n});                                                                                                                    //\nif (Meteor.isClient) {                                                                                                 // 7\n  var updateTimeLeft;                                                                                                  // 8\n  Template.signupForm.events({                                                                                         // 9\n    'submit #signup-form': function () {                                                                               // 10\n      function submitSignupForm(e, t) {                                                                                // 10\n        e.preventDefault();                                                                                            // 11\n                                                                                                                       //\n        var input = t.find('#signup-password').value;                                                                  // 13\n        var input2 = t.find('#signup-confirm').value;                                                                  // 14\n        if (input.length < 4 || input.length > 8) {                                                                    // 15\n          alert(\"Please input the password between \" + 4 + \" and \" + 8 + \" characters\");                               // 17\n          return false;                                                                                                // 18\n        } else {                                                                                                       //\n          if (input != input2) {                                                                                       // 21\n            alert(\"Password Mismatch\");                                                                                // 22\n          } else {                                                                                                     //\n            Accounts.createUser({                                                                                      // 26\n              // /hello : []                                                                                           //\n              username: t.find('#signup-username').value,                                                              // 28\n              password: t.find('#signup-password').value,                                                              // 29\n              email: t.find('#signup-email').value,                                                                    // 30\n              profile: {                                                                                               // 31\n                confirm: t.find('#signup-confirm').value,                                                              // 32\n                current_response_id: \"\"                                                                                // 33\n              },                                                                                                       //\n              stats: []                                                                                                // 35\n                                                                                                                       //\n            });                                                                                                        //\n                                                                                                                       //\n            t.find('#signup-username').value = \"\";                                                                     // 39\n            t.find('#signup-password').value = \"\";                                                                     // 40\n            t.find('#signup-email').value = \"\";                                                                        // 41\n            t.find('#signup-confirm').value = \"\";                                                                      // 42\n            //console.log(\"signed up\");                                                                                //\n            //  Meteor.logout();                                                                                       //\n          }                                                                                                            // 25\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return submitSignupForm;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.loginForm.events({                                                                                          // 50\n    'submit #login-form': function () {                                                                                // 51\n      function submitLoginForm(e, t) {                                                                                 // 51\n        e.preventDefault();                                                                                            // 52\n                                                                                                                       //\n        var unam = t.find('#login-username').value;                                                                    // 54\n        var password = t.find('#login-password').value;                                                                // 55\n                                                                                                                       //\n        Meteor.loginWithPassword(unam, password);                                                                      // 57\n        Router.go('/quiz');                                                                                            // 58\n      }                                                                                                                //\n                                                                                                                       //\n      return submitLoginForm;                                                                                          //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  var quizQuestions = [];                                                                                              // 63\n                                                                                                                       //\n  changeAnswer = function changeAnswer(question) {                                                                     // 65\n    Meteor.call(\"getResponse\", question, function (error, result) {                                                    // 66\n      if (error) console.log(error.reason);else {                                                                      // 67\n        if (result) $('input[name=questionAnswer][value=' + result + ']').prop('checked', true);else $('input[name=questionAnswer]').prop('checked', false);\n      }                                                                                                                //\n    });                                                                                                                //\n  };                                                                                                                   //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionSelect.onCreated(function () {                                                                      // 7\n    this.time_left = new ReactiveVar(1200);                                                                            // 81\n    Session.clear('updateTimeLeft');                                                                                   // 82\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onCreated(function () {                                                                        // 85\n    this.time_left = new ReactiveVar(300);                                                                             // 86\n    Session.clear('updateWaitingTimeLeft');                                                                            // 87\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.onRendered(function () {                                                                     // 90\n    Meteor.clearInterval(Session.get('updateTimeLeft'));                                                               // 91\n    var self = this;                                                                                                   // 92\n                                                                                                                       //\n    Meteor.call(\"getQuiz\", function (error, result) {                                                                  // 94\n      if (error) console.log(error.reason);else {                                                                      // 95\n        quizQuestions = result;                                                                                        // 98\n        Session.set('selectedQuestion', '1');                                                                          // 99\n        changeAnswer('1');                                                                                             // 100\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    Meteor.call(\"getTimer\", function (error, result) {                                                                 // 106\n      if (error) console.log(error.reason);else {                                                                      // 107\n        self.time_left.set(result);                                                                                    // 110\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateTimeLeft = Meteor.setInterval(function () {                                                                  // 114\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 115\n      Meteor.call('setTimer', self.time_left.get());                                                                   // 116\n    }, 1000);                                                                                                          //\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);                                                           // 118\n    //setTimeLeft =  setInterval( function() {Meteor.call('setTimer', self.time_left.get())} , 5000 );                 //\n    //Session.set('updateTimeLeft', updateTimeLeft);                                                                   //\n    //Session.set('setTimeLeft', setTimeLeft);                                                                         //\n  });                                                                                                                  // 90\n                                                                                                                       //\n  Template.questionSelect.onDestroyed(function () {                                                                    // 124\n    //console.log('Naman');                                                                                            //\n                                                                                                                       //\n    Meteor.clearInterval('updateTimeLeft');                                                                            // 127\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onDestroyed(function () {                                                                      // 130\n    //console.log('Naman');                                                                                            //\n    Meteor.clearInterval('updateWaitingTimeLeft');                                                                     // 132\n    Session.clear('subscribed');                                                                                       // 133\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.onRendered(function () {                                                                       // 136\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                        // 137\n    var self = this;                                                                                                   // 138\n                                                                                                                       //\n    Meteor.call(\"getWaitingTimer\", function (error, result) {                                                          // 140\n      if (error) console.log(error.reason);else {                                                                      // 141\n        self.time_left.set(result);                                                                                    // 144\n      }                                                                                                                //\n    });                                                                                                                //\n                                                                                                                       //\n    updateWaitingTimeLeft = Meteor.setInterval(function () {                                                           // 148\n      self.time_left.set(self.time_left.get() - 1);                                                                    // 149\n      Meteor.call('setWaitingTimer', self.time_left.get());                                                            // 150\n    }, 1000);                                                                                                          //\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);                                                       // 152\n    // Session.set('updateTimeLeft', updateTimeLeft);                                                                  //\n    // Session.set('setTimeLeft', setTimeLeft);                                                                        //\n  });                                                                                                                  //\n                                                                                                                       // 136\n  Template.questionSelect.events({                                                                                     // 159\n    'click input': function () {                                                                                       // 160\n      function clickInput(event, template) {                                                                           // 160\n        Session.set('selectedQuestion', event.target.value);                                                           // 161\n        changeAnswer(event.target.value);                                                                              // 162\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.helpers({                                                                                            // 166\n    'showGroupQuizzes': function () {                                                                                  // 167\n      function showGroupQuizzes() {                                                                                    // 167\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 168\n        var time = new Date();                                                                                         // 169\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 170\n          // var date = new Date(Date.parse(time) - Date.parse(groupQuizzes[i].createdAt));                            //\n          // if(date.getMinutes() > 30) {                                                                              //\n          //   groupQuizzes.splice(i, 1);                                                                              //\n          // }                                                                                                         //\n          if (groupQuizzes[i].waiting_time <= 0) {                                                                     // 175\n            console.log('Hello');                                                                                      // 176\n            groupQuizzes.splice(i, 1);                                                                                 // 177\n            i = -1;                                                                                                    // 178\n            //console.log(groupQuizzes);                                                                               //\n          }                                                                                                            // 175\n        }                                                                                                              //\n        return groupQuizzes;                                                                                           // 182\n      }                                                                                                                //\n                                                                                                                       //\n      return showGroupQuizzes;                                                                                         //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'totalGroupQuizzes': function () {                                                                                 // 185\n      function totalGroupQuizzes() {                                                                                   // 185\n        var groupQuizzes = ThisResponse.find({ type: 'Group' }).fetch();                                               // 186\n        var time = new Date();                                                                                         // 187\n        for (i = 0; i < groupQuizzes.length; i++) {                                                                    // 188\n          // var date = new Date(Date.parse(time) - Date.parse(groupQuizzes[i].createdAt));                            //\n          // if(date.getMinutes() > 30) {                                                                              //\n          //   groupQuizzes.splice(i, 1);                                                                              //\n          // }                                                                                                         //\n          if (groupQuizzes[i].waiting_time <= 0) {                                                                     // 193\n            console.log('Hello');                                                                                      // 194\n            groupQuizzes.splice(i, 1);                                                                                 // 195\n            i = -1;                                                                                                    // 196\n            //console.log(groupQuizzes);                                                                               //\n          }                                                                                                            // 193\n        }                                                                                                              //\n        return groupQuizzes.length > 0;                                                                                // 200\n      }                                                                                                                //\n                                                                                                                       //\n      return totalGroupQuizzes;                                                                                        //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.online.events({                                                                                             // 204\n    'click input': function () {                                                                                       // 205\n      function clickInput() {                                                                                          // 205\n        event.preventDefault();                                                                                        // 206\n        // var quizID = $(event.target).attr('id');                                                                    //\n        // var userID = $(event.target).attr('name');                                                                  //\n        var responseID = $(event.target).attr('id');                                                                   // 205\n        var subscribed = $(event.target).attr('value');                                                                // 210\n        console.log(subscribed);                                                                                       // 211\n        Session.setPersistent('subscribed', subscribed);                                                               // 212\n        // var category = ThisResponse.find({userID: userID, quizID: quizID}).fetch()[0].category;                     //\n        // var timeLeft = ThisResponse.find({userID: userID, quizID: quizID}).fetch()[0].waiting_time;                 //\n        // console.log(quizID+\"  \"+userID+\"  \"+category+\"  \"+timeLeft+\"  \"+responseID);                                //\n        Meteor.call('setGroupResponseId', responseID);                                                                 // 205\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionSelect.helpers({                                                                                    // 220\n    time_left: function () {                                                                                           // 221\n      function time_left() {                                                                                           // 221\n        var time = Template.instance().time_left.get();                                                                // 222\n        Session.set('timeLeft', time);                                                                                 // 223\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 224\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 225\n        if (time <= 0) {                                                                                               // 226\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 227\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 228\n          Session.clear('final_answer');                                                                               // 229\n          Session.clear('subscribed');                                                                                 // 230\n        }                                                                                                              //\n        return minutes + \":\" + seconds;                                                                                // 232\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }(),                                                                                                               //\n    'ended': function () {                                                                                             // 234\n      function ended() {                                                                                               // 234\n        return Session.get('timeLeft') <= 0;                                                                           // 235\n      }                                                                                                                //\n                                                                                                                       //\n      return ended;                                                                                                    //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.waiting_time.helpers({                                                                                      // 239\n    time_left: function () {                                                                                           // 240\n      function time_left() {                                                                                           // 240\n        var time = Template.instance().time_left.get();                                                                // 241\n        Session.set('timeLeft', time);                                                                                 // 242\n        var minutes = (Math.floor(time / 60) < 10 ? '0' : '') + Math.floor(time / 60);                                 // 243\n        var seconds = (time % 60 < 10 ? '0' : '') + time % 60;                                                         // 244\n        if (time <= 0) {                                                                                               // 245\n          Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                  // 246\n          Meteor.clearInterval(Session.get('updateTimeLeft'));                                                         // 247\n          Session.clear('final_answer');                                                                               // 248\n          Session.clear('subscribed');                                                                                 // 249\n        }                                                                                                              //\n        return minutes + \":\" + seconds;                                                                                // 251\n      }                                                                                                                //\n                                                                                                                       //\n      return time_left;                                                                                                //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.helpers({                                                                                        // 255\n    'user': function () {                                                                                              // 256\n      function user() {                                                                                                // 256\n        console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");                             // 257\n        return Meteor.users.find({ _id: Meteor.userId() });                                                            // 258\n      }                                                                                                                //\n                                                                                                                       //\n      return user;                                                                                                     //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.navigation.events({                                                                                         // 262\n    'click #logoutbtn': function () {                                                                                  // 263\n      function clickLogoutbtn() {                                                                                      // 263\n        Meteor.call('endquiz', Meteor.userId());                                                                       // 264\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));                                                    // 265\n        console.log();                                                                                                 // 266\n        Meteor.clearInterval(Session.get('updateTimeLeft'));                                                           // 267\n        Session.clear('final_answer');                                                                                 // 268\n        Session.clear('subscribed');                                                                                   // 269\n        Meteor.logout();                                                                                               // 270\n      }                                                                                                                //\n                                                                                                                       //\n      return clickLogoutbtn;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #profileButton': function () {                                                                              // 273\n      function clickProfileButton() {                                                                                  // 273\n        Meteor.call(\"getProfileData\", function (error, result) {                                                       // 274\n          if (error) {                                                                                                 // 275\n            //console.log(\"Chu\");                                                                                      //\n            console.log(error.reason);                                                                                 // 277\n          } else {                                                                                                     //\n            Session.set('profileData', result);                                                                        // 281\n            Router.go('profile');                                                                                      // 282\n            //console.log(Session.get('selectedScore1'));                                                              //\n          }                                                                                                            // 280\n        });                                                                                                            //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickProfileButton;                                                                                       //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.questionShow.events({                                                                                       // 7\n    'click input': function () {                                                                                       // 294\n      function clickInput(event, template) {                                                                           // 294\n        Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')), event.target.value);                     // 295\n      }                                                                                                                //\n                                                                                                                       //\n      return clickInput;                                                                                               //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 298\n      function clickOnsubmitbutton() {                                                                                 // 298\n                                                                                                                       //\n        var final_answer = $('#onsubmitbutton').attr('value');                                                         // 300\n        Session.setPersistent('final_answer', final_answer);                                                           // 301\n        console.log(\"going Here\");                                                                                     // 302\n        Meteor.call(\"getQuestionSet\", function (error, result) {                                                       // 303\n          if (error) {                                                                                                 // 304\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 306\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.set('selectedScore', result);                                                                      // 311\n            console.log(Session.get('selectedScore'));                                                                 // 312\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getResponseSet\", function (error, result) {                                                       // 316\n          if (error) {                                                                                                 // 317\n            //console.log(\"Chu\");                                                                                      //\n            console.log(error.reason);                                                                                 // 319\n          } else {                                                                                                     //\n            Session.set('selectedScore1', result);                                                                     // 323\n            console.log(Session.get('selectedScore1'));                                                                // 324\n          }                                                                                                            //\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.call(\"getActualScore\", function (error, result) {                                                       // 328\n          if (error) {                                                                                                 // 329\n                                                                                                                       //\n            console.log(error.reason);                                                                                 // 331\n          } else {                                                                                                     //\n                                                                                                                       //\n            Session.set('selectedScore2', result);                                                                     // 336\n            console.log(Session.get('selectedScore2'));                                                                // 337\n            console.log(\"aaasssssss\" + Session.get('selectedScore2'));                                                 // 338\n          }                                                                                                            //\n        });                                                                                                            //\n        Router.go('scoreCard');                                                                                        // 341\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.questionShow.helpers({                                                                                      // 345\n    questionData: function () {                                                                                        // 346\n      function questionData() {                                                                                        // 346\n        return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];                                           // 347\n      }                                                                                                                //\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'showSubmitButton': function () {                                                                                  // 350\n      function showSubmitButton() {                                                                                    // 350\n        return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;\n      }                                                                                                                //\n                                                                                                                       //\n      return showSubmitButton;                                                                                         //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n                                                                                                                       //\n  Template.quizSelect.events({                                                                                         // 7\n    \"submit .quizParameters\": function () {                                                                            // 358\n      function submitQuizParameters(event) {                                                                           // 358\n        event.preventDefault();                                                                                        // 359\n        var selectedType = event.target.quizType.value;                                                                // 360\n        var selectedCategory = event.target.quizCategory.value;                                                        // 361\n        Session.setPersistent('selectedType', selectedType);                                                           // 362\n        Meteor.call(\"createResponse\", selectedType, selectedCategory);                                                 // 363\n      }                                                                                                                //\n                                                                                                                       //\n      return submitQuizParameters;                                                                                     //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.events({                                                                                          // 368\n                                                                                                                       //\n    'click #onsubmitbutton': function () {                                                                             // 372\n      function clickOnsubmitbutton(event) {                                                                            // 372\n        if (ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {                           // 373\n          event.preventDefault();                                                                                      // 374\n        } else {                                                                                                       //\n          Meteor.call(\"getRanking\", function (error, result) {                                                         // 377\n            if (error) {                                                                                               // 378\n                                                                                                                       //\n              console.log(error.reason);                                                                               // 380\n            } else {                                                                                                   //\n                                                                                                                       //\n              Session.set('rank', result);                                                                             // 385\n              console.log(Session.get('rank') + ' ............herep');                                                 // 386\n              Router.go('ranking');                                                                                    // 387\n            }                                                                                                          //\n          });                                                                                                          //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return clickOnsubmitbutton;                                                                                      //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.ranking.helpers({                                                                                           // 396\n    'userRanking': function () {                                                                                       // 397\n      function userRanking() {                                                                                         // 397\n        return Session.get('rank');                                                                                    // 398\n      }                                                                                                                //\n                                                                                                                       //\n      return userRanking;                                                                                              //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.scoreCard.helpers({                                                                                         // 402\n                                                                                                                       //\n    questionData: function () {                                                                                        // 404\n      function questionData() {                                                                                        // 404\n                                                                                                                       //\n        var arr1 = [];                                                                                                 // 406\n        var arr2 = [];                                                                                                 // 407\n        var arr3 = [];                                                                                                 // 408\n        var arr4 = [];                                                                                                 // 409\n        var arr5 = [];                                                                                                 // 410\n        var arr6 = [];                                                                                                 // 411\n        var arr7 = [];                                                                                                 // 412\n        var arr8 = [];                                                                                                 // 413\n        var arrayFinal = [];                                                                                           // 414\n        for (var i = 0; i < 10; i++) {                                                                                 // 415\n          arr1[i] = Session.get('selectedScore')[i].question;                                                          // 417\n          //  console.log('arr1 '+arr1[i]);                                                                            //\n          arr2[i] = Session.get('selectedScore')[i].option1;                                                           // 416\n          arr3[i] = Session.get('selectedScore')[i].option2;                                                           // 420\n          arr4[i] = Session.get('selectedScore')[i].option3;                                                           // 421\n          arr5[i] = Session.get('selectedScore')[i].option4;                                                           // 422\n          arr6[i] = Session.get('selectedScore')[i].answer;                                                            // 423\n          //   console.log('arr2 '+arr2[i]);                                                                           //\n          arr7[i] = Session.get('selectedScore1')[i + 1];                                                              // 416\n                                                                                                                       //\n          arr8[i] = Session.get('selectedScore2')[i];                                                                  // 427\n          //console.log('arr8 '+arr8[i]);                                                                              //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i] };\n          arrayFinal.push(obj);                                                                                        // 430\n        }                                                                                                              //\n                                                                                                                       //\n        console.log(\"here....................\", arrayFinal);                                                           // 435\n        //return {k1 : Session.get('selectedScore')[0], k2 : Session.get('selectedScore1')[1]};                        //\n        console.log('final............. ' + arrayFinal[0].arr1);                                                       // 404\n        return arrayFinal;                                                                                             // 438\n        //return {question : 'Hi', option1: 'Hellow'};                                                                 //\n      }                                                                                                                // 404\n                                                                                                                       //\n      return questionData;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getTotalScore': function () {                                                                                     // 444\n      function getTotalScore() {                                                                                       // 444\n        return Session.get('selectedScore2')[10];                                                                      // 445\n      }                                                                                                                //\n                                                                                                                       //\n      return getTotalScore;                                                                                            //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'Group': function () {                                                                                             // 448\n      function Group() {                                                                                               // 448\n        return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';                       // 449\n      }                                                                                                                //\n                                                                                                                       //\n      return Group;                                                                                                    //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n                                                                                                                       //\n  Template.profile1.helpers({                                                                                          // 454\n    'getProfileData': function () {                                                                                    // 455\n      function getProfileData() {                                                                                      // 455\n        return Session.get('profileData');                                                                             // 456\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'getStatsIndividual': function () {                                                                                // 459\n      function getStatsIndividual() {                                                                                  // 459\n        var statistics = Session.get('profileData').stats;                                                             // 460\n        var count = 0;                                                                                                 // 461\n        var arr1 = [];                                                                                                 // 462\n        var arr2 = [];                                                                                                 // 463\n        var arr3 = [];                                                                                                 // 464\n        var array = [];                                                                                                // 465\n                                                                                                                       //\n        for (var i = 0; i < statistics.length; i++) {                                                                  // 467\n          if (statistics[i].type === 'Individual') {                                                                   // 468\n            arr1[count] = statistics[i].category;                                                                      // 469\n            arr2[count] = statistics[i].score;                                                                         // 470\n            arr3[count] = statistics[i].takenOn;                                                                       // 471\n            var obj = { arr1: arr1[count], arr2: arr2[count], arr3: arr3[count] };                                     // 472\n            array.push(obj);                                                                                           // 473\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getStatsIndividual;                                                                                       //\n    }()                                                                                                                //\n  });                                                                                                                  //\n                                                                                                                       //\n  /* **************************************************************************************************** */           //\n}                                                                                                                      // 7\n                                                                                                                       //\nRouter.route('/', {                                                                                                    // 482\n  name: 'home',                                                                                                        // 483\n  template: 'appBody'                                                                                                  // 484\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/profile', {                                                                                             // 487\n  name: 'profile1',                                                                                                    // 488\n  template: 'profile1'                                                                                                 // 489\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/quiz', {                                                                                                // 492\n  name: 'quiz',                                                                                                        // 493\n  template: 'ApplicationLayout',                                                                                       // 494\n  onBeforeAction: function () {                                                                                        // 495\n    function onBeforeAction() {                                                                                        // 495\n      if (!Meteor.user()) {                                                                                            // 496\n        //alert('Please Log in First');                                                                                //\n        this.next();                                                                                                   // 498\n        this.render('appBody', { to: \"template1\" });                                                                   // 499\n        this.render('emptyTemplate', { to: \"template2\" });                                                             // 500\n      } else if (Meteor.user().profile.current_response_id == '') {                                                    //\n        this.next();                                                                                                   // 503\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 504\n        this.render('quizSelect', { to: \"template2\" });                                                                // 505\n      } else if ((Session.get('subscribed') === 'Subscribe' || Session.get('selectedType') === 'Group') && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0) {\n        this.next();                                                                                                   // 508\n        this.render('emptyTemplate', { to: \"template1\" });                                                             // 509\n        this.render('waiting_time', { to: \"template2\" });                                                              // 510\n        //Session.set('subscribed', '');                                                                               //\n      } else if (ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer') === 'submit') {\n          this.next();                                                                                                 // 515\n          if (Session.get('final_answer') === 'submit') {                                                              // 516\n            this.render('scoreCard', { to: \"template1\" });                                                             // 517\n            this.render('emptyTemplate', { to: \"template2\" });                                                         // 518\n          }                                                                                                            //\n          // Session.clear('selectedType');                                                                            //\n          // Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": \"\" }});                         //\n          clearInterval('updateTimeLeft');                                                                             // 514\n          clearInterval('updateWaitingTimeLeft');                                                                      // 523\n        } else {                                                                                                       //\n          this.next();                                                                                                 // 526\n          // this.render('emptyTemplate', {to:\"template1\"});                                                           //\n          //  this.render('waiting_time', {to:\"template2\"});                                                           //\n          this.render('questionSelect', { to: \"template1\" });                                                          // 525\n          this.render('questionShow', { to: \"template2\" });                                                            // 530\n        }                                                                                                              //\n    }                                                                                                                  //\n                                                                                                                       //\n    return onBeforeAction;                                                                                             //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/ranking', {                                                                                             // 536\n  template: 'ranking',                                                                                                 // 537\n  name: 'ranking'                                                                                                      // 538\n                                                                                                                       //\n});                                                                                                                    //\n                                                                                                                       //\n/* **************************************************************************************************** */             //\n                                                                                                                       //\nif (Meteor.isServer) {                                                                                                 // 545\n  var previousValue = 0;                                                                                               // 546\n  Meteor.methods({                                                                                                     // 547\n                                                                                                                       //\n    getResponseSet: function () {                                                                                      // 551\n      function getResponseSet() {                                                                                      // 551\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 554\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 556\n                                                                                                                       //\n        var userId = Meteor.userId();                                                                                  // 558\n                                                                                                                       //\n        console.log('User ' + userId);                                                                                 // 560\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 562\n        //var answer = response.answers.userId;                                                                        //\n        console.log(answer);                                                                                           // 551\n        return answer;                                                                                                 // 565\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponseSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    saveStats: function () {                                                                                           // 570\n      function saveStats() {                                                                                           // 570\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 571\n        var response_doc = ThisResponse.findOne(responseID);                                                           // 572\n        // var user_id =                                                                                               //\n        var category = ThisQuiz.findOne(response_doc.quizID).category;                                                 // 570\n        // for (var i=0 ; i<user_ids.length ; i++){                                                                    //\n        // var id = user_ids[i];                                                                                       //\n        // var user_doc = Meteor.users.findOne(id);                                                                    //\n        // var rank = getRanking                                                                                       //\n                                                                                                                       //\n        var new_stat = { quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID };\n        // console.log(new_stat);                                                                                      //\n        if (Meteor.user().stats) Meteor.users.update(Meteor.user(), { $push: { stats: new_stat } });else Meteor.users.update(Meteor.user(), { $set: { stats: [new_stat] } });\n        // Meteor.users.update(id, { $push: { stats: new_stat }});                                                     //\n        // }                                                                                                           //\n      }                                                                                                                // 570\n                                                                                                                       //\n      return saveStats;                                                                                                //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getNumberOfUsers: function () {                                                                                    // 590\n      function getNumberOfUsers() {                                                                                    // 590\n        return ThisResponse.findOne(Meteor.user().profile.current_response_id).userID.length;                          // 591\n      }                                                                                                                //\n                                                                                                                       //\n      return getNumberOfUsers;                                                                                         //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuestionSet: function () {                                                                                      // 595\n      function getQuestionSet() {                                                                                      // 595\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 597\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 599\n        var userId = Meteor.userId();                                                                                  // 600\n                                                                                                                       //\n        var currentQuiz = response.quizID;                                                                             // 603\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 605\n        var quizQuestions = correctOption.quiz;                                                                        // 606\n        return quizQuestions;                                                                                          // 607\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuestionSet;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getActualScore: function () {                                                                                      // 611\n      function getActualScore() {                                                                                      // 611\n        var _$set;                                                                                                     //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 612\n        var eachScore = [];                                                                                            // 613\n                                                                                                                       //\n        var response = ThisResponse.findOne(responseID);                                                               // 615\n        var userId = Meteor.userId();                                                                                  // 616\n                                                                                                                       //\n        var answer = eval('response.answers.' + userId);                                                               // 618\n        //   var answer = response.answers.userId;                                                                     //\n        var currentQuiz = response.quizID;                                                                             // 611\n                                                                                                                       //\n        var correctOption = ThisQuiz.findOne(currentQuiz);                                                             // 622\n        var quizQuestions = correctOption.quiz;                                                                        // 623\n                                                                                                                       //\n        var cor_array = [];                                                                                            // 625\n        var score = 0;                                                                                                 // 626\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 628\n          var correct = correctOption.quiz[i];                                                                         // 629\n          var cor = correct.answer;                                                                                    // 630\n          var p = 'option' + cor;                                                                                      // 631\n                                                                                                                       //\n          var cor = 'option' + cor;                                                                                    // 633\n          cor_array[i] = eval('correct.' + p);                                                                         // 634\n          console.log(cor_array[i]);                                                                                   // 635\n        }                                                                                                              //\n                                                                                                                       //\n        for (var i = 0; i < 10; i++) {                                                                                 // 640\n          if (answer[i + 1] === cor_array[i]) {                                                                        // 642\n            eachScore[i] = 10;                                                                                         // 644\n            score += 10;                                                                                               // 645\n          } else {                                                                                                     //\n            eachScore[i] = 0;                                                                                          // 650\n          }                                                                                                            //\n        }                                                                                                              //\n                                                                                                                       //\n        ThisResponse.update({ _id: response._id }, { $set: (_$set = {}, _$set['score.' + userId] = score, _$set) });   // 654\n        console.log(ThisResponse.findOne(response._id).score);                                                         // 655\n        eachScore[10] = score;                                                                                         // 656\n                                                                                                                       //\n        Meteor.call('saveStats');                                                                                      // 658\n        // console.log('b..............'+eachScore[2]);                                                                //\n        //Session.set('score', score);                                                                                 //\n        //console.log(response.score.userId);                                                                          //\n                                                                                                                       //\n        return eachScore;                                                                                              // 611\n      }                                                                                                                //\n                                                                                                                       //\n      return getActualScore;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getQuiz: function () {                                                                                             // 669\n      function getQuiz() {                                                                                             // 669\n        if (Meteor.user()) {                                                                                           // 670\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 671\n            var responseID = Meteor.user().profile.current_response_id;                                                // 672\n            var quizID = ThisResponse.findOne(responseID).quizID;                                                      // 673\n            var randomQuiz = ThisQuiz.findOne(quizID);                                                                 // 674\n            var quizQuestions = randomQuiz.quiz;                                                                       // 675\n            for (var i = 0; i < quizQuestions.length; i++) {                                                           // 676\n              delete quizQuestions[i][\"answer\"];                                                                       // 677\n            }                                                                                                          //\n            return quizQuestions;                                                                                      // 679\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getQuiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRandomQuizID: function () {                                                                                     // 685\n      function getRandomQuizID(category) {                                                                             // 685\n        var randomQuiz = ThisQuiz.find({ category: category }).fetch();                                                // 686\n        var index = Math.floor(Math.random() * randomQuiz.length);                                                     // 687\n        if (index === previousValue) {                                                                                 // 688\n          index = (index + 1) % randomQuiz.length;                                                                     // 689\n          previousValue = index;                                                                                       // 690\n        }                                                                                                              //\n        //console.log(index);                                                                                          //\n        randomQuiz = randomQuiz[index];                                                                                // 685\n        return randomQuiz._id;                                                                                         // 694\n      }                                                                                                                //\n                                                                                                                       //\n      return getRandomQuizID;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    createResponse: function () {                                                                                      // 697\n      function createResponse(type, category) {                                                                        // 697\n        var _answers;                                                                                                  //\n                                                                                                                       //\n        if (!Meteor.userId()) {                                                                                        // 699\n          throw new Meteor.Error('not-authorized');                                                                    // 699\n        }                                                                                                              //\n                                                                                                                       //\n        var quizID = Meteor.call('getRandomQuizID', category);                                                         // 701\n                                                                                                                       //\n        var responseID = ThisResponse.insert({                                                                         // 703\n          userID: [Meteor.userId()],                                                                                   // 704\n          category: category,                                                                                          // 705\n          quizID: quizID,                                                                                              // 706\n          type: type,                                                                                                  // 707\n          answers: (_answers = {}, _answers[Meteor.userId()] = {}, _answers),                                          // 708\n          time_left: 60,                                                                                               // 709\n          waiting_time: 60,                                                                                            // 710\n          score: {},                                                                                                   // 711\n          conductedAt: new Date()                                                                                      // 712\n        });                                                                                                            //\n                                                                                                                       //\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 715\n      }                                                                                                                //\n                                                                                                                       //\n      return createResponse;                                                                                           //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setResponse: function () {                                                                                         // 718\n      function setResponse(question, answer) {                                                                         // 718\n        var _$set2;                                                                                                    //\n                                                                                                                       //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 719\n        var user = Meteor.userId();                                                                                    // 720\n        ThisResponse.update(responseID, { $set: (_$set2 = {}, _$set2['answers.' + user + '.' + question] = answer, _$set2) });\n      }                                                                                                                //\n                                                                                                                       //\n      return setResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getResponse: function () {                                                                                         // 724\n      function getResponse(question) {                                                                                 // 724\n        if (Meteor.user()) {                                                                                           // 725\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 726\n            var responseID = Meteor.user().profile.current_response_id;                                                // 727\n            var user = Meteor.userId();                                                                                // 728\n            var response = ThisResponse.findOne(responseID).answers;                                                   // 729\n            var answer = eval('response.' + user + '[' + question + ']');                                              // 730\n            return answer;                                                                                             // 731\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getResponse;                                                                                              //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setTimer: function () {                                                                                            // 736\n      function setTimer(new_time) {                                                                                    // 736\n        if (Meteor.user()) {                                                                                           // 737\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 738\n            var responseID = Meteor.user().profile.current_response_id;                                                // 739\n            var response = ThisResponse.findOne(responseID);                                                           // 740\n            if (response.time_left > new_time) ThisResponse.update(response._id, { $set: { time_left: new_time } });   // 741\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return setTimer;                                                                                                 //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getTimer: function () {                                                                                            // 747\n      function getTimer() {                                                                                            // 747\n        if (Meteor.user()) {                                                                                           // 748\n          if (Meteor.user().profile.current_response_id !== \"\") {                                                      // 749\n            var responseID = Meteor.user().profile.current_response_id;                                                // 750\n            return ThisResponse.findOne(responseID).time_left;                                                         // 751\n          }                                                                                                            //\n        }                                                                                                              //\n      }                                                                                                                //\n                                                                                                                       //\n      return getTimer;                                                                                                 //\n    }(),                                                                                                               //\n    endquiz: function () {                                                                                             // 756\n      function endquiz(id) {                                                                                           // 756\n        Meteor.users.update({ _id: id }, { $set: { \"profile.current_response_id\": \"\" } });                             // 757\n      }                                                                                                                //\n                                                                                                                       //\n      return endquiz;                                                                                                  //\n    }(),                                                                                                               //\n                                                                                                                       //\n    setWaitingTimer: function () {                                                                                     // 760\n      function setWaitingTimer(new_time) {                                                                             // 760\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 761\n        var response = ThisResponse.findOne(responseID);                                                               // 762\n        if (response.waiting_time > new_time) ThisResponse.update(response._id, { $set: { waiting_time: new_time } });\n      }                                                                                                                //\n                                                                                                                       //\n      return setWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getWaitingTimer: function () {                                                                                     // 767\n      function getWaitingTimer() {                                                                                     // 767\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 768\n        return ThisResponse.findOne(responseID).waiting_time;                                                          // 769\n      }                                                                                                                //\n                                                                                                                       //\n      return getWaitingTimer;                                                                                          //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'setGroupResponseId': function () {                                                                                // 772\n      function setGroupResponseId(responseID) {                                                                        // 772\n        Meteor.users.update(Meteor.user(), { $set: { \"profile.current_response_id\": responseID } });                   // 773\n      }                                                                                                                //\n                                                                                                                       //\n      return setGroupResponseId;                                                                                       //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getRanking: function () {                                                                                          // 776\n      function getRanking() {                                                                                          // 776\n        //var responseID = 'vxprdPF2CG9jdvRQZ';                                                                        //\n        var responseID = Meteor.user().profile.current_response_id;                                                    // 778\n        var response = ThisResponse.findOne(responseID);                                                               // 779\n        var scores = ThisResponse.findOne(response._id).score;                                                         // 780\n        var temp = {};                                                                                                 // 781\n                                                                                                                       //\n        console.log(scores);                                                                                           // 783\n                                                                                                                       //\n        for (var key in meteorBabelHelpers.sanitizeForInObject(scores)) {                                              // 785\n          temp[Meteor.users.findOne(key).username] = scores[key];                                                      // 786\n          console.log('Hello.................' + temp[Meteor.users.findOne(key).emails[0].address]);                   // 787\n        }                                                                                                              //\n                                                                                                                       //\n        scores = temp;                                                                                                 // 790\n                                                                                                                       //\n        var sortable = [];                                                                                             // 792\n        for (var entry in meteorBabelHelpers.sanitizeForInObject(scores)) {                                            // 793\n          sortable.push([entry, scores[entry]]);                                                                       // 794\n        }sortable.sort(function (a, b) {                                                                               //\n          return b[1] - a[1];                                                                                          // 795\n        });                                                                                                            //\n        console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]                                        // 796\n        console.log(sortable[0][0] + ' 00');                                                                           // 776\n        console.log(sortable[0][1] + ' 01');                                                                           // 798\n                                                                                                                       //\n        var ranks = [];                                                                                                // 800\n        var arr1 = [];                                                                                                 // 801\n        var arr2 = [];                                                                                                 // 802\n        var arr3 = [];                                                                                                 // 803\n        arr1[0] = 1;                                                                                                   // 804\n        var count = 1;                                                                                                 // 805\n        for (var i = 0; i < sortable.length; i++) {                                                                    // 806\n          arr2[i] = sortable[i][0];                                                                                    // 807\n          arr3[i] = sortable[i][1];                                                                                    // 808\n          if (i > 0) {                                                                                                 // 809\n            if (arr3[i] === arr3[i - 1]) {                                                                             // 810\n              arr1[i] = count;                                                                                         // 811\n            } else {                                                                                                   //\n              count = i + 1;                                                                                           // 815\n              arr1[i] = count;                                                                                         // 816\n            }                                                                                                          //\n          }                                                                                                            //\n                                                                                                                       //\n          var obj = { arr1: arr1[i], arr2: arr2[i], arr3: arr3[i] };                                                   // 820\n          ranks.push(obj);                                                                                             // 821\n        }                                                                                                              //\n                                                                                                                       //\n        return ranks;                                                                                                  // 824\n      }                                                                                                                //\n                                                                                                                       //\n      return getRanking;                                                                                               //\n    }(),                                                                                                               //\n                                                                                                                       //\n    getProfileData: function () {                                                                                      // 828\n      function getProfileData() {                                                                                      // 828\n        var userId = Meteor.userId();                                                                                  // 829\n        var user = Meteor.users.findOne(userId);                                                                       // 830\n        var username = user.username;                                                                                  // 831\n        var email = user.emails[0].address;                                                                            // 832\n        var created = user.createdAt;                                                                                  // 833\n        var stats = user.stats;                                                                                        // 834\n        var obj = { username: username, email: email, created: created, stats: stats };                                // 835\n        return obj;                                                                                                    // 836\n      }                                                                                                                //\n                                                                                                                       //\n      return getProfileData;                                                                                           //\n    }()                                                                                                                //\n                                                                                                                       //\n  });                                                                                                                  //\n}                                                                                                                      //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./ind_quiz.html\");\nrequire(\"./ind_quiz.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/ind_quiz.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["ThisQuiz = new Mongo.Collection(\"quizzes\");\r\nThisResponse = new Mongo.Collection(\"responses\");\r\nvar q=0;\r\nRouter.configure({\r\n  layoutTemplate: 'navigation'\r\n});\r\nif (Meteor.isClient) {\r\n      var updateTimeLeft;\r\n      Template.signupForm.events({\r\n    'submit #signup-form': function(e,t){\r\n      e.preventDefault();\r\n\r\n      var input=t.find('#signup-password').value;\r\n      var input2=t.find('#signup-confirm').value;\r\n      if(input.length<4 || input.length> 8)  \r\n          {   \r\n          alert(\"Please input the password between \" +4+ \" and \" +8+ \" characters\");  \r\n                return false;  \r\n          }  \r\n        else{\r\n            if(input!=input2){\r\n              alert(\"Password Mismatch\");\r\n            }\r\n\r\n            else{\r\n      Accounts.createUser({\r\n        // /hello : []\r\n        username:t.find('#signup-username').value,\r\n        password:t.find('#signup-password').value,\r\n        email:t.find('#signup-email').value,\r\n        profile:{\r\n          confirm:t.find('#signup-confirm').value,\r\n          current_response_id:\"\"\r\n        },\r\n        stats : []\r\n\r\n      });\r\n      \r\n      t.find('#signup-username').value = \"\";\r\n      t.find('#signup-password').value = \"\";\r\n      t.find('#signup-email').value = \"\";\r\n      t.find('#signup-confirm').value = \"\";\r\n      //console.log(\"signed up\");\r\n    //  Meteor.logout();\r\n          }\r\n      }\r\n    }\r\n  });\r\n\r\n Template.loginForm.events({\r\n    'submit #login-form': function(e,t) {\r\n      e.preventDefault();\r\n\r\n       var unam=t.find('#login-username').value;\r\n       var password=t.find('#login-password').value;\r\n     \r\n         Meteor.loginWithPassword(unam,password);\r\n         Router.go('/quiz');\r\n    }\r\n});\r\n\r\n\r\n  var quizQuestions = [];\r\n\r\n  changeAnswer = function(question){\r\n     Meteor.call(\"getResponse\", question, function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        if (result)\r\n          $('input[name=questionAnswer][value=' + result + ']').prop('checked',true);\r\n        else\r\n          $('input[name=questionAnswer]').prop('checked',false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.questionSelect.onCreated( function() {\r\n    this.time_left = new ReactiveVar(1200);\r\n    Session.clear('updateTimeLeft');\r\n  });\r\n\r\n  Template.waiting_time.onCreated( function() {\r\n    this.time_left = new ReactiveVar(300);\r\n    Session.clear('updateWaitingTimeLeft');\r\n  });\r\n\r\n  Template.questionSelect.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getQuiz\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        quizQuestions = result;\r\n        Session.set('selectedQuestion', '1');\r\n        changeAnswer('1');\r\n      }\r\n    });\r\n\r\n\r\n\r\n    Meteor.call(\"getTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.setPersistent('updateTimeLeft', updateTimeLeft);\r\n    //setTimeLeft =  setInterval( function() {Meteor.call('setTimer', self.time_left.get())} , 5000 );\r\n    //Session.set('updateTimeLeft', updateTimeLeft);\r\n    //Session.set('setTimeLeft', setTimeLeft);\r\n  });\r\n\r\n  Template.questionSelect.onDestroyed(function() {\r\n    //console.log('Naman');\r\n    \r\n    Meteor.clearInterval('updateTimeLeft');\r\n  });\r\n\r\n  Template.waiting_time.onDestroyed(function() {\r\n    //console.log('Naman');\r\n    Meteor.clearInterval('updateWaitingTimeLeft');\r\n    Session.clear('subscribed');\r\n  });\r\n\r\n  Template.waiting_time.onRendered( function() {\r\n    Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n    var self = this;\r\n\r\n    Meteor.call(\"getWaitingTimer\", function(error, result){\r\n      if (error)\r\n        console.log(error.reason);\r\n      else {\r\n        self.time_left.set(result);\r\n      }\r\n    });\r\n\r\n    updateWaitingTimeLeft = Meteor.setInterval( function() {\r\n      self.time_left.set(self.time_left.get() - 1);\r\n      Meteor.call('setWaitingTimer', self.time_left.get());\r\n    } , 1000 );\r\n    Session.set('updateWaitingTimeLeft', updateWaitingTimeLeft);\r\n    // Session.set('updateTimeLeft', updateTimeLeft);\r\n    // Session.set('setTimeLeft', setTimeLeft); \r\n\r\n  });\r\n  \r\n\r\n  Template.questionSelect.events({\r\n    'click input': function( event,template ) {\r\n      Session.set('selectedQuestion', event.target.value);\r\n      changeAnswer(event.target.value);\r\n    }\r\n  });\r\n\r\n  Template.online.helpers({\r\n    'showGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        // var date = new Date(Date.parse(time) - Date.parse(groupQuizzes[i].createdAt));\r\n        // if(date.getMinutes() > 30) {\r\n        //   groupQuizzes.splice(i, 1);\r\n        // }\r\n        if(groupQuizzes[i].waiting_time <= 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n          //console.log(groupQuizzes);\r\n        }\r\n    }\r\n    return groupQuizzes;\r\n  },\r\n\r\n    'totalGroupQuizzes': function() {\r\n      var groupQuizzes = ThisResponse.find({type: 'Group'}).fetch();\r\n      var time = new Date();\r\n      for(i = 0; i < groupQuizzes.length; i++) {\r\n        // var date = new Date(Date.parse(time) - Date.parse(groupQuizzes[i].createdAt));\r\n        // if(date.getMinutes() > 30) {\r\n        //   groupQuizzes.splice(i, 1);\r\n        // }\r\n        if(groupQuizzes[i].waiting_time <= 0) {\r\n          console.log('Hello');\r\n          groupQuizzes.splice(i, 1);\r\n          i=-1;\r\n          //console.log(groupQuizzes);\r\n        }\r\n    }\r\n    return groupQuizzes.length > 0;\r\n    }\r\n});\r\n\r\n  Template.online.events({\r\n    'click input': function() {\r\n      event.preventDefault();\r\n      // var quizID = $(event.target).attr('id');\r\n      // var userID = $(event.target).attr('name');\r\n      var responseID = $(event.target).attr('id');\r\n      var subscribed = $(event.target).attr('value');\r\n      console.log(subscribed);\r\n      Session.setPersistent('subscribed', subscribed);\r\n      // var category = ThisResponse.find({userID: userID, quizID: quizID}).fetch()[0].category;\r\n      // var timeLeft = ThisResponse.find({userID: userID, quizID: quizID}).fetch()[0].waiting_time;\r\n      // console.log(quizID+\"  \"+userID+\"  \"+category+\"  \"+timeLeft+\"  \"+responseID);\r\n      Meteor.call('setGroupResponseId', responseID);\r\n    }\r\n  });\r\n\r\n  Template.questionSelect.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n       Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      }\r\n      return minutes+\":\"+seconds;\r\n    },\r\n     'ended': function() {\r\n       return Session.get('timeLeft') <= 0;\r\n     }\r\n  }); \r\n\r\n  Template.waiting_time.helpers({\r\n    time_left: function() {\r\n      var time = Template.instance().time_left.get();\r\n      Session.set('timeLeft', time);\r\n      var minutes = ((Math.floor(time/60) < 10) ? '0' : '') + Math.floor(time/60);\r\n      var seconds = ((time%60 < 10) ? '0' : '') + (time%60);\r\n      if(time <= 0) {\r\n        Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      }\r\n      return minutes+\":\"+seconds;\r\n    }\r\n  }); \r\n\r\n  Template.navigation.helpers({\r\n    'user': function() {\r\n      console.log(Meteor.users.findOne(Meteor.userId()).username + \"........xxx......\");\r\n        return Meteor.users.find({_id: Meteor.userId()});\r\n    }\r\n  });\r\n\r\n  Template.navigation.events({\r\n    'click #logoutbtn': function() {\r\n     Meteor.call('endquiz',Meteor.userId());\r\n     Meteor.clearInterval(Session.get('updateWaitingTimeLeft'));\r\n     console.log();\r\n     Meteor.clearInterval(Session.get('updateTimeLeft'));\r\n     Session.clear('final_answer');\r\n     Session.clear('subscribed');\r\n      Meteor.logout();\r\n    },\r\n\r\n    'click #profileButton': function(){\r\n      Meteor.call(\"getProfileData\", function(error, result){\r\n      if (error){\r\n        //console.log(\"Chu\");\r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.set('profileData', result);\r\n        Router.go('profile');\r\n       //console.log(Session.get('selectedScore1'));\r\n      }\r\n    });\r\n\r\n\r\n    }\r\n  });\r\n\r\n  /* **************************************************************************************************** */\r\n  \r\n  Template.questionShow.events({\r\n    'click input': function( event,template ) {\r\n      Meteor.call('setResponse', parseInt(Session.get('selectedQuestion')) , event.target.value );\r\n    },\r\n   \r\n     'click #onsubmitbutton' :function(){\r\n\r\n      var final_answer = $('#onsubmitbutton').attr('value');\r\n      Session.setPersistent('final_answer',final_answer);\r\n      console.log(\"going Here\");\r\n      Meteor.call(\"getQuestionSet\", function(error, result){\r\n      if (error){\r\n       \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.set('selectedScore', result);\r\n        console.log(Session.get('selectedScore'));     \r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getResponseSet\", function(error, result){\r\n      if (error){\r\n        //console.log(\"Chu\");\r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n        Session.set('selectedScore1', result);\r\n       console.log(Session.get('selectedScore1'));\r\n      }\r\n    });\r\n\r\n      Meteor.call(\"getActualScore\", function(error, result){\r\n      if (error){\r\n        \r\n        console.log(error.reason);\r\n        \r\n      }\r\n      else {\r\n      \r\n        Session.set('selectedScore2', result);\r\n        console.log(Session.get('selectedScore2'));\r\n        console.log(\"aaasssssss\"+ Session.get('selectedScore2'));\r\n      }\r\n    });\r\n      Router.go('scoreCard');\r\n  }\r\n  }); \r\n\r\n  Template.questionShow.helpers({\r\n    questionData: function() {\r\n      return quizQuestions[parseInt(Session.get('selectedQuestion')) - 1];\r\n    },\r\n\r\n   'showSubmitButton': function() {\r\n    return Session.get('selectedType') === 'Individual' || ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0;  \r\n   }\r\n  });   \r\n\r\n  /* **************************************************************************************************** */\r\n\r\n  Template.quizSelect.events({  \r\n    \"submit .quizParameters\": function (event) {\r\n      event.preventDefault();\r\n      var selectedType =  event.target.quizType.value;\r\n      var selectedCategory =  event.target.quizCategory.value;\r\n      Session.setPersistent('selectedType', selectedType);\r\n      Meteor.call(\"createResponse\", selectedType, selectedCategory);\r\n    }\r\n\r\n  });\r\n\r\n Template.scoreCard.events({  \r\n   \r\n   \r\n\r\n    'click #onsubmitbutton' :function(event){\r\n      if(ThisResponse.findOne(Meteor.user().profile.current_response_id).time_left > 0) {\r\n        event.preventDefault();\r\n      }\r\n      else {\r\n        Meteor.call(\"getRanking\", function(error, result){\r\n          if (error){\r\n             \r\n            console.log(error.reason);\r\n        \r\n          }\r\n          else {\r\n        \r\n            Session.set('rank', result);\r\n            console.log(Session.get('rank')+' ............herep');     \r\n            Router.go('ranking');\r\n          }\r\n        });\r\n      }\r\n      }\r\n\r\n  });\r\n\r\n\r\n Template.ranking.helpers({\r\n  'userRanking' : function(){\r\n    return Session.get('rank');\r\n  }  \r\n});\r\n\r\n  Template.scoreCard.helpers({\r\n \r\n  questionData: function(){\r\n   \r\n     var arr1=[];\r\n    var arr2=[];\r\n    var arr3=[];\r\n    var arr4=[];\r\n    var arr5=[];\r\n     var arr6=[];\r\n     var arr7 = [];\r\n     var arr8=[];\r\n     var arrayFinal = [];\r\n    for(var i=0;i<10;i++)\r\n    {\r\n      arr1[i]=Session.get('selectedScore')[i].question;\r\n    //  console.log('arr1 '+arr1[i]);\r\n      arr2[i]=Session.get('selectedScore')[i].option1;\r\n      arr3[i]=Session.get('selectedScore')[i].option2;\r\n      arr4[i]=Session.get('selectedScore')[i].option3;\r\n      arr5[i]=Session.get('selectedScore')[i].option4;\r\n      arr6[i]=Session.get('selectedScore')[i].answer;\r\n   //   console.log('arr2 '+arr2[i]);\r\n       arr7[i]=Session.get('selectedScore1')[i+1];\r\n\r\n       arr8[i]=Session.get('selectedScore2')[i];\r\n  //console.log('arr8 '+arr8[i]);\r\n       var obj  = {arr1: arr1[i] , arr2: arr2[i], arr3: arr3[i], arr4: arr4[i], arr5: arr5[i], arr6: arr6[i], arr7: arr7[i], arr8: arr8[i]};\r\n       arrayFinal.push(obj);\r\n\r\n\r\n     }\r\n\r\n     console.log(\"here....................\",arrayFinal);\r\n     //return {k1 : Session.get('selectedScore')[0], k2 : Session.get('selectedScore1')[1]};\r\n     console.log('final............. '+arrayFinal[0].arr1);\r\n     return arrayFinal;\r\n    //return {question : 'Hi', option1: 'Hellow'};\r\n  },\r\n\r\n  \r\n\r\n  'getTotalScore': function() {\r\n    return Session.get('selectedScore2')[10];\r\n  },\r\n\r\n  'Group': function() {\r\n    return ThisResponse.findOne(Meteor.user().profile.current_response_id).type === 'Group';\r\n  }\r\n\r\n  }); \r\n\r\n  Template.profile1.helpers({\r\n    'getProfileData': function(){\r\n      return Session.get('profileData');\r\n    },\r\n\r\n    'getStatsIndividual': function(){\r\n      var statistics = Session.get('profileData').stats;\r\n      var count=0;\r\n      var arr1 = [];\r\n      var arr2 = [];\r\n      var arr3 = [];\r\n      var array = [];\r\n\r\n      for(var i=0;i<statistics.length;i++){\r\n        if(statistics[i].type === 'Individual'){\r\n          arr1[count] = statistics[i].category;\r\n          arr2[count] = statistics[i].score;\r\n          arr3[count] = statistics[i].takenOn;\r\n          var obj = {arr1: arr1[count], arr2: arr2[count], arr3: arr3[count]};\r\n          array.push(obj);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  /* **************************************************************************************************** */\r\n}\r\n\r\nRouter.route('/', {\r\n  name: 'home',\r\n  template: 'appBody'\r\n});\r\n\r\nRouter.route('/profile', {\r\n  name: 'profile1',\r\n  template: 'profile1'\r\n});\r\n\r\nRouter.route('/quiz',{\r\n  name: 'quiz',\r\n  template: 'ApplicationLayout',\r\n  onBeforeAction: function() {\r\n  if (! Meteor.user()) {\r\n    //alert('Please Log in First');\r\n    this.next(); \r\n    this.render('appBody', {to:\"template1\"});\r\n    this.render('emptyTemplate', {to:\"template2\"}); \r\n  }\r\n  else if (Meteor.user().profile.current_response_id == '') {\r\n    this.next();\r\n    this.render('emptyTemplate', {to:\"template1\"});\r\n    this.render('quizSelect', {to:\"template2\"});\r\n  }\r\n  else if((Session.get('subscribed') === 'Subscribe' || (Session.get('selectedType') === 'Group')) && ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).waiting_time > 0)  {\r\n       this.next();\r\n       this.render('emptyTemplate', {to:\"template1\"});\r\n       this.render('waiting_time', {to:\"template2\"});\r\n       //Session.set('subscribed', '');      \r\n  }\r\n\r\n  else if(ThisResponse.findOne(Meteor.users.findOne(Meteor.user()).profile.current_response_id).time_left <= 0 || Session.get('final_answer')==='submit'){\r\n    this.next();\r\n    if(Session.get('final_answer')==='submit') {\r\n      this.render('scoreCard',{to:\"template1\"});\r\n      this.render('emptyTemplate', {to:\"template2\"});\r\n   }\r\n     // Session.clear('selectedType');\r\n     // Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": \"\" }});\r\n     clearInterval('updateTimeLeft');    \r\n     clearInterval('updateWaitingTimeLeft');\r\n  }\r\n  else{\r\n      this.next();\r\n     // this.render('emptyTemplate', {to:\"template1\"});\r\n     //  this.render('waiting_time', {to:\"template2\"}); \r\n    this.render('questionSelect', {to:\"template1\"});\r\n     this.render('questionShow', {to:\"template2\"});\r\n\r\n  }\r\n }\r\n});\r\n\r\nRouter.route('/ranking',{\r\n  template: 'ranking',\r\n  name : 'ranking'\r\n\r\n});\r\n\r\n\r\n  /* **************************************************************************************************** */\r\n\r\nif(Meteor.isServer){\r\nvar previousValue = 0;\r\nMeteor.methods({\r\n\r\n\r\n\r\n  getResponseSet: function (){\r\n    \r\n\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n \r\n  var response = ThisResponse.findOne(responseID);\r\n \r\n  var userId = Meteor.userId();\r\n \r\n  console.log('User '+userId);\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n  //var answer = response.answers.userId;\r\nconsole.log(answer);\r\n  return answer;\r\n\r\n\r\n  },\r\n\r\n  saveStats: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response_doc = ThisResponse.findOne(responseID);\r\n    // var user_id = \r\n    var category = ThisQuiz.findOne(response_doc.quizID).category;\r\n    // for (var i=0 ; i<user_ids.length ; i++){\r\n      // var id = user_ids[i];\r\n      // var user_doc = Meteor.users.findOne(id);\r\n      // var rank = getRanking\r\n\r\n      var new_stat = {quizID: response_doc.quizID, category: category, score: eval('response_doc.score.' + Meteor.userId()), takenOn: response_doc.conductedAt, type: response_doc.type, responseID: responseID};\r\n      // console.log(new_stat);\r\n      if (Meteor.user().stats)\r\n      Meteor.users.update(Meteor.user(), { $push: { stats: new_stat }});\r\n      else\r\n        Meteor.users.update(Meteor.user(), {$set: {stats: [new_stat]} });\r\n      // Meteor.users.update(id, { $push: { stats: new_stat }});\r\n    // }\r\n  },\r\n\r\n  getNumberOfUsers: function(){\r\n    return ThisResponse.findOne(Meteor.user().profile.current_response_id).userID.length;\r\n  },\r\n\r\n\r\n  getQuestionSet: function(){\r\n  \r\n   var responseID = Meteor.user().profile.current_response_id;\r\n\r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n \r\n   var currentQuiz=response.quizID;\r\n\r\n  var correctOption=(ThisQuiz.findOne(currentQuiz));\r\n  var quizQuestions = correctOption.quiz;\r\n  return quizQuestions;\r\n  \r\n},\r\n\r\n  getActualScore: function(){\r\n  var responseID = Meteor.user().profile.current_response_id;\r\n  var eachScore = [];\r\n  \r\n  var response = ThisResponse.findOne(responseID);\r\n  var userId = Meteor.userId();\r\n  \r\n  var answer = eval('response.answers.' + userId);\r\n//   var answer = response.answers.userId;\r\n   var currentQuiz = response.quizID;\r\n\r\n  var correctOption= ThisQuiz.findOne(currentQuiz);\r\n  var quizQuestions = correctOption.quiz;\r\n \r\n  var cor_array=[];\r\n  var score=0;\r\n\r\n  for(var i=0;i<10;i++){\r\n    var correct=correctOption.quiz[i];\r\n    var cor=correct.answer;\r\n    var p='option'+cor;\r\n  \r\n    var cor='option'+cor;\r\n    cor_array[i]=eval('correct.'+p);\r\n    console.log(cor_array[i]);\r\n\r\n  \r\n  }\r\n \r\n  for(var i=0;i<10;i++)\r\n  {\r\n    if(answer[i+1]===cor_array[i])\r\n    {\r\n      eachScore[i] = 10;\r\n      score+=10;\r\n    \r\n    }\r\n\r\n    else{\r\n      eachScore[i] = 0;\r\n    }\r\n  }\r\n\r\n  ThisResponse.update({_id: response._id}, {$set: {['score.' + userId]: score} });\r\n  console.log(ThisResponse.findOne(response._id).score);\r\n  eachScore[10] = score;\r\n\r\n  Meteor.call('saveStats');\r\n // console.log('b..............'+eachScore[2]);\r\n  //Session.set('score', score);\r\n  //console.log(response.score.userId);\r\n\r\n\r\n  return eachScore;\r\n},\r\n\r\n\r\n\r\n  getQuiz: function (){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var quizID = ThisResponse.findOne(responseID).quizID;\r\n    var randomQuiz = ThisQuiz.findOne(quizID);\r\n    var quizQuestions = randomQuiz.quiz;\r\n    for (var i=0 ; i<quizQuestions.length ; i++){\r\n      delete quizQuestions[i][\"answer\"];\r\n    }\r\n       return quizQuestions;\r\n  }\r\n}\r\n \r\n  },\r\n\r\n  getRandomQuizID: function(category){\r\n    var randomQuiz = ThisQuiz.find({category:category}).fetch();\r\n    var index = Math.floor(Math.random() * randomQuiz.length);\r\n    if(index === previousValue) {\r\n      index = (index + 1) % randomQuiz.length;\r\n      previousValue = index;\r\n    }\r\n    //console.log(index);\r\n    randomQuiz = randomQuiz[index];\r\n    return randomQuiz._id;\r\n  },\r\n\r\n  createResponse: function(type, category){\r\n  \r\n    if (! Meteor.userId()) { throw new Meteor.Error('not-authorized'); }\r\n\r\n    var quizID = Meteor.call('getRandomQuizID', category);\r\n\r\n    var responseID = ThisResponse.insert({\r\n      userID: [Meteor.userId()],\r\n      category:category,\r\n      quizID: quizID,\r\n      type: type,\r\n      answers: {[Meteor.userId()]: {}},\r\n      time_left: 60,\r\n      waiting_time: 60,\r\n      score: {},\r\n      conductedAt: new Date()\r\n    });\r\n\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});\r\n  },\r\n\r\n  setResponse: function (question, answer){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    ThisResponse.update(responseID, {$set: {['answers.' + user + '.' + question]: answer}});\r\n  },\r\n\r\n  getResponse: function(question){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var user = Meteor.userId();\r\n    var response = ThisResponse.findOne(responseID).answers;\r\n    var answer = eval('response.' + user + '[' + question + ']');\r\n    return answer;\r\n  }\r\n}\r\n  },\r\n\r\n  setTimer: function(new_time){\r\n    if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n        var responseID = Meteor.user().profile.current_response_id;\r\n        var response = ThisResponse.findOne(responseID);\r\n        if (response.time_left > new_time)\r\n          ThisResponse.update(response._id, {$set: {time_left: new_time}});\r\n      }\r\n    }\r\n  },\r\n\r\n  getTimer: function(){\r\n      if(Meteor.user()) {\r\n      if(Meteor.user().profile.current_response_id !== \"\") {\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).time_left;\r\n\r\n  }\r\n}\r\n  },\r\n  endquiz:function(id){\r\n   Meteor.users.update({ _id:id},{$set:{\"profile.current_response_id\":\"\"}});\r\n  },\r\n\r\n  setWaitingTimer: function(new_time){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    if (response.waiting_time > new_time)\r\n      ThisResponse.update(response._id, {$set: {waiting_time: new_time}});\r\n  },\r\n\r\n  getWaitingTimer: function(){\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    return ThisResponse.findOne(responseID).waiting_time;\r\n  },\r\n\r\n  'setGroupResponseId': function(responseID) {\r\n    Meteor.users.update(Meteor.user(), {$set: {\"profile.current_response_id\": responseID }});      \r\n  },\r\n\r\n  getRanking: function(){\r\n    //var responseID = 'vxprdPF2CG9jdvRQZ';\r\n    var responseID = Meteor.user().profile.current_response_id;\r\n    var response = ThisResponse.findOne(responseID);\r\n    var scores = ThisResponse.findOne(response._id).score;\r\n    var temp = {};\r\n\r\n    console.log(scores);\r\n\r\n    for (var key in scores) {\r\n      temp[Meteor.users.findOne(key).username] = scores[key];\r\n      console.log('Hello.................'+temp[Meteor.users.findOne(key).emails[0].address])\r\n    }\r\n\r\n    scores = temp;\r\n\r\n    var sortable = [];\r\n    for (var entry in scores)\r\n      sortable.push([entry, scores[entry]]);\r\n    sortable.sort(function(a, b) {return b[1] - a[1]})\r\n    console.log(sortable); //output [ [ 's@s.com', 10 ], [ 'a@a.com', 0 ] ]\r\n    console.log(sortable[0][0]+ ' 00');\r\n    console.log(sortable[0][1]+ ' 01');\r\n\r\n    var ranks = [];\r\n    var arr1 = [];\r\n    var arr2 = [];\r\n    var arr3 = [];\r\n    arr1[0] = 1;\r\n    var count = 1;\r\n    for(var i=0;i<sortable.length;i++){\r\n      arr2[i] = sortable[i][0];\r\n      arr3[i] = sortable[i][1];\r\n      if(i>0){\r\n        if(arr3[i]===arr3[i-1]){\r\n          arr1[i] = count;\r\n        }\r\n\r\n        else{\r\n          count = i+1;\r\n          arr1[i] = count;  \r\n        }\r\n      }\r\n\r\n      var obj = {arr1: arr1[i], arr2: arr2[i], arr3: arr3[i]};\r\n      ranks.push(obj);\r\n    }\r\n\r\n    return ranks;\r\n    \r\n  },\r\n\r\n  getProfileData: function(){\r\n    var userId = Meteor.userId();\r\n    var user = Meteor.users.findOne(userId);\r\n    var username = user.username;\r\n    var email = user.emails[0].address;\r\n    var created = user.createdAt;\r\n    var stats = user.stats;\r\n    var obj = {username: username, email: email, created: created, stats: stats};\r\n    return obj;\r\n  }\r\n\r\n});\r\n}"]}}]